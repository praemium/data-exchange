{
  "paths": {
    "/api/benchmarkperformance": {
      "get": {
        "responses": {
          "200": {
            "description": "Benchmark performance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BenchmarkReturn"
              }
            }
          }
        },
        "operationId": "GetAUBenchmarkPerformance",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "BenchmarkId",
            "in": "query",
            "required": true,
            "description": "Praemium ID of the Benchmark as returned in the benchmark endpoint.",
            "type": "string"
          },
          {
            "name": "MultiplePeriods",
            "in": "query",
            "required": false,
            "description": "The periods to return. Default to -1. <ul><li>0 - For the period only</li><li>4 - 1 mth, 3 mths, the period</li><li>9 - 1 mth, 3 mths, 6 mths, 1 yr, Since inception</li><li>11 - 1 mth, 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs, Since inception</li><li>16 - 1 mth, 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs, 10 yrs, Since inception</li><li>1 - 1 mth, 3 mths, 1 yr, the period</li><li>24 - 1 mth, 3 mths, 1 yr, 3 yrs, 5 yrs, the period</li><li>15 - 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs</li><li>17 - 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs</li><li>14 - 3 mths, 6 mths, 1 yr, 2 yrs, Since inception</li><li>13 - 3 mths, 1 yr, 2 yrs, 5 yrs, Since Inception</li><li>21 - 3 mths, 1 yr, 2 yrs, 3 yrs, Since inception</li><li>22 - 3 mths, 1 yr, 2 yr, 3 yrs, 5 yrs</li><li>18 - 3 mths, 1 yr, 3 yrs, 5 yrs, 7 yrs</li><li>2 - 3 mths, 1 yr, 3 yrs, the period</li><li>8 - 3 mths, 1 yr, 3 yrs, 5 yrs, Since inception</li><li>10 - 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs</li><li>19 - 1 yr, 3 yrs, 5 yrs, 7 yrs, 10 yrs</li><li>3 - 1 yr, 3 yrs, 5 yrs, the period</li><li>23 - 1 yr, 5 yrs, 10 yrs, Since inception</li><li>7 - Qtr to date, Fin yr to date, 1 yr,  Since inception</li><li>5 - Qtr to date, Fin yr to date, 3 yrs, 5 yrs</li><li>6 - Qtr to date, Fin yr to date, 3 yrs, Since inception</li><li>20 - The period, Qtr to date, Fin yr to date, Since inception</li><li>-1 - Account default</li></ul>",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/holdingsexcluded": {
      "get": {
        "responses": {
          "200": {
            "description": "Holdings excluded",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HoldingExcluded"
              }
            }
          }
        },
        "operationId": "GetAUHoldingsExcluded",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/ssologin": {
      "post": {
        "responses": {
          "200": {
            "description": "SSO login",
            "schema": {
              "$ref": "#/definitions/SsoLoginResponse"
            }
          }
        },
        "operationId": "SsoLogin",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SsoLoginRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/superfunds": {
      "get": {
        "responses": {
          "200": {
            "description": "Super Funds",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SuperFund"
              }
            }
          }
        },
        "operationId": "GetAUSuperFunds",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/realisedcgtdetail": {
      "get": {
        "responses": {
          "200": {
            "description": "Realised CGT detail",
            "schema": {
              "$ref": "#/definitions/RealisedCgtDetail"
            }
          }
        },
        "operationId": "GetAURealisedCgtDetail",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/realisedcgt": {
      "get": {
        "responses": {
          "200": {
            "description": "Realised CGT",
            "schema": {
              "$ref": "#/definitions/TaxSummary"
            }
          }
        },
        "operationId": "GetAURealisedCgt",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/unrealisedcgtdetail": {
      "get": {
        "responses": {
          "200": {
            "description": "Unrealised CGT detail",
            "schema": {
              "$ref": "#/definitions/UnrealisedCgtParcelIEnumerablePagedResponse"
            }
          }
        },
        "operationId": "GetAUUnrealisedCgtDetail",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "description": "Page size to return. Default to 100.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/unrealisedcgt": {
      "get": {
        "responses": {
          "200": {
            "description": "Unrealised CGT",
            "schema": {
              "$ref": "#/definitions/UnrealisedCgt"
            }
          }
        },
        "operationId": "GetAUUnrealisedCgt",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/securityexclusions": {
      "get": {
        "responses": {
          "200": {
            "description": "Security exclusions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityExclusionResponse"
              }
            }
          }
        },
        "operationId": "GetAUSecurityExclusions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "ReplaceAUSecurityExclusions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutSecurityExclusionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "AddAUSecurityExclusions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostSecurityExclusionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "DeleteAUSecurityExclusions",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "securityId",
            "in": "query",
            "required": false,
            "description": "Security ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/securitysubstitutions": {
      "get": {
        "responses": {
          "200": {
            "description": "Security substitutions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecuritySubstitutionResponse"
              }
            }
          }
        },
        "operationId": "GetAUSecuritySubstitutions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "ReplaceAUSecuritySubstitutions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutSecuritySubstitutionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "AddAUSecuritySubstitutions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostSecuritySubstitutionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "DeleteAUSecuritySubstitutions",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "fromSecurityId",
            "in": "query",
            "required": false,
            "description": "Security ID to substitute from.",
            "type": "string"
          },
          {
            "name": "toSecurityId",
            "in": "query",
            "required": false,
            "description": "Security ID to substitute to.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/securitycustomisations": {
      "get": {
        "responses": {
          "200": {
            "description": "Security customisations response",
            "schema": {
              "$ref": "#/definitions/SecurityCustomisationResponse"
            }
          }
        },
        "operationId": "GetAUSecurityCustomisations",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Security customisations response",
            "schema": {
              "$ref": "#/definitions/SecurityCustomisationResponse"
            }
          }
        },
        "operationId": "ReplaceAUSecurityCustomisations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutSecurityCustomisationRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/minimumtradesize": {
      "get": {
        "responses": {
          "200": {
            "description": "Minimum trade size",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RebalanceTolerance"
              }
            }
          }
        },
        "operationId": "GetAUMinimumTradeSize",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "UpdateAUMinimumTradeSize",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PatchMinimumTradeSizeRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/allesgcategories": {
      "get": {
        "responses": {
          "200": {
            "description": "ESG categories",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EsgCategory"
              }
            }
          }
        },
        "operationId": "GetAUAllEsgCategories",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/esgcategories": {
      "get": {
        "responses": {
          "200": {
            "description": "ESG category IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "GetAUAccountEsgCategories",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "AddAUAccountEsgCategories",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostEsgCategoryRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "ReplaceAUAccountEsgCategories",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutEsgCategoryRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "DeleteAUAccountEsgCategories",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "description": "The category ID as returned by the all ESG categories endpoint.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "Transactions",
            "schema": {
              "$ref": "#/definitions/TransactionIEnumerablePagedResponse"
            }
          }
        },
        "operationId": "GetAUTransactions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "BuysAndSellsOnly",
            "in": "query",
            "required": false,
            "description": "Whether to includes only Buy, Close position, Sell, Short Sell, Write Opt. to Open, Write Opt. to Close, Buy Opt. to open, Buy Opt. to close. Default to false.",
            "type": "boolean"
          },
          {
            "name": "ShowUnconfirmed",
            "in": "query",
            "required": false,
            "description": "Whether to show unconfirmed transactions. Default to false.",
            "type": "boolean"
          },
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Size",
            "in": "query",
            "required": false,
            "description": "Page size to return. Default to 100.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "required": false,
            "description": "TransactionDate = 0, Security = 1. Default to 0.",
            "type": "enum"
          },
          {
            "name": "Order",
            "in": "query",
            "required": false,
            "description": "Asc = 0, Desc = 1. Default to 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/cashtransactions": {
      "get": {
        "responses": {
          "200": {
            "description": "Cash transactions",
            "schema": {
              "$ref": "#/definitions/CashBookIEnumerablePagedResponse"
            }
          }
        },
        "operationId": "GetAUCashTransactions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "IncludePendingUnsettled",
            "in": "query",
            "required": false,
            "description": "Whether to include pending unsettled cash transactions. Default to false.",
            "type": "boolean"
          },
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Size",
            "in": "query",
            "required": false,
            "description": "Page size to return. Default to 100.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/unsettledtransactions": {
      "get": {
        "responses": {
          "200": {
            "description": "Unsettled transactions",
            "schema": {
              "$ref": "#/definitions/UnsettledTransactionIEnumerablePagedResponse"
            }
          }
        },
        "operationId": "GetAUUnsettledTransactions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "BuysAndSellsOnly",
            "in": "query",
            "required": false,
            "description": "Whether to includes only Buy, Close position, Sell, Short Sell, Write Opt. to Open, Write Opt. to Close, Buy Opt. to open, Buy Opt. to close. Default to false.",
            "type": "boolean"
          },
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Size",
            "in": "query",
            "required": false,
            "description": "Page size to return. Default to 100.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "required": false,
            "description": "TransactionDate = 0, Security = 1. Default to 0.",
            "type": "enum"
          },
          {
            "name": "Order",
            "in": "query",
            "required": false,
            "description": "Asc = 0, Desc = 1. Default to 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/dividendreinvestmentdetails": {
      "get": {
        "responses": {
          "200": {
            "description": "Dividend reinvestment details",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DividendReinvestmentDetail"
              }
            }
          }
        },
        "operationId": "GetAUDividendReinvestmentDetails",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "operationId": "GetUser",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "description": "User Name.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/user": {
      "post": {
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#/definitions/UserCreationResponse"
            }
          }
        },
        "operationId": "CreateUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostUserRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/useraccounts": {
      "patch": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "LinkUserAccounts",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PatchUserAccountRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/userlinks": {
      "get": {
        "responses": {
          "200": {
            "description": "Account user links",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountUserLink"
              }
            }
          }
        },
        "operationId": "GetAUAccountUserLinks",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accountlinks": {
      "get": {
        "responses": {
          "200": {
            "description": "User account links",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAccountLink"
              }
            }
          }
        },
        "operationId": "GetAUUserAccountLinks",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "description": "User ID.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/account/Sma": {
      "post": {
        "responses": {
          "200": {
            "description": "Account",
            "schema": {
              "$ref": "#/definitions/AccountCreationResponse"
            }
          }
        },
        "operationId": "CreateSMAAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SMAAccountRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/account/SuperSmaAccumulation": {
      "post": {
        "responses": {
          "200": {
            "description": "Account",
            "schema": {
              "$ref": "#/definitions/AccountCreationResponse"
            }
          }
        },
        "operationId": "CreateSuperSmaAccumulationAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SuperSmaAccumulationAccountRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/account/SuperSmaPension": {
      "post": {
        "responses": {
          "200": {
            "description": "Account",
            "schema": {
              "$ref": "#/definitions/AccountCreationResponse"
            }
          }
        },
        "operationId": "CreateSuperSmaPensionAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SuperSmaPensionAccountRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/appform": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "GetAUAppForm",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts": {
      "get": {
        "responses": {
          "200": {
            "description": "Accounts",
            "schema": {
              "$ref": "#/definitions/AccountAUIEnumerablePagedResponse"
            }
          }
        },
        "operationId": "GetAUAccounts",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "Account search string. This parameter accepts wildcards (*).",
            "type": "string"
          },
          {
            "name": "accountIds",
            "in": "query",
            "required": false,
            "description": "An array of account IDs. If AccountIds are provided, all other parameters will be ignored.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "description": "Page size to return. Default to 100.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/childaccounts": {
      "get": {
        "responses": {
          "200": {
            "description": "Child accounts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChildAccountAU"
              }
            }
          }
        },
        "operationId": "GetAUChildAccounts",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accountmodelweightings": {
      "get": {
        "responses": {
          "200": {
            "description": "Account model weightings",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountModelWeighting"
              }
            }
          }
        },
        "operationId": "GetAccountModelWeightings",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "ReplaceAUAccountModelWeightings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutAccountModelWeightingRequestAU"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/pds": {
      "get": {
        "responses": {
          "200": {
            "description": "PDS AU",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PdsDetailAU"
              }
            }
          }
        },
        "operationId": "GetAUPDS",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/securities": {
      "get": {
        "responses": {
          "200": {
            "description": "Securities",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityResponse"
              }
            }
          }
        },
        "operationId": "FindAUSecurities",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "Search term based on security code or security description. If Search is provided, SecurityIds and SecurityCodes will be ignored.",
            "type": "string"
          },
          {
            "name": "pdsId",
            "in": "query",
            "required": false,
            "description": "PDS ID.",
            "type": "string"
          },
          {
            "name": "securityIds",
            "in": "query",
            "required": false,
            "description": "A list of security IDs to search. If SecurityIds are provided, Search and SecurityCodes will be ignored.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "securityCodes",
            "in": "query",
            "required": false,
            "description": "A list of security codes to search. If SecurityCodes are provided, Search and SecurityIds will be ignored.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "/api/recalc/status": {
      "get": {
        "responses": {
          "200": {
            "description": "Service Recalc Status",
            "schema": {
              "$ref": "#/definitions/ServiceRecalcStatus"
            }
          }
        },
        "operationId": "GetAURecalcStatus",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/application": {
      "post": {
        "responses": {
          "200": {
            "description": "Application upload result",
            "schema": {
              "$ref": "#/definitions/ApplicationUploadResult"
            }
          }
        },
        "operationId": "CreateAUDraftApplication",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DraftApplicationAU"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/application/{ApplicationId}/status": {
      "get": {
        "responses": {
          "200": {
            "description": "Application status",
            "schema": {
              "$ref": "#/definitions/ApplicationStatus"
            }
          }
        },
        "operationId": "GetDraftApplicationStatus",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "Unique application ID to be used as an application reference.",
            "format": "uuid",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/expensedetail": {
      "get": {
        "responses": {
          "200": {
            "description": "Expense detail",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Expense"
              }
            }
          }
        },
        "operationId": "GetAUExpenseDetail",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/publisherevents": {
      "get": {
        "responses": {
          "200": {
            "description": "Publisher events",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublisherEvent"
              }
            }
          }
        },
        "operationId": "GetAUPublisherEvents",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/publishereventdetail": {
      "get": {
        "responses": {
          "200": {
            "description": "Publisher event detail",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublisherEventDetail"
              }
            }
          }
        },
        "operationId": "GetAUPublisherEventDetail",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "query",
            "required": true,
            "description": "EventId as returned by the publisher event endpoint.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/file": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "DownloadAUFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "query",
            "required": true,
            "description": "FileID as returned in the publisher event detail endpoint.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/assetclasssummary": {
      "get": {
        "responses": {
          "200": {
            "description": "Asset class summary",
            "schema": {
              "$ref": "#/definitions/AssetClassSummary"
            }
          }
        },
        "operationId": "GetAUAssetClassSummary",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "IncludeLoans",
            "in": "query",
            "required": false,
            "description": "Whether loans should be included in the net account value.",
            "type": "boolean"
          },
          {
            "name": "ValuationDate",
            "in": "query",
            "required": true,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/holdingspermodel": {
      "get": {
        "responses": {
          "200": {
            "description": "Holdings per model",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HoldingsHistoryPerModel"
              }
            }
          }
        },
        "operationId": "GetAUHoldingsPerModel",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/holdings": {
      "get": {
        "responses": {
          "200": {
            "description": "Holdings",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HoldingData"
              }
            }
          }
        },
        "operationId": "GetAUHoldings",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountIds",
            "in": "query",
            "required": true,
            "description": "An array of account IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "ValuationDate",
            "in": "query",
            "required": true,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ClassificationType",
            "in": "query",
            "required": true,
            "description": "The classification type of the security valuation. AssetClassLookThrough = 1, AssetClassPrimaryClass = 2, MarketType = 3.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/incomedetail": {
      "get": {
        "responses": {
          "200": {
            "description": "Income detail",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomeDetail"
              }
            }
          }
        },
        "operationId": "GetAUIncomeDetail",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/incomeschedules": {
      "get": {
        "responses": {
          "200": {
            "description": "Income schedules",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomeSchedule"
              }
            }
          }
        },
        "operationId": "GetAUIncomeSchedules",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/incomeschedules/bulk": {
      "get": {
        "responses": {
          "200": {
            "description": "Income schedules bulk",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BulkIncomeScheduleData"
              }
            }
          }
        },
        "operationId": "GetAUIncomeSchedulesBulk",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountIds",
            "in": "query",
            "required": true,
            "description": "An array of account IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/models": {
      "get": {
        "responses": {
          "200": {
            "description": "Models",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model"
              }
            }
          }
        },
        "operationId": "GetAUModels",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/modelapproximatefum": {
      "get": {
        "responses": {
          "200": {
            "description": "Model approximate FUM",
            "schema": {
              "$ref": "#/definitions/ModelApproximateFum"
            }
          }
        },
        "operationId": "GetAUAproximateFum",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "query",
            "required": true,
            "description": "The model ID as returned by the model endpoint.",
            "type": "string"
          },
          {
            "name": "valuationDate",
            "in": "query",
            "required": true,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/modelperformance": {
      "get": {
        "responses": {
          "200": {
            "description": "Model performance",
            "schema": {
              "$ref": "#/definitions/ModelPerformance"
            }
          }
        },
        "operationId": "GetAUModelPerformance",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ModelId",
            "in": "query",
            "required": true,
            "description": "The model ID as returned by the model endpoint.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/modelholdings": {
      "get": {
        "responses": {
          "200": {
            "description": "Model holdings",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModelHolding"
              }
            }
          }
        },
        "operationId": "GetAUModelHoldings",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "query",
            "required": true,
            "description": "The model ID as returned by the model endpoint.",
            "type": "string"
          },
          {
            "name": "valuationDate",
            "in": "query",
            "required": true,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/modelweightadjustment": {
      "get": {
        "responses": {
          "200": {
            "description": "Model weight adjustment",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModelWeightAdjustmentResponse"
              }
            }
          }
        },
        "operationId": "GetAUModelWeightAdjustment",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "modelId",
            "in": "query",
            "required": true,
            "description": "The model ID as returned by the model endpoint.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "operationId": "ReplaceAUModelWeightAdjustment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutModelWeightAdjustmentRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/bpay": {
      "get": {
        "responses": {
          "200": {
            "description": "BPAY",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BpayInfo"
              }
            }
          }
        },
        "operationId": "GetAUBpay",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountIds",
            "in": "query",
            "required": true,
            "description": "An array of account IDs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/cashflowinstructions": {
      "get": {
        "responses": {
          "200": {
            "description": "Cashflow instructions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashflowInstruction"
              }
            }
          }
        },
        "operationId": "GetAUCashflowInstructions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/cashflowinstructions/oneoff": {
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "AddAUOneOffCashflowInstructions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostOneOffCashflowInstructionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "DeleteAUOneOffCashflowInstructions",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "cashflowInstructionId",
            "in": "query",
            "required": true,
            "description": "Cashflow instruction ID returned by GET cashflow instructions endpoint",
            "type": "string"
          },
          {
            "name": "cashflowInstructionType",
            "in": "query",
            "required": true,
            "description": "OneOffDirectDebit = 3."
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/cashflowinstructions/regular": {
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "UpdateAURegularCashflowInstructions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutRegularCashflowInstructionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "DeleteAURegularCashflowInstructions",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "cashflowInstructionType",
            "in": "query",
            "required": true,
            "description": "RegularContribution = 1, RegularWithdrawal = 2."
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/assetclassperformance": {
      "get": {
        "responses": {
          "200": {
            "description": "Asset class performance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetClassInvestment"
              }
            }
          }
        },
        "operationId": "GetAUAssetClassPerformance",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "IncludeCash",
            "in": "query",
            "required": false,
            "description": "Whether cash should be included. Default to false.",
            "type": "boolean"
          },
          {
            "name": "IncludeLoans",
            "in": "query",
            "required": false,
            "description": "Whether loans should be included. Default to false.",
            "type": "boolean"
          },
          {
            "name": "IncludeTaxCredits",
            "in": "query",
            "required": false,
            "description": "Whether or not to include tax credits. Default to false.",
            "type": "boolean"
          },
          {
            "name": "IncludeForeignTaxPaid",
            "in": "query",
            "required": false,
            "description": "Whether or not to include foreign tax paid. Default to false.",
            "type": "boolean"
          },
          {
            "name": "IncludeExcludedSecurities",
            "in": "query",
            "required": false,
            "description": "Whether or not to include any security that has been excluded from performance. Default to false.",
            "type": "boolean"
          },
          {
            "name": "CalculationMethod",
            "in": "query",
            "required": false,
            "description": "ApproximateReturns = 0, TimeWeightedReturn = 1. Default to 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/performance": {
      "get": {
        "responses": {
          "200": {
            "description": "Performance",
            "schema": {
              "$ref": "#/definitions/Performance"
            }
          }
        },
        "operationId": "GetAUPerformance",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "IncludeCash",
            "in": "query",
            "required": false,
            "description": "Whether cash should be included. Default to false.",
            "type": "boolean"
          },
          {
            "name": "IncludeLoans",
            "in": "query",
            "required": false,
            "description": "Whether loans should be included. Default to false.",
            "type": "boolean"
          },
          {
            "name": "IncludeExcludedSecurities",
            "in": "query",
            "required": false,
            "description": "Whether or not to include any security that has been excluded from performance. Default to false.",
            "type": "boolean"
          },
          {
            "name": "IncludeTaxCredits",
            "in": "query",
            "required": false,
            "description": "Whether or not to include tax credits. Default to false.",
            "type": "boolean"
          },
          {
            "name": "DisplayReturns",
            "in": "query",
            "required": false,
            "description": "BeforeExpenses = 0, AfterExpenses = 1, Both = 2. Default to 2.",
            "type": "enum"
          },
          {
            "name": "MultiplePeriods",
            "in": "query",
            "required": false,
            "description": "The periods to return. Default to -1. <ul><li>0 - For the period only</li><li>4 - 1 mth, 3 mths, the period</li><li>9 - 1 mth, 3 mths, 6 mths, 1 yr, Since inception</li><li>11 - 1 mth, 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs, Since inception</li><li>16 - 1 mth, 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs, 10 yrs, Since inception</li><li>1 - 1 mth, 3 mths, 1 yr, the period</li><li>24 - 1 mth, 3 mths, 1 yr, 3 yrs, 5 yrs, the period</li><li>15 - 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs</li><li>17 - 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs</li><li>14 - 3 mths, 6 mths, 1 yr, 2 yrs, Since inception</li><li>13 - 3 mths, 1 yr, 2 yrs, 5 yrs, Since Inception</li><li>21 - 3 mths, 1 yr, 2 yrs, 3 yrs, Since inception</li><li>22 - 3 mths, 1 yr, 2 yr, 3 yrs, 5 yrs</li><li>18 - 3 mths, 1 yr, 3 yrs, 5 yrs, 7 yrs</li><li>2 - 3 mths, 1 yr, 3 yrs, the period</li><li>8 - 3 mths, 1 yr, 3 yrs, 5 yrs, Since inception</li><li>10 - 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs</li><li>19 - 1 yr, 3 yrs, 5 yrs, 7 yrs, 10 yrs</li><li>3 - 1 yr, 3 yrs, 5 yrs, the period</li><li>23 - 1 yr, 5 yrs, 10 yrs, Since inception</li><li>7 - Qtr to date, Fin yr to date, 1 yr,  Since inception</li><li>5 - Qtr to date, Fin yr to date, 3 yrs, 5 yrs</li><li>6 - Qtr to date, Fin yr to date, 3 yrs, Since inception</li><li>20 - The period, Qtr to date, Fin yr to date, Since inception</li><li>-1 - Account default</li></ul>",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "CalculationMethod",
            "in": "query",
            "required": false,
            "description": "ApproximateReturns = 0, TimeWeightedReturn = 1. Default to 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/investmentmovementperformance": {
      "get": {
        "responses": {
          "200": {
            "description": "Investment movement performance",
            "schema": {
              "$ref": "#/definitions/InvestmentMovement"
            }
          }
        },
        "operationId": "GetAUInvestmentMovementPerformance",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "IncludeTaxCredits",
            "in": "query",
            "required": false,
            "description": "Whether or not to include tax credits. Default to false.",
            "type": "boolean"
          },
          {
            "name": "CalculationMethod",
            "in": "query",
            "required": false,
            "description": "ApproximateReturns = 0, TimeWeightedReturn = 1. Default to 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/dailyreturns": {
      "get": {
        "responses": {
          "200": {
            "description": "Daily returns",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DailyReturn"
              }
            }
          }
        },
        "operationId": "GetAUDailyReturns",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "IncludeCash",
            "in": "query",
            "required": false,
            "description": "Whether cash should be included. Default to false.",
            "type": "boolean"
          },
          {
            "name": "IncludeExcludedSecurities",
            "in": "query",
            "required": false,
            "description": "Whether or not to include any security that has been excluded from performance. Default to false.",
            "type": "boolean"
          },
          {
            "name": "IncludeTaxCredits",
            "in": "query",
            "required": false,
            "description": "Whether or not to include tax credits. Default to false.",
            "type": "boolean"
          },
          {
            "name": "DisplayReturns",
            "in": "query",
            "required": false,
            "description": "BeforeExpenses = 0, AfterExpenses = 1, Both = 2. Default to 2.",
            "type": "enum"
          },
          {
            "name": "CalculationMethod",
            "in": "query",
            "required": false,
            "description": "ApproximateReturns = 0, TimeWeightedReturn = 1. Default to 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/benchmarks": {
      "get": {
        "responses": {
          "200": {
            "description": "Benchmarks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Benchmark"
              }
            }
          }
        },
        "operationId": "GetAUBenchmarks",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/token": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "description": "Must be **application/x-www-form-urlencoded**",
            "type": "string"
          },
          {
            "name": "client_id",
            "in": "body",
            "required": true,
            "description": "OAuth 2.0 client ID provided by Praemium.",
            "type": "string"
          },
          {
            "name": "client_secret",
            "in": "body",
            "required": true,
            "description": "OAuth 2.0 client secret provided by Praemium.",
            "type": "string"
          }
        ]
      }
    }
  },
  "definitions": {
    "AccountAU": {
      "properties": {
        "Id": {
          "description": "Account ID.",
          "type": "string"
        },
        "Code": {
          "description": "Account code.",
          "type": "string"
        },
        "Name": {
          "description": "Account name.",
          "type": "string"
        },
        "ConsolidationType": {
          "description": "None = 78, Portfolio = 80, Transaction = 84, FeeGroup = 85, ShareTrader = 86, SuperFund = 87.",
          "$ref": "#/definitions/ConsolidationType"
        },
        "AccountType": {
          "description": "Standard = 0, Sma = 1, Smsf = 3, SuperSmaAccumulation = 4, SuperSmaPension = 5.",
          "$ref": "#/definitions/AccountType"
        },
        "EntityType": {
          "description": "Individual = 0, Trust = 1, Corporate = 2, Partnership = 3, Superfund = 4, Joint = 5.",
          "$ref": "#/definitions/EntityType"
        },
        "IsSma": {
          "description": "Whether the account is SMA.",
          "type": "boolean"
        },
        "Status": {
          "description": "Active = 0, Draft = 1, Closed = 2, Deleted = 3.",
          "$ref": "#/definitions/AccountStatus"
        },
        "RecalcType": {
          "description": "None = 0, Manual = 1, Auto = 2.",
          "$ref": "#/definitions/RecalcType"
        },
        "RecalcStatus": {
          "description": "OK = 0, Error = 1.",
          "$ref": "#/definitions/RecalcStatus"
        },
        "ValuationDate": {
          "description": "Account valuation date or asat date.",
          "format": "date-time",
          "type": "string"
        },
        "FirstTransactionDate": {
          "description": "The first transaction date of the account.",
          "format": "date-time",
          "type": "string"
        },
        "CreatedDate": {
          "description": "The created date of the account.",
          "format": "date-time",
          "type": "string"
        },
        "LastRecalcDate": {
          "description": "The run-date of the latest account recalculation.",
          "format": "date-time",
          "type": "string"
        },
        "RecalcRequired": {
          "description": "Whether this account requires recalculation to accurately calculate all values.",
          "type": "boolean"
        },
        "MarketValue": {
          "description": "The Valuation of the account on the valuation date.",
          "format": "double",
          "type": "number"
        },
        "OwnerUserName": {
          "description": "The account owner's username.",
          "type": "string"
        },
        "Product": {
          "description": "The description of the account product.",
          "type": "string"
        },
        "BenchmarkId1": {
          "description": "The unique ID of the account's benchmark 1.",
          "type": "string"
        },
        "Benchmark1": {
          "description": "The name of the account’s benchmark 1.",
          "type": "string"
        },
        "BenchmarkMargin1": {
          "description": "The margin (% p.a.) of the account's benchmark 1.",
          "format": "double",
          "type": "number"
        },
        "BenchmarkId2": {
          "description": "The unique ID of the account's benchmark 2.",
          "type": "string"
        },
        "Benchmark2": {
          "description": "The name of the account’s benchmark 2.",
          "type": "string"
        },
        "BenchmarkMargin2": {
          "description": "The margin (% p.a.) of the account's benchmark 2.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "AccountAUIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AccountAU"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "Metadata including pagination.",
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [],
      "type": "object"
    },
    "AccountAccessType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    },
    "AccountApproximateFum": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "TotalValue": {
          "description": "Total market value of the account. (AUD)",
          "format": "double",
          "type": "number"
        },
        "ModelWeight": {
          "description": "Account weight in the requested model.",
          "format": "double",
          "type": "number"
        },
        "TargetFum": {
          "description": "Target FUM of the account. (AUD)",
          "format": "double",
          "type": "number"
        },
        "ApproximateFum": {
          "description": "Approximate FUM of the account. (AUD)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "AccountCreationResponse": {
      "properties": {
        "Id": {
          "description": "Unique application ID to be used as an application reference.",
          "type": "string"
        },
        "Code": {
          "description": "Account code.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "AccountFee": {
      "properties": {
        "Id": {
          "description": "",
          "minLength": 1,
          "type": "string"
        },
        "FeeType": {
          "description": "FeeTable = 0, Contribution = 1, Establishment = 2, Termination = 3, Withdrawal = 4, Ongoing = 5. (Use this field if ID is not available)",
          "$ref": "#/definitions/FeeType"
        },
        "Value": {
          "description": "The value of the fee.",
          "format": "double",
          "type": "number"
        },
        "IsPercent": {
          "description": "Whether the fee is a percent.",
          "type": "boolean"
        },
        "IncludesTax": {
          "description": "Does the fee include tax.",
          "type": "boolean"
        }
      },
      "required": [
        "FeeType",
        "Id",
        "Value"
      ],
      "type": "object"
    },
    "AccountLifeCycle": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    "AccountModelLink": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "minLength": 1,
          "type": "string"
        },
        "ModelPercent": {
          "description": "Percentage of the model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "ModelCode"
      ],
      "type": "object"
    },
    "AccountModelWeighting": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "Percentage": {
          "description": "Percentage of model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "AccountSetup": {
      "properties": {
        "InitialInvestment": {
          "description": "Initial investment of account.",
          "format": "double",
          "type": "number"
        },
        "InitialTransferValue": {
          "description": "Estimated total in-specie value for transfers into the account.",
          "format": "double",
          "type": "number"
        },
        "CashInvestmentMethod": {
          "description": "Initial investment source. BPay = 1, DirectDebit = 2.",
          "$ref": "#/definitions/CashInvestmentMethod"
        }
      },
      "required": [
        "CashInvestmentMethod",
        "InitialInvestment"
      ],
      "type": "object"
    },
    "AccountStatus": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    },
    "AccountType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22
      ]
    },
    "AccountUserLink": {
      "properties": {
        "UserId": {
          "description": "User ID of the user linked to the account.",
          "format": "int32",
          "type": "integer"
        },
        "UserRole": {
          "description": "Accountant = 1, Custodian = 2, FinancialPlanner = 3, InvestmentAdviser = 4, Investor = 5, Owner = 6, AuthorisedRepresentative = 7.",
          "$ref": "#/definitions/AccountAccessType"
        },
        "Access": {
          "description": "Full = 0, Read = 1, Update = 2.",
          "$ref": "#/definitions/LinkAccess"
        }
      },
      "required": [],
      "type": "object"
    },
    "Address": {
      "properties": {
        "Type": {
          "description": "Home = 0, Office = 1, Mailing = 2.",
          "$ref": "#/definitions/AddressType"
        },
        "Line1": {
          "description": "Address detail line 1.",
          "minLength": 1,
          "type": "string"
        },
        "Line2": {
          "description": "Address detail line 2 (if applicable).",
          "type": "string"
        },
        "Line3": {
          "description": "Address detail line 3 (if applicable).",
          "type": "string"
        },
        "SuburbOrCounty": {
          "description": "Suburb or county details.",
          "minLength": 1,
          "type": "string"
        },
        "TownOrCityOrState": {
          "description": "State or town or city details.",
          "minLength": 1,
          "type": "string"
        },
        "Postcode": {
          "description": "Postcode.",
          "minLength": 1,
          "type": "string"
        },
        "Country": {
          "description": "Country code. For example, AUS = Australia.",
          "minLength": 3,
          "type": "string"
        }
      },
      "required": [
        "Country",
        "Line1",
        "Postcode",
        "SuburbOrCounty",
        "TownOrCityOrState",
        "Type"
      ],
      "type": "object"
    },
    "AddressType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "ApplicantType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "ApplicationAccountStatus": {
      "properties": {
        "AccountCode": {
          "description": "Account code.",
          "type": "string"
        },
        "Status": {
          "description": "Draft = 0, AwaitingSignature = 1, AwaitingApproval = 2, AwaitingFund = 3, Funded = 4, Trading = 5, ClosureRequested = 6, Closed = 7, Deleted = 8.",
          "$ref": "#/definitions/AccountLifeCycle"
        }
      },
      "required": [],
      "type": "object"
    },
    "ApplicationStatus": {
      "properties": {
        "ApplicationId": {
          "description": "Unique application ID to be used as an application reference.",
          "format": "uuid",
          "type": "string"
        },
        "Status": {
          "description": "Draft / Submitted.",
          "type": "string"
        },
        "AccountsStatus": {
          "description": "Account status.",
          "items": {
            "$ref": "#/definitions/ApplicationAccountStatus"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "ApplicationUploadResult": {
      "properties": {
        "ApplicationId": {
          "description": "Unique application ID to be used as an application reference.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassDetails": {
      "properties": {
        "AssetClassDescription": {
          "description": "A description of the asset class.",
          "type": "string"
        },
        "Value": {
          "description": "The total value of the account holdings within the asset class. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "PercentTotalValue": {
          "description": "The percentage ratio of the value of this asset class to the total account value.",
          "format": "double",
          "type": "number"
        },
        "PercentNetValue": {
          "description": "The percentage ratio of the value of this asset class to the net account value.",
          "format": "double",
          "type": "number"
        },
        "MinTargetAllocation": {
          "description": "The minimum asset class allocation target for this asset class entered for the account.",
          "format": "double",
          "type": "number"
        },
        "MaxTargetAllocation": {
          "description": "The maximum asset class allocation target for this asset class entered for the account.",
          "format": "double",
          "type": "number"
        },
        "MidPointTargetAllocation": {
          "description": "The middle value of the minimum and maximum target allocation for the asset class.",
          "format": "double",
          "type": "number"
        },
        "Variance": {
          "description": "The variance of the asset class’s value outside of the target allocation range.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassInvestment": {
      "properties": {
        "AssetClassDescription": {
          "description": "Asset class description.",
          "type": "string"
        },
        "Benchmark": {
          "description": "Asset class benchmark.",
          "type": "string"
        },
        "StartValue": {
          "description": "Market Value of the asset class at the FromDate. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "EndValue": {
          "description": "Market Value of the asset class at the ToDate. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalReturn": {
          "description": "Total dollar return for the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalReturnPercent": {
          "description": "Total return for the period as a percentage.",
          "format": "double",
          "type": "number"
        },
        "BenchmarkReturnPercent": {
          "description": "Total return for the benchmark as a percentage.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassReceivableAndPayable": {
      "properties": {
        "Description": {
          "description": "Description of the receivable / payable holding.",
          "type": "string"
        },
        "TotalAmount": {
          "description": "Amount of the receivable / payable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IncludedInNetValue": {
          "description": "Whether included in the account's net value.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassSummary": {
      "properties": {
        "Valuation": {
          "description": "",
          "$ref": "#/definitions/AssetClassValuation"
        },
        "AssetClasses": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AssetClassDetails"
          },
          "type": "array"
        },
        "ReceivablesAndPayables": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AssetClassReceivableAndPayable"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassValuation": {
      "properties": {
        "TotalCost": {
          "description": "The total account cost based on the cost base of unrealised holdings. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalValue": {
          "description": "The total account value based on the quantity and price of unrealised holdings. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetValue": {
          "description": "The total account value inclusive of receivables and payables. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalGainOrLoss": {
          "description": "Total Gain/Loss is the nominal difference between the total value and the total cost. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "BankAccount": {
      "properties": {
        "Bsb": {
          "description": "Bank account BSB.",
          "minLength": 1,
          "type": "string"
        },
        "AccountNumber": {
          "description": "Bank account number.",
          "minLength": 1,
          "type": "string"
        },
        "AccountName": {
          "description": "Bank account name.",
          "minLength": 1,
          "type": "string"
        },
        "Usages": {
          "description": "This allows you to define a regular cash addition or withdrawal from the SMA or SuperSMA.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountName",
        "AccountNumber",
        "Bsb",
        "Usages"
      ],
      "type": "object"
    },
    "BankAccountUsage": {
      "properties": {
        "Usage": {
          "description": "This allows you to define a regular cash addition or withdrawal from the SMA or SuperSMA.",
          "type": "string"
        },
        "Description": {
          "description": "This will advise the bank account usage.",
          "type": "string"
        },
        "IsMandatory": {
          "description": "If the bank account is mandatory, true or false.",
          "type": "boolean"
        },
        "HelpText": {
          "description": "Help text with regards to the bank account.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "Benchmark": {
      "properties": {
        "Id": {
          "description": "Praemium ID of the benchmark.",
          "type": "string"
        },
        "Code": {
          "description": "Benchmark code.",
          "type": "string"
        },
        "Name": {
          "description": "Benchmark description.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "BenchmarkReturn": {
      "properties": {
        "PeriodDescription": {
          "description": "The period the returns are calculated for.",
          "type": "string"
        },
        "PercentageReturn": {
          "description": "The percentage return of the benchmark for the period.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "BeneficiaryRelationship": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        8
      ]
    },
    "BpayInfo": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "ReferenceNumber": {
          "description": "Customer reference number.",
          "type": "string"
        },
        "BillerCode": {
          "description": "BPay biller code.",
          "format": "int32",
          "type": "integer"
        },
        "BpayType": {
          "description": "Personal = 1, Spouse = 2, Downsizer = 3, SpecialPersonal = 4.",
          "$ref": "#/definitions/BpayType"
        }
      },
      "required": [],
      "type": "object"
    },
    "BpayType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4
      ]
    },
    "BulkIncomeScheduleData": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "IncomeSchedules": {
          "description": "",
          "items": {
            "$ref": "#/definitions/IncomeSchedule"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CashAndEquivalent": {
      "properties": {
        "ForexMovements": {
          "description": "Movement for the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Withdrawals": {
          "description": "Withdrawal amount that the security received in the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Deposits": {
          "description": "Deposit amount that the security received in the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Expenses": {
          "description": "Expenses charged against the security within the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "InternalTransfers": {
          "description": "Transfer amount for the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "InterestReceipts": {
          "description": "Interest amount that the security received in the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Income": {
          "description": "Income amount that the security received in the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Other": {
          "description": "Other amount that the security received in the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Purchases": {
          "description": "Total security purchases within the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "OpeningBalance": {
          "description": "Opening balance of the security at the FromDate. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IncludedInPerformance": {
          "description": "Whether the security is included in performance calculations.",
          "type": "boolean"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "Sales": {
          "description": "Total security sales within the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ClosingBalance": {
          "description": "Closing balance of the security at the ToDate. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashBook": {
      "properties": {
        "Summary": {
          "description": "",
          "$ref": "#/definitions/CashSummary"
        },
        "Transactions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CashTransaction"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashBookIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CashBook"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "Metadata including pagination.",
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashHub": {
      "properties": {
        "AUD": {
          "description": "Cash model weighting at the valuation date.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashInvestmentMethod": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "CashSummary": {
      "properties": {
        "CashBookCode": {
          "description": "The code of the cashbook.",
          "type": "string"
        },
        "CashBookDescription": {
          "description": "A description of the cashbook.",
          "type": "string"
        },
        "Currency": {
          "description": "Denominated currency of the cashbook transactions.",
          "type": "string"
        },
        "OpeningBalance": {
          "description": "Cashbook balance at the FromDate in the denominated currency.",
          "format": "double",
          "type": "number"
        },
        "Deposits": {
          "description": "Sum of all credit type transactions for the cashbook in the denominated currency.",
          "format": "double",
          "type": "number"
        },
        "Withdrawals": {
          "description": "Sum of all debit type transactions for the cashbook in the denominated currency.",
          "format": "double",
          "type": "number"
        },
        "ClosingBalance": {
          "description": "Cashbook balance at the ToDate in the denominated currency.",
          "format": "double",
          "type": "number"
        },
        "ClosingBalanceInAccountCurrency": {
          "description": "ClosingBalance of the cashbook. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashTransaction": {
      "properties": {
        "TransactionId": {
          "description": "The unique identifier of the transaction.",
          "type": "string"
        },
        "TransactionDate": {
          "description": "The date on which the transaction occurred.",
          "format": "date-time",
          "type": "string"
        },
        "Currency": {
          "description": "Denominated currency of the transaction.",
          "type": "string"
        },
        "TransactionTypeDescription": {
          "description": "A categorised type of the transaction.",
          "type": "string"
        },
        "Narration": {
          "description": "Displays any notes that have added to the transaction.",
          "type": "string"
        },
        "Deposit": {
          "description": "The amount in the denominated currency if this transaction is a credit type.",
          "format": "double",
          "type": "number"
        },
        "Withdrawal": {
          "description": "The amount in the denominated currency if this transaction is a debit type.",
          "format": "double",
          "type": "number"
        },
        "ValueInAccountCurrency": {
          "description": "Value of the transaction. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Balance": {
          "description": "The balance in the denominated currency of the cash book after the transaction has been credited or debited.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashflowInstruction": {
      "properties": {
        "Id": {
          "description": "Cashflow instruction ID.",
          "type": "string"
        },
        "CashflowInstructionType": {
          "description": "Regular contribution = 1, Regular withdrawal = 2, One-off direct debit = 3, One-off withdrawal = 4, Income reinvestment = 5, Expenses = 6, Pension payment = 7 (Only allowed for SuperSMA pension accounts), All contributions and rollovers = 8 (Only allowed for SuperSMA accumulation accounts), Other withdrawals = 9, Term deposit maturity = 10, Term deposit order = 11, Superfund withdrawals and rollovers = 16 (Only allowed for SuperSMA accumulation and pension accounts), Insurance premiums = 17 (Only allowed for SuperSMA accumulation and pension accounts).",
          "$ref": "#/definitions/CashflowInstructionType"
        },
        "FrequencyType": {
          "description": "Adhoc =0, Monthly = 1, Quarterly = 2, SixMonthly = 3, Annually = 4, Daily = 5, Weekly = 6.",
          "$ref": "#/definitions/FrequencyType"
        },
        "StartDate": {
          "description": "Start date of the cashflow instruction.",
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "description": "End date of the cashflow instruction.",
          "format": "date-time",
          "type": "string"
        },
        "Value": {
          "description": "Value of the cashflow instruction.",
          "format": "double",
          "type": "number"
        },
        "TaxType": {
          "description": "PersonalNon = 3 (Non-concessional personal), ExemptCgtRetire = 4, ExemptCgt15 = 5, ExemptPerInjury = 6, Spouse = 7, Downsizer = 11. (Only applicable for SuperSMA accumulation accounts and one-off direct debit)",
          "$ref": "#/definitions/SuperannuationContributionType"
        },
        "Allocations": {
          "description": "Cashflow instruction details.",
          "items": {
            "$ref": "#/definitions/CashflowInstructionDetail"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashflowInstructionDetail": {
      "properties": {
        "ModelCode": {
          "description": "Model code. (Model code **ProRata** means pro rata across existing models)",
          "minLength": 1,
          "type": "string"
        },
        "Sequence": {
          "description": "Sequence to apply. (Starting from 1 as highest priority, then 2, 3 ...)",
          "format": "int32",
          "type": "integer"
        },
        "Percentage": {
          "description": "Model percentage. (Only applicable for regular contribution, income reinvestment, one-off direct debit)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "ModelCode"
      ],
      "type": "object"
    },
    "CashflowInstructionType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        16,
        17
      ]
    },
    "ChildAccountAU": {
      "properties": {
        "Id": {
          "description": "Child account ID.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "ConsolidationType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        78,
        80,
        84,
        85,
        86,
        87
      ]
    },
    "ContributionType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        11,
        12,
        13,
        21,
        22,
        23,
        31,
        32,
        33,
        41,
        42,
        43,
        50
      ]
    },
    "ContributionTypes": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        11,
        12,
        13,
        21,
        22,
        23,
        24,
        31,
        32,
        33,
        41,
        42,
        43,
        50
      ]
    },
    "CorporateCapacity": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    },
    "DailyReturn": {
      "properties": {
        "Date": {
          "description": "The date of the return.",
          "format": "date-time",
          "type": "string"
        },
        "BeginningMarketValue": {
          "description": "The beginning market value of the account on the Date. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "EndingMarketValue": {
          "description": "The ending market value of the account on the Date. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetContribution": {
          "description": "The net additions and withdrawals that flowed into and out of the account within the performance period. The transactions that make up this net amount when including cash are available from the Additions and withdrawals report. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetInternalTransfers": {
          "description": "Internal transfers between cash books that are not to be treated as a client addition or withdrawal. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalExpenses": {
          "description": "The total expenses recorded against the account within the period. The Trading Activity > Income & Expenses > Expense Details page provides the ability to view these expenses. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxCredits": {
          "description": "The total tax credits of the account received within the performance period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "PercentageReturn": {
          "description": "The performance percentage return",
          "format": "double",
          "type": "number"
        },
        "NetPercentReturn": {
          "description": "The performance percentage return inclusive of expenses.",
          "format": "double",
          "type": "number"
        },
        "CumulativePercentageReturn": {
          "description": "The cumulative percentage return of the account from the From Date to the DailyReturns Date.",
          "format": "double",
          "type": "number"
        },
        "CumulativeNetPercentReturn": {
          "description": "The cumulative net percentage return of the account from the From Date to the DailyReturns Date.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "DividendReinvestmentDetail": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "DrpType": {
          "description": "Either DRP (Dividend Reinvestment Plan) or BSP (Bonus Share Plan).",
          "$ref": "#/definitions/DrpType"
        },
        "FromDate": {
          "description": "The date that the DRP is active from.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The date that the DRP is active to.",
          "format": "date-time",
          "type": "string"
        },
        "MaxSharesParticipating": {
          "description": "The number of shares held that are requested to participate in the reinvestment plan.",
          "format": "double",
          "type": "number"
        },
        "PercentSharesParticipating": {
          "description": "The percentage of the DRP to take as shares. Note that this cannot be used in conjunction with MaxSharesParticipating.",
          "format": "double",
          "type": "number"
        },
        "ExcludeFromDrp": {
          "description": "Whether the security is excluded from the account-wide reinvestment plan.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "DollarReturnData": {
      "properties": {
        "CapitalAppreciation": {
          "description": "Realised and unrealised gains / losses of the account. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalIncome": {
          "description": "The total income of the account received within the performance period. Income and tax credits are included in performance calculations when they are first acknowledged in the account. That is, when they are first declared according to the ex-date. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxCredits": {
          "description": "The total tax credits of the account received within the performance period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ForexMovements": {
          "description": "The gain/loss of the account attributable to foreign exchange movements. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "GrossDollarReturn": {
          "description": "The sum of all dollar return fields excluding expenses. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalExpenses": {
          "description": "The total expenses recorded against the account within the period. The Trading Activity > Income & Expenses > Expense Details page provides the ability to view these expenses. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetDollarReturn": {
          "description": "The sum of all dollar return fields. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftAccountAU": {
      "properties": {
        "Name": {
          "description": "Account name.",
          "type": "string"
        },
        "RegisteredName": {
          "description": "Account registered name.",
          "type": "string"
        },
        "ShortName": {
          "description": "Account short name.",
          "type": "string"
        },
        "AccountType": {
          "description": "Company = 13, Individual = 14, Trust = 15, SuperSmaAccumulation = 16, SuperSmaPensionAbp = 17, SuperSmaPensionTtr = 18, Joint = 19.",
          "$ref": "#/definitions/DraftAccountType"
        },
        "PdsId": {
          "description": "PDS ID of account.",
          "minLength": 1,
          "type": "string"
        },
        "Models": {
          "description": "Account models.",
          "items": {
            "$ref": "#/definitions/DraftModel"
          },
          "type": "array"
        },
        "Exclusions": {
          "description": "Account exclusions.",
          "items": {
            "$ref": "#/definitions/DraftExclusion"
          },
          "type": "array"
        },
        "InitialInvestment": {
          "description": "Initial investment of account.",
          "$ref": "#/definitions/DraftInitialInvestment"
        },
        "OwnerAdviserId": {
          "description": "Owner adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "Fees": {
          "description": "Account fees.",
          "items": {
            "$ref": "#/definitions/DraftFeeAU"
          },
          "type": "array"
        },
        "FeeConsent": {
          "description": "Account fee consent.",
          "$ref": "#/definitions/FeeConsent"
        },
        "BankAccounts": {
          "description": "Bank accounts.",
          "items": {
            "$ref": "#/definitions/DraftAccountBankAccountAU"
          },
          "type": "array"
        },
        "TrustOrFundDetails": {
          "description": "Trust or Fund details.",
          "$ref": "#/definitions/TrustOrFundDetails"
        },
        "PensionPayment": {
          "description": "Pension Payment.",
          "$ref": "#/definitions/DraftPensionPayment"
        },
        "TargetAllocation": {
          "description": "Target allocation.",
          "$ref": "#/definitions/DraftTargetAllocation"
        },
        "InitialInvestmentSuper": {
          "description": "Initial investment for super.",
          "$ref": "#/definitions/DraftInitialInvestmentSuper"
        },
        "ReversionaryBeneficiary": {
          "description": "Reversionary beneficiary.",
          "$ref": "#/definitions/NominatedReversionaryBeneficiary"
        },
        "Beneficiaries": {
          "description": "Beneficiaries.",
          "items": {
            "$ref": "#/definitions/DraftNominatedBeneficiary"
          },
          "type": "array"
        },
        "IsBindingNomination": {
          "description": "If nomination is binding.",
          "type": "boolean"
        },
        "IsEmployerContributing": {
          "description": "If employer is contributing.",
          "type": "boolean"
        },
        "RegularContribution": {
          "description": "",
          "$ref": "#/definitions/DraftRegularTransaction"
        },
        "RegularWithdrawal": {
          "description": "",
          "$ref": "#/definitions/DraftRegularTransaction"
        },
        "AdviserServicesProvided": {
          "description": "The services provided by the adviser: Review of your account = 1, Strategic superannuation advice = 2, Investment advice on your account = 3, Contribution strategy = 4, Insurance in superannuation strategy = 5, Withdrawal advice (lump sum and/or pension) = 6.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "InSpecieTransfers": {
          "description": "",
          "items": {
            "$ref": "#/definitions/DraftInspecieTransfer"
          },
          "type": "array"
        },
        "AccountInvestorsType": {
          "description": "",
          "$ref": "#/definitions/DraftAccountInvestorType"
        }
      },
      "required": [
        "AccountType",
        "PdsId"
      ],
      "type": "object"
    },
    "DraftAccountBankAccountAU": {
      "properties": {
        "AccountNumber": {
          "description": "Bank account number.",
          "type": "string"
        },
        "AccountName": {
          "description": "Bank account name.",
          "type": "string"
        },
        "Bsb": {
          "description": "Bank account BSB.",
          "type": "string"
        },
        "Usages": {
          "description": "This allows you to define a regular cash addition or withdrawal from the SMA or SuperSMA.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftAccountInvestorType": {
      "properties": {
        "InvestorsType": {
          "description": "",
          "$ref": "#/definitions/InvestorsType"
        },
        "WholesaleCertificateDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftAccountType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19
      ]
    },
    "DraftAddressAU": {
      "properties": {
        "Street": {
          "description": "Address line 1.",
          "minLength": 1,
          "type": "string"
        },
        "Line2": {
          "description": "Address line 2.",
          "type": "string"
        },
        "Line3": {
          "description": "Address line 3.",
          "type": "string"
        },
        "Postcode": {
          "description": "Postcode of address.",
          "type": "string"
        },
        "Suburb": {
          "description": "Suburb of address.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Country code of address.",
          "type": "string"
        },
        "IsRegistered": {
          "description": "Whether address is registered.",
          "type": "boolean"
        }
      },
      "required": [
        "Street"
      ],
      "type": "object"
    },
    "DraftApplicantAU": {
      "properties": {
        "OwnerAdviserId": {
          "description": "Owner adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "ApplicantType": {
          "description": "Individual = 0, Corporate = 1.",
          "$ref": "#/definitions/ApplicantType"
        },
        "CorporateDetails": {
          "description": "Used for corporate applicants.",
          "$ref": "#/definitions/DraftCorporateApplicantAU"
        },
        "IndividualDetails": {
          "description": "Used for individual applicants.",
          "$ref": "#/definitions/DraftIndividualApplicantAU"
        }
      },
      "required": [
        "ApplicantType"
      ],
      "type": "object"
    },
    "DraftApplicantIdentification": {
      "properties": {
        "Type": {
          "description": "Identification type of applicant.",
          "$ref": "#/definitions/IdentificationType"
        },
        "Value": {
          "description": "Identification value of applicant.",
          "type": "string"
        },
        "MissingReason": {
          "description": "CountryDoesntIssue = 1, DontNeedOne = 2, Other = 99.",
          "$ref": "#/definitions/MissingReason"
        },
        "MissingReasonText": {
          "description": "Reason identification of applicant is missing.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftApplicationAU": {
      "properties": {
        "AdviserId": {
          "description": "Adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "OwnerAdviserId": {
          "description": "Owner adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "Applicants": {
          "description": "Objects containing the applicant data. There must be at least one applicant for the request to succeed. The array of objects may contain a mix of Individual and Corporate applicants.",
          "items": {
            "$ref": "#/definitions/DraftApplicantAU"
          },
          "type": "array"
        },
        "Accounts": {
          "description": "Array of accounts to be opened with the application. Must be linked to an included applicant.",
          "items": {
            "$ref": "#/definitions/DraftAccountAU"
          },
          "type": "array"
        }
      },
      "required": [
        "AdviserId",
        "Applicants"
      ],
      "type": "object"
    },
    "DraftContactAU": {
      "properties": {
        "Title": {
          "description": "Title of contact.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of contact.",
          "minLength": 1,
          "type": "string"
        },
        "LastName": {
          "description": "Last name of contact.",
          "minLength": 1,
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of contact.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email of contact.",
          "type": "string"
        },
        "Phone": {
          "description": "Phone Number of contact.",
          "type": "string"
        },
        "PhoneOther": {
          "description": "Secondary contact number of contact.",
          "type": "string"
        },
        "IsPoliticallyExposedPerson": {
          "description": "Whether applicant is politically exposed.",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "If applicant is politically exposed, details must be supplied.",
          "type": "string"
        }
      },
      "required": [
        "FirstName",
        "LastName"
      ],
      "type": "object"
    },
    "DraftCorporateApplicantAU": {
      "properties": {
        "Name": {
          "description": "Name of the corporate applicant.",
          "minLength": 1,
          "type": "string"
        },
        "TradingName": {
          "description": "Trading name of the corporate applicant.",
          "type": "string"
        },
        "BusinessAddress": {
          "description": "Business address.",
          "$ref": "#/definitions/DraftAddressAU"
        },
        "MailingAddress": {
          "description": "Mailing address.",
          "$ref": "#/definitions/DraftAddressAU"
        },
        "Contact": {
          "description": "Primary contact.",
          "$ref": "#/definitions/DraftContactAU"
        },
        "Signatories": {
          "description": "Corporate signatories.",
          "items": {
            "$ref": "#/definitions/DraftSignatoryAU"
          },
          "type": "array"
        },
        "Identifications": {
          "description": "Array of TFN / TIN / ABN / NIN.",
          "items": {
            "$ref": "#/definitions/DraftApplicantIdentification"
          },
          "type": "array"
        },
        "ContactIsSignatory": {
          "description": "Whether the contact is a signatory on the account.",
          "type": "boolean"
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DraftExclusion": {
      "properties": {
        "Security": {
          "description": "Security code of the exclusion.",
          "$ref": "#/definitions/DraftSecurity"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftFeeAU": {
      "properties": {
        "Id": {
          "description": "Fee ID.",
          "type": "string"
        },
        "Type": {
          "description": "FeeTable = 0, Contribution = 1, Establishment = 2, Termination = 3, Withdrawal = 4, Ongoing = 5. (Use this field if ID is not available)",
          "$ref": "#/definitions/DraftFeeType"
        },
        "Rate": {
          "description": "Fee rate.",
          "format": "double",
          "type": "number"
        },
        "Unit": {
          "description": "Fee unit, dollar or percent.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftFeeType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "DraftIndividualApplicantAU": {
      "properties": {
        "Title": {
          "description": "Title: Mr, Mrs, Ms, Miss, Doctor, Lady, Prof and Sir.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of individual.",
          "minLength": 1,
          "type": "string"
        },
        "LastName": {
          "description": "Last name of individual.",
          "minLength": 1,
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of the individual.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email address of the individual.",
          "type": "string"
        },
        "Phone": {
          "description": "Primary contact number of the individual.",
          "type": "string"
        },
        "PhoneOther": {
          "description": "Other phone of the individual.",
          "type": "string"
        },
        "IsPoliticallyExposedPerson": {
          "description": "Whether applicant is politically exposed.",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "If applicant is politically exposed, details must be supplied.",
          "type": "string"
        },
        "Identifications": {
          "description": "Tfn = 0, Abn = 1, Tin = 2, Nin = 3.",
          "items": {
            "$ref": "#/definitions/DraftApplicantIdentification"
          },
          "type": "array"
        },
        "TaxResidenceCountryCode": {
          "description": "Tax residence country code.",
          "type": "string"
        },
        "CitizenshipCountryCode": {
          "description": "Citizenship country code.",
          "type": "string"
        },
        "BirthCountryCode": {
          "description": "Birth country code.",
          "type": "string"
        },
        "HomeAddress": {
          "description": "Home address of individual applicant.",
          "$ref": "#/definitions/DraftAddressAU"
        },
        "MailingAddress": {
          "description": "Mailing address of individual applicant.",
          "$ref": "#/definitions/DraftAddressAU"
        },
        "Gender": {
          "description": "Male = 1, Female = 2.",
          "$ref": "#/definitions/Gender"
        },
        "UserName": {
          "description": "User Name of individual applicant.",
          "type": "string"
        },
        "UserId": {
          "description": "User ID of individual applicant.",
          "type": "string"
        }
      },
      "required": [
        "FirstName",
        "Gender",
        "LastName"
      ],
      "type": "object"
    },
    "DraftInflowsContributionSource": {
      "properties": {
        "MemberNumber": {
          "description": "Member number.",
          "type": "string"
        },
        "SourceOfContribution": {
          "description": "Source of contribution.",
          "$ref": "#/definitions/InflowsContributionSourceFund"
        },
        "EntireBalance": {
          "description": "If the entire balance.",
          "type": "boolean"
        },
        "ExpectedAmount": {
          "description": "Expected amount.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftInflowsContributionTransfer": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "TransferMethod": {
          "description": "WholeAmountWithClose = 0, WholeAmountKeepOpen = 1, SpecifiedAmount = 2 - whether the source account will be kept open.",
          "$ref": "#/definitions/SmaTransferMethodType"
        },
        "Amount": {
          "description": "Amount.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftInflowsOtherContribution": {
      "properties": {
        "ContributionType": {
          "description": "NonConcessional_Personal = 21, NonConcessional_Spouse = 22, NonConcessional_Child = 24, Downsizer = 43.",
          "$ref": "#/definitions/ContributionType"
        },
        "ExpectedAmount": {
          "description": "Expected amount.",
          "format": "double",
          "type": "number"
        },
        "SuperSmaAccumulatedPaymentType": {
          "description": "",
          "$ref": "#/definitions/SuperSmaAccumulatedPaymentType"
        }
      },
      "required": [
        "ContributionType"
      ],
      "type": "object"
    },
    "DraftInitialInvestment": {
      "properties": {
        "Cash": {
          "description": "Select if the initial investment will include cash.",
          "format": "double",
          "type": "number"
        },
        "Shares": {
          "description": "Select if the initial investment will include shares.",
          "format": "double",
          "type": "number"
        },
        "Method": {
          "description": "BPay = 0, DirectDebit = 1.",
          "$ref": "#/definitions/PaymentMethods"
        }
      },
      "required": [
        "Method"
      ],
      "type": "object"
    },
    "DraftInitialInvestmentSuper": {
      "properties": {
        "ContributionSources": {
          "description": "Contribution sources.",
          "items": {
            "$ref": "#/definitions/DraftInflowsContributionSource"
          },
          "type": "array"
        },
        "Transfers": {
          "description": "Transfers.",
          "items": {
            "$ref": "#/definitions/DraftInflowsContributionTransfer"
          },
          "type": "array"
        },
        "OtherContributions": {
          "description": "Other contributions.",
          "items": {
            "$ref": "#/definitions/DraftInflowsOtherContribution"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftInspecieTransfer": {
      "properties": {
        "SecurityId": {
          "description": "",
          "minLength": 1,
          "type": "string"
        },
        "Quantity": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "OutsideOfRebalanceQuantity": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "HoldingType": {
          "description": "",
          "$ref": "#/definitions/HoldingType"
        },
        "HinOrSrn": {
          "description": "",
          "type": "string"
        },
        "Direction": {
          "description": "",
          "$ref": "#/definitions/TransferDirection"
        }
      },
      "required": [
        "HoldingType",
        "SecurityId"
      ],
      "type": "object"
    },
    "DraftModel": {
      "properties": {
        "Code": {
          "description": "Model code.",
          "minLength": 1,
          "type": "string"
        },
        "Proportion": {
          "description": "Proportion of model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "Code"
      ],
      "type": "object"
    },
    "DraftNominatedBeneficiary": {
      "properties": {
        "FullName": {
          "description": "Full name of beneficiary.",
          "type": "string"
        },
        "Relationship": {
          "description": "Spouse = 1, Child = 2, Other = 3, PersonalLegalRepresentative = 8.",
          "$ref": "#/definitions/BeneficiaryRelationship"
        },
        "DateOfBirth": {
          "description": "Date of birth of beneficiary.",
          "format": "date-time",
          "type": "string"
        },
        "Proportion": {
          "description": "The portion of the benefit that should be paid to the beneficiary. These must add up to 100%.",
          "format": "double",
          "type": "number"
        },
        "Address": {
          "description": "Address of the beneficiary.",
          "$ref": "#/definitions/DraftAddressAU"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftPensionPayment": {
      "properties": {
        "Type": {
          "description": "Specified = 0, Minimum = 1, Maximum = 2.",
          "$ref": "#/definitions/PensionPaymentType"
        },
        "Amount": {
          "description": "Amount of pension payment.",
          "format": "double",
          "type": "number"
        },
        "Frequency": {
          "description": "Monthly = 0, Quarterly = 1, SemiAnnually = 2, Annually = 3.",
          "$ref": "#/definitions/Frequency"
        },
        "CommencementDate": {
          "description": "Commencement date of pension payment.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftRegularTransaction": {
      "properties": {
        "Amount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Method": {
          "description": "",
          "$ref": "#/definitions/PaymentMethods"
        },
        "Frequency": {
          "description": "",
          "$ref": "#/definitions/Frequency"
        }
      },
      "required": [
        "Method"
      ],
      "type": "object"
    },
    "DraftSecurity": {
      "properties": {
        "Code": {
          "description": "Security code of the security.",
          "minLength": 1,
          "type": "string"
        },
        "Exchange": {
          "description": "Exchange code of the security.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "Code",
        "Exchange"
      ],
      "type": "object"
    },
    "DraftSignatoryAU": {
      "properties": {
        "Title": {
          "description": "Title of signatory.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of signatory.",
          "minLength": 1,
          "type": "string"
        },
        "LastName": {
          "description": "Last name of signatory.",
          "minLength": 1,
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of signatory.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email address of signatory.",
          "type": "string"
        },
        "Phone": {
          "description": "Phone number of signatory.",
          "type": "string"
        },
        "PhoneOther": {
          "description": "Secondary contact number of signatory.",
          "type": "string"
        },
        "IsPoliticallyExposedPerson": {
          "description": "Whether applicant is politically exposed.",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "If applicant is politically exposed, details must be supplied.",
          "type": "string"
        },
        "Capacity": {
          "description": "Director = 0, SoleDirector = 1, CompanySecretary = 2, Partner = 3, Trustee = 4, SignedUnderSeal = 5, SignificantShareholder = 6, Beneficiary = 7.",
          "$ref": "#/definitions/CorporateCapacity"
        },
        "TaxNumber": {
          "description": "Tax number of signatory.",
          "type": "string"
        },
        "CountryOfBirth": {
          "description": "Country of birth of signatory.",
          "type": "string"
        },
        "Address": {
          "description": "Address of signatory.",
          "$ref": "#/definitions/DraftAddressAU"
        }
      },
      "required": [
        "Capacity",
        "FirstName",
        "LastName"
      ],
      "type": "object"
    },
    "DraftTargetAllocation": {
      "properties": {
        "Fees": {
          "description": "Fees.",
          "items": {
            "$ref": "#/definitions/DraftTargetAllocationInstruction"
          },
          "type": "array"
        },
        "Income": {
          "description": "Income.",
          "items": {
            "$ref": "#/definitions/DraftTargetAllocationInstruction"
          },
          "type": "array"
        },
        "Payments": {
          "description": "Payments.",
          "items": {
            "$ref": "#/definitions/DraftTargetAllocationInstruction"
          },
          "type": "array"
        },
        "Contributions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/DraftTargetAllocationInstruction"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftTargetAllocationInstruction": {
      "properties": {
        "Code": {
          "description": "Code for target allocation instruction.",
          "minLength": 1,
          "type": "string"
        },
        "Percentage": {
          "description": "Percentage for target allocation instruction.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "Code"
      ],
      "type": "object"
    },
    "DrpType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "EntityType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "EsgCategory": {
      "properties": {
        "Id": {
          "description": "ESG category ID.",
          "type": "string"
        },
        "Name": {
          "description": "ESG category name.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "Expense": {
      "properties": {
        "ExpenseId": {
          "description": "Praemium expense id.",
          "type": "string"
        },
        "EffectiveDate": {
          "description": "Date the expense was deemed to have been incurred.",
          "format": "date-time",
          "type": "string"
        },
        "TaxDate": {
          "description": "Date used for tax action reporting purposes.",
          "format": "date-time",
          "type": "string"
        },
        "PaymentDate": {
          "description": "Date the expense was paid.",
          "format": "date-time",
          "type": "string"
        },
        "ExpenseIncludingGst": {
          "description": "Amount paid including GST. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ExpenseExcludingGst": {
          "description": "Amount paid excluding GST. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "GstRefundableAmount": {
          "description": "Refundable amount of GST the account is eligible to claim for the expense. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "DeductibleAmount": {
          "description": "Portion of the expense that can be claimed as a tax deduction. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NonDeductibleAmount": {
          "description": "Portion of the expense that cannot be claimed as a tax deduction. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ExpenseNarration": {
          "description": "Notes attached to the expense.",
          "type": "string"
        },
        "ExpenseTypeGroupDescription": {
          "description": "Expenses categorised as Admin / Investment / Member / Non-investment.",
          "type": "string"
        },
        "ExpenseTypeDescription": {
          "description": "Description of the expense type. Please visit the “Expense Types” pages in Help Centre for a full list.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "FeeClass": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "FeeConsent": {
      "properties": {
        "Type": {
          "description": "Ongoing = 1, FixedTerm = 2, NotCharged = 3. For NotCharged only Establishment fee can be provided.",
          "$ref": "#/definitions/FeeConsentType"
        },
        "AnniversaryDate": {
          "description": "Anniversary date of ongoing fee. (Cannot be used along with TermStartDate and TermEndDate)",
          "format": "date-time",
          "type": "string"
        },
        "TermStartDate": {
          "description": "Start date of fixed term fee. (Cannot be used along with AnniversaryDate)",
          "format": "date-time",
          "type": "string"
        },
        "TermEndDate": {
          "description": "End date of fixed term fee. (Cannot be used along with AnniversaryDate)",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "FeeConsentType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        3
      ]
    },
    "FeeIndexationType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "FeeType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "FeeValueType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "FeesType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "FixedTermFees": {
      "properties": {
        "TermStartDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "TermEndDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Frequency": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "FrequencyType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "Gender": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "Holding": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/HoldingSecurity"
        },
        "Quantity": {
          "description": "The number of securities held by the account at the recalculation date.",
          "format": "double",
          "type": "number"
        },
        "UnitCost": {
          "description": "Average unit cost of the holding. This is the actual cost divided by the quantity. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Cost": {
          "description": "Actual cost is based on the cost base of unrealised holdings. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "UnitValue": {
          "description": "The last price of the holding available at the recalculation date. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "UnitPriceDate": {
          "description": "The date of the unit price. (Account currency)",
          "format": "date-time",
          "type": "string"
        },
        "Value": {
          "description": "Value is calculated based on the unit price multiplied by the quantity. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "PercentTotalValue": {
          "description": "The percentage ratio of the value relative to the total account value.",
          "format": "double",
          "type": "number"
        },
        "GainOrLoss": {
          "description": " (Account currency)",
          "format": "double",
          "type": "number"
        },
        "MarketValueGainOrLoss": {
          "description": "MarketValueGainOrLoss as a result of the market price (MV) movement of the security. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ExchangeRateGainOrLoss": {
          "description": "ExchangeRateGainOrLoss as a result of the movement of the exchange rate (FX). (Account currency)",
          "format": "double",
          "type": "number"
        },
        "PercentTotalGainOrLoss": {
          "description": "The total gain or loss (TG) expressed as a percentage over the adjusted cost base.",
          "format": "double",
          "type": "number"
        },
        "EstimatedIncome": {
          "description": "Indicative field calculated based on the income of each asset generated over the past twelve months. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Yield": {
          "description": "The estimated income as a percentage of the market value of the account.",
          "format": "double",
          "type": "number"
        },
        "ValueInSecurityCurrency": {
          "description": "The value based on the quantity and local price of unrealised holdings.",
          "format": "double",
          "type": "number"
        },
        "CostBaseUnknown": {
          "description": "Whether cost base is unknown.",
          "type": "boolean"
        },
        "TaxCredits": {
          "description": "The tax credits available on the current holdings of the security. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "EstimatedFrankingCredits": {
          "description": "Amount expected to be received in franking credits. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "EstimatedGrossYield": {
          "description": "Estimated gross yield is based on the sum of the estimated income and franking credits as a percentage of the holding's market value.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingData": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "Valuation": {
          "description": "",
          "$ref": "#/definitions/Valuation"
        },
        "Holdings": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Holding"
          },
          "type": "array"
        },
        "ReceivablesAndPayables": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ReceivableAndPayable"
          },
          "type": "array"
        },
        "Subscriptions": {
          "description": "",
          "$ref": "#/definitions/Subscription"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingExcluded": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "FromDate": {
          "description": "The start date the holding is excluded from performance calculations for the account.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The end date the holding is excluded from performance calculations for the account.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingSecurity": {
      "properties": {
        "Code": {
          "description": "Security code of the security.",
          "type": "string"
        },
        "Exchange": {
          "description": "Exchange code of the security.",
          "type": "string"
        },
        "AssetClassDescription": {
          "description": "A description of the security’s asset class.",
          "type": "string"
        },
        "AssetClassCode": {
          "description": "The asset class code of the security’s asset class.",
          "type": "string"
        },
        "AssetClassCategory": {
          "description": "The asset class category of the security’s asset class.",
          "type": "string"
        },
        "TypeDescription": {
          "description": "The asset type of the security’s asset class.",
          "type": "string"
        },
        "GicsDescription": {
          "description": "The global industry classification of the security.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "HoldingValuePerModel": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "Value": {
          "description": "The value that is attributable to this model on the date. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "description": "The quantity that is attributable to this model on the date. Please note that this may not be a whole number of shares because we blend holdings within our system in order to give a better investment outcome..",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingsHistoryPerModel": {
      "properties": {
        "Date": {
          "description": "The date that these holdings relate to.",
          "format": "date-time",
          "type": "string"
        },
        "TotalValue": {
          "description": "The total value of the account on the date. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "HoldingsInModel": {
          "description": "Holdings that are held by the account due to its model subscriptions.",
          "items": {
            "$ref": "#/definitions/HoldingsPerModel"
          },
          "type": "array"
        },
        "HoldingsNotInModel": {
          "description": "Holdings that are not attributable to a model on the date. This can be due to holding locks or other customisations. The value and quantity of the HoldingsNotInModel relate to the values that are not attributable to any subscribed model.",
          "items": {
            "$ref": "#/definitions/HoldingValuePerModel"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingsPerModel": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "ModelPercentage": {
          "description": "Percentage of the model.",
          "format": "double",
          "type": "number"
        },
        "Holdings": {
          "description": "Contains the holdings attributable to the model on the date.",
          "items": {
            "$ref": "#/definitions/HoldingValuePerModel"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "IdentificationType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "IncomeDetail": {
      "properties": {
        "TaxWithheld": {
          "description": "Total tax withheld on the income record. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Receivable": {
          "description": "Amount of income yet to be received. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CashAmount": {
          "description": "Amount received via cash. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Drp": {
          "description": "Amount received via dividend reinvestment. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IncomeTotal": {
          "description": "Total value of the income record. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "PaymentDate": {
          "description": "Payment date of the income record.",
          "format": "date-time",
          "type": "string"
        },
        "ExecutionDate": {
          "description": "Execution date of the income record.",
          "format": "date-time",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "IncomeTypeDescription": {
          "description": "Type of income received.",
          "type": "string"
        },
        "IncomeSource": {
          "description": "Whether the income was Australian or foreign based.",
          "type": "string"
        },
        "IncomeId": {
          "description": "Praemium income ID.",
          "type": "string"
        },
        "ForeignTaxPay": {
          "description": "Amount of foreign tax of the income record. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "FrankingCredit": {
          "description": "Franking credit amount attributable to the income. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "IncomeSchedule": {
      "properties": {
        "CashAmount": {
          "description": "Amount received via cash. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TrustOtherExpenses": {
          "description": "Other expenses related to the income record. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ForeignIncomeTaxOffsetsTotal": {
          "description": "Foreign income tax offsets. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxWithheld": {
          "description": "Total tax withheld on the income record. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IncomeTotal": {
          "description": "Total value of the income record. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NonAssessableTotal": {
          "description": "Total amount that is non assessable for tax purposes. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TrustCgtDistributionsTotal": {
          "description": "Amount received due to distributed capital gains. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ForeignIncomeTotal": {
          "description": "Amount received from non-Australian sources. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Drp": {
          "description": "Amount received via dividend reinvestment. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "AustralianTrustOther": {
          "description": "Australian sourced income component that is not classified as one of the other types. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "FrankedTotal": {
          "description": "Amount received that was franked. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "UnfrankedTotal": {
          "description": "Amount received that was unfranked. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Interest": {
          "description": "Interest amount. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxDate": {
          "description": "Tax date of the income record.",
          "format": "date-time",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "IncomeTypeDescription": {
          "description": "Type of income received.",
          "type": "string"
        },
        "IncomeId": {
          "description": "Praemium income ID.",
          "type": "string"
        },
        "FrankingCreditsTotal": {
          "description": "Imputation credits. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "AccruedAmount": {
          "description": "Income amount that is accrued. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "IndividualName": {
      "properties": {
        "Title": {
          "description": "The user's title. Miss = 0, Mr = 1, Mrs = 2, Ms = 3, Dr = 4, Prof = 5, or null.",
          "$ref": "#/definitions/Title"
        },
        "FirstName": {
          "description": "The user's first name.",
          "minLength": 1,
          "type": "string"
        },
        "LastName": {
          "description": "The user's last name.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "FirstName",
        "LastName"
      ],
      "type": "object"
    },
    "InflowsConsolidation": {
      "properties": {
        "UseExisting": {
          "description": "Link an existing SuperSMA accumulation account to the pension account.",
          "type": "boolean"
        },
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "TransferMethod": {
          "description": "WholeAmountWithClose = 0, WholeAmountKeepOpen = 1, SpecifiedAmount = 2 - whether the source account will be kept open.",
          "$ref": "#/definitions/TransferMethodType"
        },
        "Amount": {
          "description": "Specifies the amount of the transfer from the existing account.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "InflowsContributionSource": {
      "properties": {
        "SourceOfContribution": {
          "description": "Contribution source.",
          "type": "string"
        },
        "ExpectedAmount": {
          "description": "Expected contribution amount to be transferred. Set if ContributionSources.EntireBalance is false.",
          "format": "double",
          "type": "number"
        },
        "EntireBalance": {
          "description": "Whether the entire balance of the external fund account will be transferred.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "InflowsContributionSourceFund": {
      "properties": {
        "ProductName": {
          "description": "Product name.",
          "type": "string"
        },
        "Usi": {
          "description": "USI of product.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "InflowsOtherContribution": {
      "properties": {
        "ContributionType": {
          "description": "Concessional_Employee = 11, Concessional_Personal = 12, Concessional_OtherFriendsAndFamily = 13, NonConcessional_Personal = 21, NonConcessional_SpouseAndChild = 22, NonConcessional_FirstHomeSaverAccount = 23, Exempt_CGT_15Year = 31, Exempt_CGT_Retirement = 32, Exempt_PersonalInjuryElection = 33, Other_GovernmentCoContribution = 41, Other_LowIncomeSuperContribution = 42, Downsizer = 43.",
          "$ref": "#/definitions/ContributionTypes"
        },
        "ExpectedAmount": {
          "description": "Expected other contribution amount to be transferred.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "InflowsTransfer": {
      "properties": {
        "TransferFromAccountId": {
          "description": "Account ID of the other SuperSMA account to transfer to this account.",
          "type": "string"
        },
        "TransferMethod": {
          "description": "WholeAmountWithClose = 0, WholeAmountKeepOpen = 1, SpecifiedAmount = 2 - whether the source account will be kept open.",
          "$ref": "#/definitions/TransferMethodType"
        },
        "Amount": {
          "description": "If Account.Transfers.TransferMethod is WholeAmountKeepOpenSpecifiedAmount, the amount to be transferred.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "InspecieHoldingType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "InspecieTransferDirection": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "Instruction": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "minLength": 1,
          "type": "string"
        },
        "Percentage": {
          "description": "Percentage of the model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "ModelCode"
      ],
      "type": "object"
    },
    "Investment": {
      "properties": {
        "PercentTotalReturn": {
          "description": "Total return for the period in percentage terms.",
          "format": "double",
          "type": "number"
        },
        "TotalReturn": {
          "description": "Total dollar return for the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxCredits": {
          "description": "Tax credit amount receivable within the period.(Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalIncome": {
          "description": "Total income within the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IncomeNotYetPaid": {
          "description": "Income declared but not yet paid at the ToDate. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IncomeCash": {
          "description": "Income that was paid to cash. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IncomeDrp": {
          "description": "Income that was reinvested as part of a DRP. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "EndMarketValue": {
          "description": "Market value of the security at the ToDate. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "PercentCapitalReturn": {
          "description": "Return for the period attributable to capital returns.",
          "format": "double",
          "type": "number"
        },
        "GainOrLoss": {
          "description": "Dollar gain / loss in the response period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Sales": {
          "description": "Sum of sales within the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Purchases": {
          "description": "Sum of purchases within the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "BeginningMarketValue": {
          "description": "Market value of the security at the FromDate. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IncludedInPerformance": {
          "description": "Whether the security is included in performance calculations. (Account currency)",
          "type": "boolean"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "NetOtherAmount": {
          "description": "Other net amount within the period. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "PercentIncomeReturn": {
          "description": "Return for the period attributable to income returns.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "InvestmentMovement": {
      "properties": {
        "Investments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Investment"
          },
          "type": "array"
        },
        "CashAndEquivalents": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CashAndEquivalent"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "InvestorsType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ]
    },
    "LinkAccess": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "LinkType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "ManagedPensionType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "Metadata": {
      "properties": {
        "TotalCount": {
          "description": "Total number of results found.",
          "format": "int32",
          "type": "integer"
        },
        "TotalPages": {
          "description": "Total pages of results.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "MissingReason": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        99
      ]
    },
    "Model": {
      "properties": {
        "Id": {
          "description": "Praemium unique model Identifier.",
          "type": "string"
        },
        "Code": {
          "description": "Model code.",
          "type": "string"
        },
        "Description": {
          "description": "A description of the model.",
          "type": "string"
        },
        "Status": {
          "description": "Open = 0, Closing = 1, Closed = 2.",
          "$ref": "#/definitions/ModelStatus"
        },
        "FactSheetUrl": {
          "description": "Fact sheet URL.",
          "type": "string"
        },
        "ProviderName": {
          "description": "Model provider name.",
          "type": "string"
        },
        "UpdatedDate": {
          "description": "Model status update. Note that this date refers to an update of the model description, not the model weights.",
          "format": "date-time",
          "type": "string"
        },
        "LastTransactionDate": {
          "description": "Model weights update date.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "ModelApproximateFum": {
      "properties": {
        "NumberOfAccountsLinked": {
          "description": "Number of accounts linked to the model.",
          "format": "int32",
          "type": "integer"
        },
        "TotalTargetFum": {
          "description": "Target FUM for all accounts. (AUD)",
          "format": "double",
          "type": "number"
        },
        "TotalApproximateFum": {
          "description": "Approximate FUM for all accounts. (AUD)",
          "format": "double",
          "type": "number"
        },
        "ApproximateFumForAccounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AccountApproximateFum"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "ModelDailyPercentageReturn": {
      "properties": {
        "Date": {
          "description": "The date used to calculate performance data.",
          "format": "date-time",
          "type": "string"
        },
        "PercentageReturn": {
          "description": "The performance percentage return.",
          "format": "double",
          "type": "number"
        },
        "CumulativePercentageReturn": {
          "description": "Cumulative percentage return from the FromDate to Date.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "ModelHolding": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "TargetValuePercentage": {
          "description": "Target value in the model for the security.",
          "format": "double",
          "type": "number"
        },
        "ActualValuePercentage": {
          "description": "Percentage that was implemented allowing for market movements and minimum cash. This is record in the model shadow account for the model.",
          "format": "double",
          "type": "number"
        },
        "EstimatedYield": {
          "description": "Estimated yield of the security.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "ModelPerformance": {
      "properties": {
        "DailyPercentageReturns": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ModelDailyPercentageReturn"
          },
          "type": "array"
        },
        "PercentageReturns": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PercentageReturn"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "ModelStatus": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "ModelWeightAdjustment": {
      "properties": {
        "SecurityId": {
          "description": "Security ID.",
          "minLength": 1,
          "type": "string"
        },
        "Target": {
          "description": "The target percentage weight of the security in the model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "SecurityId"
      ],
      "type": "object"
    },
    "ModelWeightAdjustmentResponse": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/ModelWeightAdjustmentSecurity"
        },
        "Target": {
          "description": "The current percentage weight of the security in the model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "ModelWeightAdjustmentSecurity": {
      "properties": {
        "Code": {
          "description": "Security code of the security.",
          "type": "string"
        },
        "Exchange": {
          "description": "Exchange code of the security.",
          "type": "string"
        },
        "Isin": {
          "description": "International securities identification number of the security.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "NominatedReversionaryBeneficiary": {
      "properties": {
        "FullName": {
          "description": "Full name of beneficiary.",
          "type": "string"
        },
        "Relationship": {
          "description": "Spouse = 1, Child = 2, Other = 3.",
          "$ref": "#/definitions/BeneficiaryRelationship"
        },
        "DateOfBirth": {
          "description": "Date of birth of beneficiary.",
          "format": "date-time",
          "type": "string"
        },
        "Sex": {
          "description": "Male = 1, Female = 2.",
          "$ref": "#/definitions/Gender"
        }
      },
      "required": [],
      "type": "object"
    },
    "OneOffCashflowInstructionType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        3,
        4
      ]
    },
    "OngoingFees": {
      "properties": {
        "AnniversaryDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PatchMinimumTradeSizeRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "Amount": {
          "description": "Minimum trade size amount. Prevents trades of a value less than this figure.",
          "format": "double",
          "type": "number"
        },
        "Percentage": {
          "description": "Minimum trade size percentage. Prevents trades unless they exceed this figure as a percentage of the portfolio’s value. For example, if this is set to 5, only trades that exceed five percent of the portfolio’s total value are performed.",
          "format": "double",
          "type": "number"
        },
        "Units": {
          "description": "Minimum trade size number of units. Prevents trades of a quantity less than this figure.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "AccountId",
        "Amount",
        "Percentage",
        "Units"
      ],
      "type": "object"
    },
    "PatchUserAccountRequest": {
      "properties": {
        "UserId": {
          "description": "User ID.",
          "format": "int32",
          "type": "integer"
        },
        "AccountIds": {
          "description": "An array of account IDs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "UserRole": {
          "description": "Accountant = 0, Custodian = 1, FinancialPlanner = 2, InvestmentAdviser = 3, Other = 4, Owner = 5. Default to 4.",
          "$ref": "#/definitions/LinkType"
        },
        "Access": {
          "description": "Full = 0, Read = 1, Update = 2. Default to 1.",
          "$ref": "#/definitions/LinkAccess"
        }
      },
      "required": [
        "AccountIds",
        "UserId"
      ],
      "type": "object"
    },
    "PaymentFrequencyType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        3,
        6,
        12
      ]
    },
    "PaymentMethods": {
      "required": [],
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "PdsDetailAU": {
      "properties": {
        "Id": {
          "description": "ID of the PDS.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the PDS.",
          "type": "string"
        },
        "MaxNoOfBankAccounts": {
          "description": "Maximum number of bank accounts allowed by the PDS.",
          "format": "int32",
          "type": "integer"
        },
        "IsSuperSma": {
          "description": "If the PDS is specific to SuperSMA.",
          "type": "boolean"
        },
        "Status": {
          "description": "Status of the PDS, active = 1, closed = 2.",
          "type": "string"
        },
        "Fees": {
          "description": "The fees associated to the PDS.",
          "items": {
            "$ref": "#/definitions/PdsFee"
          },
          "type": "array"
        },
        "BankAccountUsages": {
          "description": "This allows you to define a regular cash addition or withdrawal from the SMA or SuperSMA.",
          "items": {
            "$ref": "#/definitions/BankAccountUsage"
          },
          "type": "array"
        },
        "TaxOptions": {
          "description": "List of available tax options.",
          "items": {
            "$ref": "#/definitions/PdsTaxOption"
          },
          "type": "array"
        },
        "Models": {
          "description": "List of available models.",
          "items": {
            "$ref": "#/definitions/PdsModelAU"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsFee": {
      "properties": {
        "Id": {
          "description": "ID of fee",
          "type": "string"
        },
        "Type": {
          "description": "FeeTable = 0, Contribution = 1, Establishment = 2, Termination = 3, Withdrawal = 4, Ongoing = 5. (Use this field if ID is not available)",
          "$ref": "#/definitions/FeeType"
        },
        "Class": {
          "description": "Adviser = 1, NonAdviser = 2.",
          "$ref": "#/definitions/FeeClass"
        },
        "Name": {
          "description": "Name of fee.",
          "type": "string"
        },
        "Tiers": {
          "description": "Tiers of fee.",
          "items": {
            "$ref": "#/definitions/PdsFeeTier"
          },
          "type": "array"
        },
        "DollarOverwriteSettings": {
          "description": "Dollar overwrite settings.",
          "$ref": "#/definitions/PdsFeeOverwriteSettings"
        },
        "PercentOverwriteSettings": {
          "description": "Percent overwrite settings.",
          "$ref": "#/definitions/PdsFeeOverwriteSettings"
        },
        "DefaultValue": {
          "description": "Default value of overwrite.",
          "format": "double",
          "type": "number"
        },
        "DefaultValueWithTax": {
          "description": "Default value of overwrite with tax.",
          "format": "double",
          "type": "number"
        },
        "DefaultType": {
          "description": "Dollar = 1, Percent = 2.",
          "$ref": "#/definitions/FeeValueType"
        },
        "IndexationSettings": {
          "description": "Indexation settings.",
          "$ref": "#/definitions/PdsFeeIndexationSettings"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsFeeIndexationSettings": {
      "properties": {
        "Type": {
          "description": "None = 0, Both = 0, Cpi = 1, Custom = 2.",
          "$ref": "#/definitions/FeeIndexationType"
        },
        "TypeAllowed": {
          "description": "None = 0, Both = 0, Cpi = 1, Custom = 2.",
          "$ref": "#/definitions/FeeIndexationType"
        },
        "Value": {
          "description": "Fee indexation value.",
          "format": "double",
          "type": "number"
        },
        "ValueMax": {
          "description": "Fee indexation maximum value.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsFeeOverwriteSettings": {
      "properties": {
        "MinAmount": {
          "description": "Fee overwrite minimum amount.",
          "format": "double",
          "type": "number"
        },
        "MaxAmount": {
          "description": "Fee overwrite maximum amount.",
          "format": "double",
          "type": "number"
        },
        "MinAmountWithTax": {
          "description": "Fee overwrite minimum amount with tax.",
          "format": "double",
          "type": "number"
        },
        "MaxAmountWithTax": {
          "description": "Fee overwrite maximum amount with tax.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsFeeTier": {
      "properties": {
        "ValueAppliedFrom": {
          "description": "The value is applied from.",
          "format": "double",
          "type": "number"
        },
        "FeePercent": {
          "description": "Fee percent.",
          "format": "double",
          "type": "number"
        },
        "FeePercentWithTax": {
          "description": "Fee percent with tax.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsModelAU": {
      "properties": {
        "Id": {
          "description": "ModelId as returned by the Models endpoint.",
          "type": "string"
        },
        "Name": {
          "description": "Model name.",
          "type": "string"
        },
        "Style": {
          "description": "Model style.",
          "type": "string"
        },
        "Code": {
          "description": "Model code.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsTaxOption": {
      "properties": {
        "Code": {
          "description": "Tax Option code.",
          "type": "string"
        },
        "Description": {
          "description": "Tax option description.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PensionPaymentType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "PercentageReturn": {
      "properties": {
        "PeriodDescription": {
          "description": "A description of the period the returns are calculated for.",
          "type": "string"
        },
        "GrossPercentageReturn": {
          "description": "The performance percentage return excluding expenses.",
          "format": "double",
          "type": "number"
        },
        "NetPercentageReturn": {
          "description": "The performance percentage return including expenses.",
          "format": "double",
          "type": "number"
        },
        "Annualised": {
          "description": "Whether the return is annualised.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "Performance": {
      "properties": {
        "HoldingsExcluded": {
          "description": "The number of individual securities excluded from account performance calculations.",
          "type": "boolean"
        },
        "BeginningMarketValue": {
          "description": "The beginning market value of the account on the From Date. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "EndingMarketValue": {
          "description": "The ending market value of the account on the To Date. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetCapitalMovement": {
          "description": "The net additions and withdrawals that flowed into and out of the account within the performance period. The transactions that make up this net amount when including cash are available from the Additions and withdrawals report. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetInternalTransfers": {
          "description": "Internal transfers between cash books that are not to be treated as a client addition or withdrawal. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CashExpenses": {
          "description": "Expenses incurred by the account within the period, to be paid from either a account cash book or external bank account. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "UnallocatedAmount": {
          "description": "An unallocated amount will show if the sum of the above does not equal the Movement in value amount - that is, there is a component of the difference between the starting and ending market value that has not been explained. This will usually be because the cash side of a transaction or income event cannot be found. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "DollarReturn": {
          "description": "",
          "$ref": "#/definitions/DollarReturnData"
        },
        "PercentReturns": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PerformanceReturn"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PerformanceReturn": {
      "properties": {
        "PeriodDescription": {
          "description": "A description of the period the returns are calculated for.",
          "type": "string"
        },
        "GrossPercentReturn": {
          "description": "The performance percentage return excluding expenses.",
          "format": "double",
          "type": "number"
        },
        "NetPercentReturn": {
          "description": "The performance percentage return including expenses.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PostEsgCategoryRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "CategoryIds": {
          "description": "An array of ESG category IDs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId",
        "CategoryIds"
      ],
      "type": "object"
    },
    "PostOneOffCashflowInstructionRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "Allocations": {
          "description": "Cashflow instruction details.",
          "items": {
            "$ref": "#/definitions/CashflowInstructionDetail"
          },
          "type": "array"
        },
        "CashflowInstructionType": {
          "description": "OneOffDirectDebit = 3, OneOffWithdrawal = 4.",
          "$ref": "#/definitions/OneOffCashflowInstructionType"
        },
        "Amount": {
          "description": "Amount of the one-off cashflow instruction to apply.",
          "format": "double",
          "type": "number"
        },
        "TaxType": {
          "description": "PersonalNon = 3 (Non-concessional personal), ExemptCgtRetire = 4, ExemptCgt15 = 5, ExemptPerInjury = 6, Spouse = 7, Downsizer = 11. (Only applicable for SuperSMA accumulation accounts and one-off direct debit)",
          "$ref": "#/definitions/SuperannuationContributionType"
        }
      },
      "required": [
        "AccountId",
        "Allocations",
        "CashflowInstructionType"
      ],
      "type": "object"
    },
    "PostSecurityExclusionRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "SecurityExclusions": {
          "description": "Security exclusion.",
          "items": {
            "$ref": "#/definitions/SecurityExclusion"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId",
        "SecurityExclusions"
      ],
      "type": "object"
    },
    "PostSecuritySubstitutionRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "SecuritySubstitutions": {
          "description": "Security substitution.",
          "items": {
            "$ref": "#/definitions/SecuritySubstitution"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId",
        "SecuritySubstitutions"
      ],
      "type": "object"
    },
    "PostUserRequest": {
      "properties": {
        "Name": {
          "description": "The user's name.",
          "$ref": "#/definitions/IndividualName"
        },
        "Gender": {
          "description": "Male = 1, Female = 2, or null.",
          "$ref": "#/definitions/UserGender"
        },
        "Email": {
          "description": "The user's email address.",
          "minLength": 1,
          "type": "string"
        },
        "DateOfBirth": {
          "description": "For security purposes if we need to identify the user over the phone.",
          "format": "date-time",
          "type": "string"
        },
        "MothersMaidenName": {
          "description": "For security purposes if we need to identify the user over the phone.",
          "type": "string"
        },
        "Addresses": {
          "description": "Contains details of the user's address.",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        },
        "Phone": {
          "description": "The user's phone number.",
          "minLength": 1,
          "type": "string"
        },
        "PhoneOther": {
          "description": "An alternative phone number for the investor.",
          "type": "string"
        },
        "JobTitle": {
          "description": "The user's job title.",
          "type": "string"
        },
        "AdviserId": {
          "description": "The adviser ID for this user's adviser.",
          "format": "int32",
          "type": "integer"
        },
        "GenerateGetStartedToken": {
          "description": "Whether to generate an SSO token for this user to get started.",
          "type": "boolean"
        }
      },
      "required": [
        "Addresses",
        "AdviserId",
        "Email",
        "GenerateGetStartedToken",
        "Name",
        "Phone"
      ],
      "type": "object"
    },
    "PublisherEvent": {
      "properties": {
        "Id": {
          "description": "ID of the publisher event.",
          "type": "string"
        },
        "EventName": {
          "description": "Name of the publisher event.",
          "type": "string"
        },
        "CreatedDate": {
          "description": "Date the record was created.",
          "format": "date-time",
          "type": "string"
        },
        "UpdatedDate": {
          "description": "Date the record was updated.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PublisherEventDetail": {
      "properties": {
        "FileId": {
          "description": "Unique ID of the generated file.",
          "type": "string"
        },
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "FileName": {
          "description": "Generated file name of the file.",
          "type": "string"
        },
        "GeneratedDate": {
          "description": "Date the file was generated.",
          "format": "date-time",
          "type": "string"
        },
        "PublishedDate": {
          "description": "Date the file was published.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PutAccountModelWeightingRequestAU": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "AccountModelWeightings": {
          "description": "Account model weighting.",
          "items": {
            "$ref": "#/definitions/AccountModelWeighting"
          },
          "type": "array"
        },
        "RebalanceType": {
          "description": "Floating = 0, Fixed = 1.",
          "$ref": "#/definitions/RebalanceType"
        }
      },
      "required": [
        "AccountId",
        "AccountModelWeightings",
        "RebalanceType"
      ],
      "type": "object"
    },
    "PutEsgCategoryRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "CategoryIds": {
          "description": "An array of ESG category IDs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId"
      ],
      "type": "object"
    },
    "PutModelWeightAdjustmentRequest": {
      "properties": {
        "ModelId": {
          "description": "The model ID as returned by the model endpoint.",
          "minLength": 1,
          "type": "string"
        },
        "ModelWeightAdjustments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ModelWeightAdjustment"
          },
          "type": "array"
        }
      },
      "required": [
        "ModelId",
        "ModelWeightAdjustments"
      ],
      "type": "object"
    },
    "PutRegularCashflowInstructionRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "Allocations": {
          "description": "Cashflow instruction details.",
          "items": {
            "$ref": "#/definitions/CashflowInstructionDetail"
          },
          "type": "array"
        },
        "CashflowInstructionType": {
          "description": "Regular contribution = 1, Regular withdrawal = 2, Income reinvestment = 5, Expenses = 6, All contributions and rollovers (Only allowed for SuperSMA accumulation accounts) = 8, Other withdrawals = 9, Superfund withdrawals and rollovers (Only allowed for SuperSMA accumulation and pension accounts) = 16, Insurance premiums (Only allowed for SuperSMA accumulation and pension accounts) = 17.",
          "$ref": "#/definitions/RegularCashflowInstructionType"
        },
        "FrequencyType": {
          "description": "Monthly = 1, Quarterly = 2, SixMonthly = 3, Annually = 4.",
          "$ref": "#/definitions/RegularWithdrawalFrequencyType"
        },
        "StartDate": {
          "description": "Start date of the cashflow instruction. (Only applicable for regular withdrawal)",
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "description": "End date of the cashflow instruction. (Only applicable for regular withdrawal)",
          "format": "date-time",
          "type": "string"
        },
        "Amount": {
          "description": "Amount of the cashflow instruction to apply. (Only applicable for regular contribution and regular withdrawal)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "AccountId",
        "Allocations",
        "CashflowInstructionType",
        "FrequencyType"
      ],
      "type": "object"
    },
    "PutSecurityCustomisationRequest": {
      "properties": {
        "AccountId": {
          "description": "",
          "minLength": 1,
          "type": "string"
        },
        "SecurityExclusions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SecurityExclusion"
          },
          "type": "array"
        },
        "SecuritySubstitutions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SecuritySubstitution"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId",
        "SecurityExclusions",
        "SecuritySubstitutions"
      ],
      "type": "object"
    },
    "PutSecurityExclusionRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "SecurityExclusions": {
          "description": "Security exclusion.",
          "items": {
            "$ref": "#/definitions/SecurityExclusion"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId"
      ],
      "type": "object"
    },
    "PutSecuritySubstitutionRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "minLength": 1,
          "type": "string"
        },
        "SecuritySubstitutions": {
          "description": "Security substitution.",
          "items": {
            "$ref": "#/definitions/SecuritySubstitution"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId"
      ],
      "type": "object"
    },
    "RealisedCgtAssetDisposal": {
      "properties": {
        "CgtGain": {
          "description": "Calculated based on what is optimal for the disposal method selected. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "Equal to the gross gain if applicable. Applies if the asset was purchased within the last 12 months relative to the as at date requested for this section. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "Shows the gain between the indexed cost and the market value, if applicable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "The net of the gross gain and discount applied based on amounts that have had the discount rate applied. If the account is for a company, then the discounted rate applied will be zero. For an individual the discount rate applied is 50%. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "OptimalCgtCalculationMethod": {
          "description": "The disposal method selected to calculate CGT gains.",
          "type": "string"
        },
        "GrossGain": {
          "description": "Equal to the market value minus the adjusted cost. Shows the gain before any discounting or indexing is applied. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "SaleProceeds": {
          "description": "The amount the parcel was sold for. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IndexedCost": {
          "description": "If the security was acquired prior to 30/09/1999 and was held for more than one year, the cost base is increased by applying an indexation factor based on increase in CPI. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtLoss": {
          "description": "Applicable if there is a loss on a tax parcel and the purchase date is post 19 September 1985. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxFreeAmount": {
          "description": "Amount within the parcel that is tax free. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ActualCost": {
          "description": "The amount the parcel was purchased for less any GST refundable amount. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "description": "The number of units or shares disposed.",
          "format": "double",
          "type": "number"
        },
        "SaleDate": {
          "description": "The disposal date.",
          "format": "date-time",
          "type": "string"
        },
        "PurchaseDate": {
          "description": "Typically, this is the same as the Tax date unless a corporate action has occurred, such as a takeover, where CGT rollover relief applies.",
          "format": "date-time",
          "type": "string"
        },
        "TaxDate": {
          "description": "The date of the original purchase of the parcels, as used for tax purposes.",
          "format": "date-time",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "AdjustedCost": {
          "description": "The actual cost adjusted for any corporate actions, such as tax deferred distributions, or subsequent transactions. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "PreCgtGainLoss": {
          "description": "Gain if Pre-CGT calculation method is selected. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "RealisedCgtDetail": {
      "properties": {
        "CgtAssetDisposals": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RealisedCgtAssetDisposal"
          },
          "type": "array"
        },
        "TaxFreeAndTaxDeferredAmounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TaxFreeAndTaxDeferredAmount"
          },
          "type": "array"
        },
        "TrustCgtDistributions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TrustCgtDistribution"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "RebalanceTolerance": {
      "properties": {
        "Amount": {
          "description": "Rebalance tolerance amount. Prevents trades of a value less than this figure.",
          "format": "double",
          "type": "number"
        },
        "Percentage": {
          "description": "Rebalance tolerance percentage. Prevents trades unless they exceed this figure as a percentage of the portfolio’s value. For example, if this is set to 5, only trades that exceed five percent of the portfolio’s total value are performed.",
          "format": "double",
          "type": "number"
        },
        "Units": {
          "description": "Rebalance tolernace number of units. Prevents trades of a quantity less than this figure.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "RebalanceType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "RecalcStatus": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "RecalcType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "ReceivableAndPayable": {
      "properties": {
        "Code": {
          "description": "The asset code of the receivable / payable.",
          "type": "string"
        },
        "Description": {
          "description": "A description of the receivable / payable.",
          "type": "string"
        },
        "TypeDescription": {
          "description": "Type of the receivable / payable.",
          "type": "string"
        },
        "Amount": {
          "description": "The total value of the receivable/payable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IncludedInNetValue": {
          "description": "Whether included in the account's net value.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "RegularCashflowInstructionType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        5,
        6,
        8,
        9,
        16,
        17
      ]
    },
    "RegularContribution": {
      "properties": {
        "Amount": {
          "description": "Amount of regular cash contributions to the account.",
          "format": "double",
          "type": "number"
        },
        "Frequency": {
          "description": "Monthly = 1, ThreeMonthly = 3, SixMonthly = 6, Annually = 12, Quarterly = 13, HalfYearly = 14.",
          "$ref": "#/definitions/PaymentFrequencyType"
        }
      },
      "required": [],
      "type": "object"
    },
    "RegularTransaction": {
      "properties": {
        "Amount": {
          "description": "Amount of regular transaction from the account.",
          "format": "double",
          "type": "number"
        },
        "Frequency": {
          "description": "Monthly = 1, ThreeMonthly = 3, SixMonthly = 6, Annually = 12, Quarterly = 13, HalfYearly = 14.",
          "$ref": "#/definitions/PaymentFrequencyType"
        },
        "CommencementDate": {
          "description": "The commencement date of the regular transaction.",
          "format": "date-time",
          "type": "string"
        },
        "TerminationDate": {
          "description": "The termination date of the regular transaction.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "RegularWithdrawalFrequencyType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4
      ]
    },
    "SMAAccountRequest": {
      "properties": {
        "Name": {
          "description": "Account name.",
          "minLength": 1,
          "type": "string"
        },
        "AdviserId": {
          "description": "Adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "RegisteredName": {
          "description": "Account registered name.",
          "type": "string"
        },
        "EntityType": {
          "description": "The entity type of the account. Individual = 0, Trust = 1, Corporate = 2, Partnership = 3, Superfund = 4, Joint = 5.",
          "$ref": "#/definitions/EntityType"
        },
        "PdsId": {
          "description": "PDS ID of account.",
          "minLength": 1,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "The currency code of the account.",
          "minLength": 1,
          "type": "string"
        },
        "IsCorporate": {
          "description": "Is the account a corporate.",
          "type": "boolean"
        },
        "FeeConsentType": {
          "description": "",
          "$ref": "#/definitions/FeesType"
        },
        "FixedTermFeesStartEndDate": {
          "description": "",
          "$ref": "#/definitions/FixedTermFees"
        },
        "OngoingFeesAnniversaryDate": {
          "description": "",
          "$ref": "#/definitions/OngoingFees"
        },
        "Fees": {
          "description": "Account fees.",
          "items": {
            "$ref": "#/definitions/AccountFee"
          },
          "type": "array"
        },
        "Models": {
          "description": "Account models.",
          "items": {
            "$ref": "#/definitions/AccountModelLink"
          },
          "type": "array"
        },
        "BankAccounts": {
          "description": "Bank accounts.",
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "type": "array"
        },
        "FeeInstructions": {
          "description": "Model allocation to deduct fees.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "IncomeInstructions": {
          "description": "Model allocation to reinvest income.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "SecurityTransfers": {
          "description": "Security transfers.",
          "items": {
            "$ref": "#/definitions/SecurityTransfer"
          },
          "type": "array"
        },
        "RegularWithdrawal": {
          "description": "Bank account to be used for regular withdrawals.",
          "$ref": "#/definitions/RegularTransaction"
        },
        "RegularContribution": {
          "description": "Bank account to be used for direct debiting regular contribution plan.",
          "$ref": "#/definitions/RegularContribution"
        },
        "AccountSetup": {
          "description": "To be used for regular SMA accounts.",
          "$ref": "#/definitions/AccountSetup"
        }
      },
      "required": [
        "AccountSetup",
        "AdviserId",
        "BankAccounts",
        "CurrencyCode",
        "EntityType",
        "FeeConsentType",
        "Models",
        "Name",
        "PdsId"
      ],
      "type": "object"
    },
    "Security": {
      "properties": {
        "Code": {
          "description": "Security code.",
          "type": "string"
        },
        "Exchange": {
          "description": "Security exchange.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "SecurityCustomisationResponse": {
      "properties": {
        "SecurityExclusions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SecurityExclusionResponse"
          },
          "type": "array"
        },
        "SecuritySubstitutions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SecuritySubstitutionResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SecurityExclusion": {
      "properties": {
        "SecurityId": {
          "description": "Security ID.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "SecurityId"
      ],
      "type": "object"
    },
    "SecurityExclusionResponse": {
      "properties": {
        "CreatedDate": {
          "description": "Date security exclusion was created.",
          "format": "date-time",
          "type": "string"
        },
        "Security": {
          "description": "Security name.",
          "$ref": "#/definitions/Security"
        }
      },
      "required": [],
      "type": "object"
    },
    "SecurityResponse": {
      "properties": {
        "Id": {
          "description": "Security ID.",
          "type": "string"
        },
        "Code": {
          "description": "Security code.",
          "type": "string"
        },
        "Description": {
          "description": "Description.",
          "type": "string"
        },
        "Isin": {
          "description": "ISIN of security.",
          "type": "string"
        },
        "Exchange": {
          "description": "Exchange of security.",
          "type": "string"
        },
        "Currency": {
          "description": "Currency of security.",
          "type": "string"
        },
        "IsAllowedByApl": {
          "description": "Is the security allowed by the approved product list. (Only returned when PdsId is supplied)",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "SecuritySubstitution": {
      "properties": {
        "FromSecurityId": {
          "description": "From security ID.",
          "minLength": 1,
          "type": "string"
        },
        "ToSecurityId": {
          "description": "To security ID.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "FromSecurityId",
        "ToSecurityId"
      ],
      "type": "object"
    },
    "SecuritySubstitutionResponse": {
      "properties": {
        "CreatedDate": {
          "description": "Date security substitution was created.",
          "format": "date-time",
          "type": "string"
        },
        "FromSecurity": {
          "description": "From security.",
          "$ref": "#/definitions/Security"
        },
        "ToSecurity": {
          "description": "To security.",
          "$ref": "#/definitions/Security"
        }
      },
      "required": [],
      "type": "object"
    },
    "SecurityTransfer": {
      "properties": {
        "SecurityId": {
          "description": "Security ID.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of security.",
          "format": "double",
          "type": "number"
        },
        "OutsideOfRebalanceQuantity": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "HoldingType": {
          "description": "IssuerSponsored = 0, Chess = 1.",
          "$ref": "#/definitions/InspecieHoldingType"
        },
        "SponsorOrIssuer": {
          "description": "Is the security held with a sponsor or issuer.",
          "type": "string"
        },
        "ParticipantId": {
          "description": "The participant ID.",
          "format": "int32",
          "type": "integer"
        },
        "HinOrSrn": {
          "description": "Is the security transfer held under a HIN or SRN.",
          "type": "string"
        },
        "Direction": {
          "description": "In = 0, Out = 1.",
          "$ref": "#/definitions/InspecieTransferDirection"
        }
      },
      "required": [],
      "type": "object"
    },
    "ServiceRecalcStatus": {
      "properties": {
        "RecalcAsAtDate": {
          "description": "Recalc date.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "SmaTransferMethodType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "SsoLoginRequest": {
      "properties": {
        "Application": {
          "description": "ID of the application the user will be sent to once logged in. Platform = 0, InvestorPortal = 1, AdviserPortal = 2, ApplicationPortal = 3.",
          "$ref": "#/definitions/TargetApplication"
        },
        "UserId": {
          "description": "ID of the user to log in.",
          "format": "int32",
          "type": "integer"
        },
        "Parameters": {
          "description": "",
          "type": "object"
        }
      },
      "required": [
        "Application",
        "UserId"
      ],
      "type": "object"
    },
    "SsoLoginResponse": {
      "properties": {
        "SsoUrl": {
          "description": "SSO URL.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "Subscription": {
      "properties": {
        "Models": {
          "description": "",
          "items": {
            "$ref": "#/definitions/SubscriptionModel"
          },
          "type": "array"
        },
        "CashHub": {
          "description": "",
          "$ref": "#/definitions/CashHub"
        }
      },
      "required": [],
      "type": "object"
    },
    "SubscriptionModel": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "Weighting": {
          "description": "Account’s model weighting at the valuation date.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "SuperFund": {
      "properties": {
        "Usi": {
          "description": "Unique superannuation identifier (USI) is used in SuperStream to identify an APRA fund and/or its superannuation product which an employee (member) is contributing to.",
          "type": "string"
        },
        "Spin": {
          "description": "Superannuation product identifier number.",
          "type": "string"
        },
        "FundName": {
          "description": "Name of the superannuation fund.",
          "type": "string"
        },
        "ProductName": {
          "description": "Product name of the superannuation fund.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "SuperSmaAccumulatedPaymentType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "SuperSmaAccumulationAccountRequest": {
      "properties": {
        "Name": {
          "description": "Account name.",
          "minLength": 1,
          "type": "string"
        },
        "AdviserId": {
          "description": "Adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "RegisteredName": {
          "description": "Account registered name.",
          "type": "string"
        },
        "EntityType": {
          "description": "The entity type of the account. Individual = 0, Trust = 1, Corporate = 2, Partnership = 3, Superfund = 4, Joint = 5.",
          "$ref": "#/definitions/EntityType"
        },
        "PdsId": {
          "description": "PDS ID of account.",
          "minLength": 1,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "The currency code of the account.",
          "minLength": 1,
          "type": "string"
        },
        "IsCorporate": {
          "description": "Is the account a corporate.",
          "type": "boolean"
        },
        "FeeConsentType": {
          "description": "",
          "$ref": "#/definitions/FeesType"
        },
        "FixedTermFeesStartEndDate": {
          "description": "",
          "$ref": "#/definitions/FixedTermFees"
        },
        "OngoingFeesAnniversaryDate": {
          "description": "",
          "$ref": "#/definitions/OngoingFees"
        },
        "Fees": {
          "description": "Account fees.",
          "items": {
            "$ref": "#/definitions/AccountFee"
          },
          "type": "array"
        },
        "Models": {
          "description": "Account models.",
          "items": {
            "$ref": "#/definitions/AccountModelLink"
          },
          "type": "array"
        },
        "BankAccounts": {
          "description": "Bank accounts.",
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "type": "array"
        },
        "FeeInstructions": {
          "description": "Model allocation to deduct fees.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "IncomeInstructions": {
          "description": "Model allocation to reinvest income.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "ContributionSources": {
          "description": "Source of fund information.",
          "items": {
            "$ref": "#/definitions/InflowsContributionSource"
          },
          "type": "array"
        },
        "Transfers": {
          "description": "Contains details on other SuperSMA account(s) to be transferred to this account.",
          "items": {
            "$ref": "#/definitions/InflowsTransfer"
          },
          "type": "array"
        },
        "OtherContributions": {
          "description": "Contains details of other assets that will be used to fund this account.",
          "items": {
            "$ref": "#/definitions/InflowsOtherContribution"
          },
          "type": "array"
        },
        "EmployerContributions": {
          "description": "Contains details of other assets that will be used to fund this account.",
          "type": "boolean"
        },
        "IsConsolidationAccount": {
          "description": "Is the account consolidated.",
          "type": "boolean"
        },
        "InitialInvestmentAmount": {
          "description": "The amount of cash that will be invested in the account.",
          "format": "double",
          "type": "number"
        },
        "InitialInvestmentType": {
          "description": "Concessional_Employee = 11, Concessional_Personal = 12, Concessional_OtherFriendsAndFamily = 13, NonConcessional_Personal = 21, NonConcessional_SpouseAndChild = 22, NonConcessional_FirstHomeSaverAccount = 23, Exempt_CGT_15Year = 31, Exempt_CGT_Retirement = 32, Exempt_PersonalInjuryElection = 33, Other_GovernmentCoContribution = 41, Other_LowIncomeSuperContribution = 42, Downsizer = 43.",
          "$ref": "#/definitions/ContributionTypes"
        },
        "ContributionType": {
          "description": "Concessional_Employee = 11, Concessional_Personal = 12, Concessional_OtherFriendsAndFamily = 13, NonConcessional_Personal = 21, NonConcessional_SpouseAndChild = 22, NonConcessional_FirstHomeSaverAccount = 23, Exempt_CGT_15Year = 31, Exempt_CGT_Retirement = 32, Exempt_PersonalInjuryElection = 33, Other_GovernmentCoContribution = 41, Other_LowIncomeSuperContribution = 42, Downsizer = 43.",
          "$ref": "#/definitions/ContributionTypes"
        },
        "RegularContribution": {
          "description": "Contains details of the regular contribution plan for this account.",
          "$ref": "#/definitions/RegularContribution"
        },
        "AdviserServicesProvided": {
          "description": "",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "required": [
        "AdviserId",
        "AdviserServicesProvided",
        "BankAccounts",
        "ContributionSources",
        "CurrencyCode",
        "EntityType",
        "FeeConsentType",
        "InitialInvestmentAmount",
        "InitialInvestmentType",
        "Models",
        "Name",
        "PdsId"
      ],
      "type": "object"
    },
    "SuperSmaPensionAccountRequest": {
      "properties": {
        "Name": {
          "description": "Account name.",
          "minLength": 1,
          "type": "string"
        },
        "AdviserId": {
          "description": "Adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "RegisteredName": {
          "description": "Account registered name.",
          "type": "string"
        },
        "EntityType": {
          "description": "The entity type of the account. Individual = 0, Trust = 1, Corporate = 2, Partnership = 3, Superfund = 4, Joint = 5.",
          "$ref": "#/definitions/EntityType"
        },
        "PdsId": {
          "description": "PDS ID of account.",
          "minLength": 1,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "The currency code of the account.",
          "minLength": 1,
          "type": "string"
        },
        "IsCorporate": {
          "description": "Is the account a corporate.",
          "type": "boolean"
        },
        "FeeConsentType": {
          "description": "",
          "$ref": "#/definitions/FeesType"
        },
        "FixedTermFeesStartEndDate": {
          "description": "",
          "$ref": "#/definitions/FixedTermFees"
        },
        "OngoingFeesAnniversaryDate": {
          "description": "",
          "$ref": "#/definitions/OngoingFees"
        },
        "Fees": {
          "description": "Account fees.",
          "items": {
            "$ref": "#/definitions/AccountFee"
          },
          "type": "array"
        },
        "Models": {
          "description": "Account models.",
          "items": {
            "$ref": "#/definitions/AccountModelLink"
          },
          "type": "array"
        },
        "BankAccounts": {
          "description": "Bank accounts.",
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "type": "array"
        },
        "FeeInstructions": {
          "description": "Model allocation to deduct fees.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "IncomeInstructions": {
          "description": "Model allocation to reinvest income.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "PensionType": {
          "description": "AccountBasedPension = 1, TransitionToRetirement = 2.",
          "$ref": "#/definitions/ManagedPensionType"
        },
        "ContributionSources": {
          "description": "SuperSMA source of fund information.",
          "items": {
            "$ref": "#/definitions/InflowsContributionSource"
          },
          "type": "array"
        },
        "Transfers": {
          "description": "Contains details on other SuperSMA account(s) to be transferred to this account.",
          "items": {
            "$ref": "#/definitions/InflowsTransfer"
          },
          "type": "array"
        },
        "OtherContributions": {
          "description": "Contains details of other assets that will be used to fund this account.",
          "items": {
            "$ref": "#/definitions/InflowsOtherContribution"
          },
          "type": "array"
        },
        "Consolidation": {
          "description": "Establish an accumulation account. You can open an accumulation account in the same application alongside a pension account. Only available for SuperSMA Pension.",
          "$ref": "#/definitions/InflowsConsolidation"
        },
        "PensionPayments": {
          "description": "The payment amount paid from the pension account. Only available for SuperSMA Pension.",
          "$ref": "#/definitions/RegularTransaction"
        },
        "PaymentType": {
          "description": "Specified = 0, Minimum = 1, Maximum = 2.",
          "$ref": "#/definitions/PensionPaymentType"
        },
        "CentrelinkSchedule": {
          "description": "If a Centrelink schedule is required.",
          "type": "boolean"
        },
        "PensionPaymentInstructions": {
          "description": "Pension payment instructions.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "AdviserServicesProvided": {
          "description": "",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "required": [
        "AdviserId",
        "AdviserServicesProvided",
        "BankAccounts",
        "CurrencyCode",
        "EntityType",
        "FeeConsentType",
        "Models",
        "Name",
        "PaymentType",
        "PdsId",
        "PensionType"
      ],
      "type": "object"
    },
    "SuperannuationContributionType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ]
    },
    "TargetApplication": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "TaxFreeAndTaxDeferredAmount": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "TaxDate": {
          "description": "The date of the original purchase of the parcels, as used for tax purposes.",
          "format": "date-time",
          "type": "string"
        },
        "PurchaseDate": {
          "description": "Typically, this is the same as the Tax date unless a corporate action has occurred, such as a takeover, where CGT rollover relief applies.",
          "format": "date-time",
          "type": "string"
        },
        "SaleDate": {
          "description": "The disposal date.",
          "format": "date-time",
          "type": "string"
        },
        "Quantity": {
          "description": "The number of units or shares disposed.",
          "format": "double",
          "type": "number"
        },
        "ActualCost": {
          "description": "The amount the parcel was purchased for less any GST refundable amount. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxDeferredAmount": {
          "description": "Amount within the parcel that is tax deferred. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxFreeAmount": {
          "description": "Amount within the parcel that is tax free. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "The actual cost adjusted for any corporate actions, such as tax deferred distributions, or subsequent transactions. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "TaxSummary": {
      "properties": {
        "LossesCarriedForward": {
          "description": "Any losses from the prior years that have been carried forward. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "LossesCurrentYear": {
          "description": "The total amount of losses incurred from asset disposals during the tax year. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtDisposalsDiscounted": {
          "description": "Disposal amounts that have had the discount rate applied. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtDisposalsIndexed": {
          "description": "Shows the gain between the indexed cost and the disposal value, if applicable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtDisposalsOther": {
          "description": "Applies if the asset was disposed within 12 months of acquisition. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtDistributionsDiscounted": {
          "description": "Distribution amounts that have had the discount rate applied. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtDistributionsIndexed": {
          "description": "Shows the gain between the indexed cost and the disposal value, if applicable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtDistributionsOther": {
          "description": "Applies if the asset was disposed within 12 months of acquisition. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "LossesAppliedDiscounted": {
          "description": "Losses attributable against discounted gains. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "LossesAppliedIndexed": {
          "description": "Losses attributable against indexed gains. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "LossesAppliedOther": {
          "description": "Losses attributable against other gains. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "DiscountApplied": {
          "description": "The amount of discount allowable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLoss": {
          "description": "The account's net capital gain (or loss) for the tax year. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLossDiscounted": {
          "description": "The account's net capital gain (or loss) related to discounting. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLossIndexed": {
          "description": "The account's net capital gain (or loss) related to indexing. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLossOther": {
          "description": "The account's net capital gain (or loss) not relating to discounting or indexing. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "Title": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "Transaction": {
      "properties": {
        "ContractNoteReference": {
          "description": "Unique contract note reference number.",
          "type": "string"
        },
        "DeemedAmount": {
          "description": "The buyback capital value applied for CGT purposes. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CostBaseUnknown": {
          "description": "Whether cost base is unknown.",
          "type": "boolean"
        },
        "BuyBack": {
          "description": "If the transaction is classified as a buyback.",
          "type": "boolean"
        },
        "AveragePriceInTradedCurrency": {
          "description": "TradedCurrencyAmount divided by quantity.",
          "format": "double",
          "type": "number"
        },
        "AmountInTradedCurrency": {
          "description": "Displays the amount traded in an international currency.",
          "format": "double",
          "type": "number"
        },
        "TradedCurrency": {
          "description": "For International Investments. Displays the currency in which the asset was traded.",
          "type": "string"
        },
        "SettlementDate": {
          "description": "The date on which the transaction settled.",
          "format": "date-time",
          "type": "string"
        },
        "AveragePriceInSettlementCurrency": {
          "description": "AmountInSettlementCurrency divided by quantity.",
          "format": "double",
          "type": "number"
        },
        "AmountInSettlementCurrency": {
          "description": "Displays the amount settled in an international currency.",
          "format": "double",
          "type": "number"
        },
        "SettlementCurrency": {
          "description": "Displays the currency in which the trade was settled.",
          "type": "string"
        },
        "Broker": {
          "description": "The name of the broker against the transaction.",
          "type": "string"
        },
        "GstClaimable": {
          "description": "The total of any GST amount that is payable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "BrokerageGst": {
          "description": "The GST amount of any brokerage for the transaction. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "BrokerageIncludingGst": {
          "description": "The total of any brokerage for the transaction including GST. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TransactionId": {
          "description": "The unique identifier of the transaction.",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "TransactionDate": {
          "description": "The date on which the transaction occurred.",
          "format": "date-time",
          "type": "string"
        },
        "Quantity": {
          "description": "The number of units or shares disposed.",
          "format": "double",
          "type": "number"
        },
        "NetAmount": {
          "description": "This value should be adjusted (increased for a buy, decreased for a sell) for any brokerage, GST or other charges paid to transact. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Unconfirmed": {
          "description": "Whether the transaction has not been confirmed.",
          "type": "boolean"
        },
        "AveragePrice": {
          "description": "Net amount divided by quantity. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "DisposalMethod": {
          "description": "Tax method used on the security disposal.",
          "type": "string"
        },
        "Narration": {
          "description": "Displays any notes that have added to the transaction.",
          "type": "string"
        },
        "TransactionTypeDescription": {
          "description": "A categorised type of the transaction.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "TransactionIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "Metadata including pagination.",
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [],
      "type": "object"
    },
    "TransferDirection": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "TransferMethodType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "TrustCgtDistribution": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "TaxDate": {
          "description": "The date of the original purchase of the parcels, as used for tax purposes.",
          "format": "date-time",
          "type": "string"
        },
        "GrossGain": {
          "description": "Equal to the Market value minus the Adjusted cost. Shows the gain before any discounting or indexing is applied. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "The net of the gross gain and discount applied based on amounts that have had the discount rate applied. If the account is for a company, then the discounted rate applied will be zero. For an individual the discount rate applied is 50%. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "Shows the gain between the indexed cost and the market value, if applicable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "Equal to the gross gain if applicable. Applies if the asset was purchased within the last 12 months relative to the as at date requested for this section. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtGainLoss": {
          "description": "The CGT gain is calculated based on what is optimal for the disposal method selected. In some cases the indexed gain is used to optimise the use of losses. The CGT gain calculated from a less than optimal method is shown in italics for information purposes only and is excluded from the totals for the account. NA is shown if a calculation method is not applicable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "PreCgtGainLoss": {
          "description": "Gain if Pre-CGT calculation method is selected. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "TrustOrFundDetails": {
      "properties": {
        "Name": {
          "description": "Name of the Trust or Fund.",
          "type": "string"
        },
        "Abn": {
          "description": "ABN of the Super Fund (rather than the corporate trustee) for corporate applicants.",
          "type": "string"
        },
        "Tfn": {
          "description": "TFN for an individual trustee.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "UnrealisedCgt": {
      "properties": {
        "CostBaseUnknown": {
          "description": "Whether cost base is unknown.",
          "type": "boolean"
        },
        "ActualCost": {
          "description": "The amount the parcel was purchased for less any GST refundable amount. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "The actual cost adjusted for any corporate actions, such as tax deferred distributions, or subsequent transactions. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "MarketValue": {
          "description": "Market Value of the security at the ValuationDate. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "GrossGain": {
          "description": "Equal to the market value minus the adjusted cost. Shows the gain before any discounting or indexing is applied. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "The net of the gross gain and discount applied based on amounts that have had the discount rate applied. If the account is for a company, then the discounted rate applied will be zero. For an individual the discount rate applied is 50%. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "Shows the gain between the indexed cost and the market value, if applicable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "Equal to the gross gain if applicable. Applies if the asset was purchased within the last 12 months relative to the as at date requested for this section. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtGain": {
          "description": "Calculated based on what is optimal for the disposal method selected. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtLoss": {
          "description": "Applicable if there is a loss on a tax parcel and the purchase date is post 19 September 1985. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtExemptGainLoss": {
          "description": "The gross gain or loss on tax parcels with that are CGT exempt, including those with a purchase date before the CGT legislation applied. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "UnrealisedCgtParcel": {
      "properties": {
        "CgtGain": {
          "description": "Calculated based on what is optimal for the disposal method selected. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "Equal to the gross gain if applicable. Applies if the asset was purchased within the last 12 months relative to the as at date requested for this section. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "Shows the gain between the indexed cost and the market value, if applicable. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "The net of the gross gain and discount applied based on amounts that have had the discount rate applied. If the account is for a company, then the discounted rate applied will be zero. For an individual the discount rate applied is 50%. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "OptimalCgtCalculationMethod": {
          "description": "The disposal method selected to calculate CGT gains.",
          "type": "string"
        },
        "GrossGain": {
          "description": "Equal to the market value minus the adjusted cost. Shows the gain before any discounting or indexing is applied. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "MarketValue": {
          "description": "The amount the parcel is worth using the current market price. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "IndexedCost": {
          "description": "If the security was acquired prior to 30/09/1999 and was held for more than one year, the cost base is increased by applying an indexation factor based on increase in CPI. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "The actual cost adjusted for any corporate actions, such as tax deferred distributions, or subsequent transactions. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxFreeAmount": {
          "description": "Amount within the parcel that is tax free. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TaxDeferredAmount": {
          "description": "Amount within the parcel that is tax deferred. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ActualCost": {
          "description": "The amount the parcel was purchased for less any GST refundable amount. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CostBaseUnknown": {
          "description": "Whether cost base is unknown.",
          "type": "boolean"
        },
        "Quantity": {
          "description": "The number of units or shares held for each tax parcel.",
          "format": "double",
          "type": "number"
        },
        "PurchaseDate": {
          "description": "Typically, this is the same as the Tax date unless a corporate action has occurred, such as a takeover, where CGT rollover relief applies.",
          "format": "date-time",
          "type": "string"
        },
        "TaxDate": {
          "description": "The date of the original purchase of the parcels, as used for tax purposes.",
          "format": "date-time",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "CgtLoss": {
          "description": "Applicable if there is a loss on a tax parcel and the purchase date is post 19 September 1985. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "CgtExemptGainLoss": {
          "description": "The gross gain or loss on tax parcels with that are CGT exempt, including those with a purchase date before the CGT legislation applied. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "UnrealisedCgtParcelIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/UnrealisedCgtParcel"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "Metadata including pagination.",
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [],
      "type": "object"
    },
    "UnsettledTransaction": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "TransactionDate": {
          "description": "The date on which the transaction occurred.",
          "format": "date-time",
          "type": "string"
        },
        "TransactionTypeDescription": {
          "description": "Transaction type description.",
          "type": "string"
        },
        "Quantity": {
          "description": "The number of units or shares disposed.",
          "format": "double",
          "type": "number"
        },
        "NetAmount": {
          "description": "This value should be adjusted (increased for a buy, decreased for a sell) for any brokerage, GST or other charges paid to transact. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "AveragePrice": {
          "description": "Net amount divided by quantity. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Brokerage": {
          "description": "Total of any brokerage for the transaction. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Gst": {
          "description": "GST amount of any brokerage for the transaction. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "DisposalMethod": {
          "description": "Tax method used on the security disposal.",
          "type": "string"
        },
        "Narration": {
          "description": "Displays any notes that have added to the transaction.",
          "type": "string"
        },
        "TradedCurrency": {
          "description": "For International Investments. Displays the currency in which the asset was traded.",
          "type": "string"
        },
        "AmountInTradedCurrency": {
          "description": "Displays the amount traded in an international currency.",
          "format": "double",
          "type": "number"
        },
        "AveragePriceInTradedCurrency": {
          "description": "TradedCurrencyAmount divided by quantity.",
          "format": "double",
          "type": "number"
        },
        "SettlementDate": {
          "description": "The date on which the transaction settled.",
          "format": "date-time",
          "type": "string"
        },
        "ContractNoteReference": {
          "description": "Unique contract note reference number.",
          "type": "string"
        },
        "OtherCharges": {
          "description": "Total of any other charges (eg. international transaction processing fees) for the transaction. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "OtherChargesGst": {
          "description": "GST amount of any other charges for the transaction. (Account currency)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "UnsettledTransactionIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/UnsettledTransaction"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "Metadata including pagination.",
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [],
      "type": "object"
    },
    "User": {
      "properties": {
        "UserId": {
          "description": "User ID.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "UserAccountLink": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "UserRole": {
          "description": "Accountant = 1, Custodian = 2, FinancialPlanner = 3, InvestmentAdviser = 4, Investor = 5, Owner = 6, AuthorisedRepresentative = 7.",
          "$ref": "#/definitions/AccountAccessType"
        },
        "Access": {
          "description": "Full = 0, Read = 1, Update = 2.",
          "$ref": "#/definitions/LinkAccess"
        }
      },
      "required": [],
      "type": "object"
    },
    "UserCreationResponse": {
      "properties": {
        "Id": {
          "description": "User ID.",
          "format": "int32",
          "type": "integer"
        },
        "GetStartedToken": {
          "description": "An SSO token for this user to get started.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "UserGender": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "Valuation": {
      "properties": {
        "ValuationDate": {
          "description": "Date used to display the data.",
          "format": "date-time",
          "type": "string"
        },
        "TotalCost": {
          "description": "The total account cost based on the cost base of unrealised holdings. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalValue": {
          "description": "The total account value based on the quantity and price of unrealised holdings. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "NetValue": {
          "description": "The total account value inclusive of receivables and payables. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "TotalGainOrLoss": {
          "description": " (Account currency)",
          "format": "double",
          "type": "number"
        },
        "MarketValueGainOrLoss": {
          "description": "MarketValueGainOrLoss as a result of the market price (MV) movement of the security. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "ExchangeRateGainOrLoss": {
          "description": "ExchangeRateGainOrLoss as a result of the movement of the exchange rate (FX). (Account currency)",
          "format": "double",
          "type": "number"
        },
        "EstimatedIncome": {
          "description": "Indicative field calculated based on the income of each asset generated over the past twelve months. (Account currency)",
          "format": "double",
          "type": "number"
        },
        "Yield": {
          "description": "The estimated income as a percentage of the market value of the account.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "TokenResponse": {
      "properties": {
        "token_type": {
          "description": "Token type is always Bearer.",
          "type": "string"
        },
        "expires_in": {
          "description": "After how many seconds an access token will expire.",
          "format": "int32",
          "type": "integer"
        },
        "ext_expires_in": {
          "description": "Extended lifetime of access token if value of this field is greater than value of expires_in.",
          "format": "int32",
          "type": "integer"
        },
        "access_token": {
          "description": "Access token that can be used to access public API endpoints.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "swagger": "2.0",
  "info": {
    "version": "2023.07.31",
    "title": "Public API"
  }
}