{
  "paths": {
    "/api/accounts/cashflowinstructions": {
      "get": {
        "responses": {
          "200": {
            "description": "Cash flow instructions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.CashflowInstruction"
              }
            }
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetCashflowInstructions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/cashflowinstructions/oneoff": {
      "post": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_AddOneOffCashflowInstruction",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PostOneOffCashflowInstructionRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Cashflow instruction {0} not found.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_DeleteOneOffCashflowInstruction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.cashflowInstructionId",
            "in": "query",
            "required": true,
            "description": "Cashflow instruction ID returned by GET cashflow instructions endpoint",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/cashflowinstructions/regular": {
      "put": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_UpdateRegularCashflowInstruction",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PutRegularCashflowInstructionRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_DeleteRegularCashflowInstruction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.cashflowInstructionType",
            "in": "query",
            "required": true,
            "description": "Regular contribution = 1, Regular withdrawal = 2",
            "format": "int32",
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11
            ]
          },
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.AccountCreateResult"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_CreateLegacy",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "AccountCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountCreate"
            }
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_LinkAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "link",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.LinkUserToAccounts"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_DeleteAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/bpay": {
      "get": {
        "responses": {
          "200": {
            "description": "Account BPAY response list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.AccountBpayResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetAccountBpay",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts) Omitting this field will retrieve items for all accounts.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/{id}/appform": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SmaApplicationForm"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetAppForm",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/{id}/holdingsbymodel": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.AccountHoldingsByModel"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetAccountHoldingsByModel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/{accountId}/userlinks": {
      "get": {
        "responses": {
          "200": {
            "description": "User account links",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.UserAccountLink"
              }
            }
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetUserAccountLinks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/{id}/signature": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_InsertSignature",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "signature",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.Signature"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/{id}/status": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SmaAccountStatus"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetAccountStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/customisations/exclusions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecurityExclusionResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetSecurityExclusions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "This operation is not allowed for {0} token.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_ReplaceSecurityExclusions",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.AddOrPutSecurityExclusionRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "This operation is not allowed for {0} token.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_AddSecurityExclusions",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.AddOrPutSecurityExclusionRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "This operation is not allowed for service provider token.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_DeleteSecurityExclusions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.securityCode",
            "in": "query",
            "required": false,
            "description": "The security code of the security.",
            "type": "string"
          },
          {
            "name": "request.exchangeCode",
            "in": "query",
            "required": false,
            "description": "The exchange code of the security.",
            "type": "string"
          },
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/customisations": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecurityCustomisationResponse"
            }
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetSecurityCustomisations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Security customisation response",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecurityCustomisationResponse"
            }
          },
          "401": {
            "description": "This operation is not allowed for {0} token.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_ReplaceSecurityCustomisations",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PutCustomisationRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/customisations/substitutions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecuritySubstitutionResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetSecuritySubstitutions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "This operation is not allowed for {0} token.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_ReplaceSecuritySubstitutions",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.AddOrPutSecuritySubstitutionRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "This operation is not allowed for {0} token.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_AddSecuritySubstitutions",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.AddOrPutSecuritySubstitutionRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "This operation is not allowed for service provider token.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_DeleteSecuritySubstitutions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request.securityCodeFrom",
            "in": "query",
            "required": false,
            "description": "The security code of the security.",
            "type": "string"
          },
          {
            "name": "request.exchangeCodeFrom",
            "in": "query",
            "required": false,
            "description": "The exchange code of the security.",
            "type": "string"
          },
          {
            "name": "request.securityCodeTo",
            "in": "query",
            "required": false,
            "description": "The security code of the security.",
            "type": "string"
          },
          {
            "name": "request.exchangeCodeTo",
            "in": "query",
            "required": false,
            "description": "The exchange code of the security.",
            "type": "string"
          },
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/modelsubscriptions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.ModelSubscriptionResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetModelSubscriptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_ReplaceModelSubscriptions",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PutModelSubscriptionRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accounts/customisations/minimumtradesize": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.MinimumTradeSizeResponse"
            }
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_GetMinimumTradeSize",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorised to access the account",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Account does not exist.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "operationId": "Accounts_UpdateMinimumTradeSize",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PatchMinimumTradeSizeRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/applicants": {
      "post": {
        "responses": {
          "200": {
            "description": "Applicant creation result",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.ApplicantCreateResult"
            }
          }
        },
        "tags": [
          "Applicants"
        ],
        "operationId": "Applicants_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ApplicantCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicantCreate"
            }
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/applications/{applicationId}/status": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.ApplicationStatus"
            }
          }
        },
        "tags": [
          "Application"
        ],
        "operationId": "Application_GetApplicationStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "Unique ApplicationID to be used as an application reference.",
            "format": "uuid",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/applications/draft": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.ApplicationCreateResult"
            }
          }
        },
        "tags": [
          "Application"
        ],
        "operationId": "Application_CreateNewApplication",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Application"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/beneficiarynominations": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.BeneficiaryCreate"
            }
          }
        },
        "tags": [
          "BeneficiaryNominations"
        ],
        "operationId": "BeneficiaryNominations_CreateBeneficiaries",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "beneficiaryCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.BeneficiaryCreate"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/expenses": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Expense"
              }
            }
          }
        },
        "tags": [
          "Expense"
        ],
        "operationId": "Expense_GetExpenses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "InternalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/income/schedules": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.IncomeSchedule"
              }
            }
          }
        },
        "tags": [
          "Income"
        ],
        "operationId": "Income_GetIncomeSchedules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "InternalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/income/taxCredit": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.IncomeAndTaxCredit"
              }
            }
          }
        },
        "tags": [
          "Income"
        ],
        "operationId": "Income_GetIncomeAndTaxCredit",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "InternalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/income/schedules/bulk": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.BulkIncomeScheduleData"
              }
            }
          }
        },
        "tags": [
          "Income"
        ],
        "operationId": "Income_GetIncomeSchedulesBulk",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "internalIds",
            "in": "query",
            "required": false,
            "collectionFormat": "multi",
            "description": "Multiple InternalIds as string separated by comma.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/models": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.ModelProvider.Model"
              }
            }
          }
        },
        "tags": [
          "Models"
        ],
        "operationId": "Models_GetModels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/models/{id}/holdings": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.ModelProvider.ModelHoldingsSummary"
            }
          }
        },
        "tags": [
          "Models"
        ],
        "operationId": "Models_GetModelHoldings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ModelId as returned by the Models endpoint.",
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/models/{id}/approximatefum": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.ModelProvider.ModelApproximateFum"
            }
          }
        },
        "tags": [
          "Models"
        ],
        "operationId": "Models_GetApproximateFum",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ModelID as returned by the /api/models/ endpoint.",
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "description": "The date to use when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/models/{id}/performance": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.ModelProvider.ModelPerformance"
            }
          }
        },
        "tags": [
          "Models"
        ],
        "operationId": "Models_GetPerformance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ModelId as returned by the Models endpoint.",
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "includeDailyReturns",
            "in": "query",
            "required": false,
            "description": "If True, then the daily performance of the model is returned.",
            "type": "boolean"
          },
          {
            "name": "includeAnnulisedReturns",
            "in": "query",
            "required": false,
            "description": "If True, then the annualised performance of the model is returned.",
            "type": "boolean"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/models/WeightAdjustments": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.ModelWeightAdjustmentResponse"
              }
            }
          },
          "404": {
            "description": "Models {0} are not found.",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Models"
        ],
        "operationId": "Models_GetModelWeightAdjustments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "modelCode",
            "in": "query",
            "required": false,
            "description": "The Code as returned by the Models endpoint. Omitting this field will return weights for all models.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "202": {
            "description": ""
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Models"
        ],
        "operationId": "Models_ReplaceModelWeightAdjustments",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.ModelWeightAdjustmentRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/pds": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PdsDetail"
              }
            }
          }
        },
        "tags": [
          "Pds"
        ],
        "operationId": "Pds_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/Performance": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.PortfolioPerformanceData]"
            }
          }
        },
        "tags": [
          "Performance"
        ],
        "operationId": "Performance_GetFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.perfCalcMethod",
            "in": "query",
            "required": true,
            "description": "The method to calculate the percentage return. Currently always 0 for Time Weighted Return (TWR).",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.cash",
            "in": "query",
            "required": false,
            "description": "Whether or not to include cash in the performance calculations.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.excludedAssets",
            "in": "query",
            "required": false,
            "description": "Whether or not to include any assets that have been excluded from performance.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.taxCredits",
            "in": "query",
            "required": false,
            "description": "Whether or not to include tax credits in the dollar and percentage return calculations.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.percentReturns",
            "in": "query",
            "required": false,
            "description": "Whether to calculate and return percentage returns.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.multiplePeriods",
            "in": "query",
            "required": false,
            "description": "Whether to calculate percentage returns for the period requested or include other periods.<br><ul><li>0 - For the period only</li><li>4 - 1 mth, 3 mths, the period</li><li>9 - 1 mth, 3 mths, 6 mths, 1 yr, Since inception</li><li>11 - 1 mth, 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs, Since inception</li><li>16 - 1 mth, 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs, 10 yrs, Since inception</li><li>1 - 1 mth, 3 mths, 1 yr, the period</li><li>24 - 1 mth, 3 mths, 1 yr, 3 yrs, 5 yrs, the period</li><li>15 - 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs</li><li>17 - 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs</li><li>14 - 3 mths, 6 mths, 1 yr, 2 yrs, Since inception</li><li>13 - 3 mths, 1 yr, 2 yrs, 5 yrs, Since Inception</li><li>21 - 3 mths, 1 yr, 2 yrs, 3 yrs, Since inception</li><li>22 - 3 mths, 1 yr, 2 yr, 3 yrs, 5 yrs</li><li>18 - 3 mths, 1 yr, 3 yrs, 5 yrs, 7 yrs</li><li>2 - 3 mths, 1 yr, 3 yrs, the period</li><li>8 - 3 mths, 1 yr, 3 yrs, 5 yrs, Since inception</li><li>10 - 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs</li><li>19 - 1 yr, 3 yrs, 5 yrs, 7 yrs, 10 yrs</li><li>3 - 1 yr, 3 yrs, 5 yrs, the period</li><li>23 - 1 yr, 5 yrs, 10 yrs, Since inception</li><li>7 - Qtr to date, Fin yr to date, 1 yr,  Since inception</li><li>5 - Qtr to date, Fin yr to date, 3 yrs, 5 yrs</li><li>6 - Qtr to date, Fin yr to date, 3 yrs, Since inception</li><li>20 - The period, Qtr to date, Fin yr to date, Since inception</li><li>-1 - Portfolio default</li></ul>",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/Performance/DailyReturns": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.DailyReturnsData]"
            }
          }
        },
        "tags": [
          "Performance"
        ],
        "operationId": "Performance_GetDailyReturnsFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request. Cannot be more than 31 days from the FromDate.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.perfCalcMethod",
            "in": "query",
            "required": true,
            "description": "The method to calculate the percentage return. Currently always 0 for Time Weighted Return (TWR).",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.cash",
            "in": "query",
            "required": false,
            "description": "Whether or not to include cash in the performance calculations.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.excludedAssets",
            "in": "query",
            "required": false,
            "description": "Whether or not to include any assets that have been excluded from performance.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.taxCredits",
            "in": "query",
            "required": false,
            "description": "Whether or not to include tax credits in the dollar and percentage return calculations.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.percentReturns",
            "in": "query",
            "required": false,
            "description": "Whether to calculate and return percentage returns.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/Performance/HoldingsExcluded": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.HoldingsExcludedData]"
            }
          }
        },
        "tags": [
          "Performance"
        ],
        "operationId": "Performance_GetHoldingsExcludedFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "required": false,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": false,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/Performance/Benchmarks": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.BenchmarksData]"
            }
          }
        },
        "tags": [
          "Performance"
        ],
        "operationId": "Performance_GetBenchmarksFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/Performance/BenchmarkPerformance": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.BenchmarkPerformanceData]"
            }
          }
        },
        "tags": [
          "Performance"
        ],
        "operationId": "Performance_GetBenchmarkPerformanceFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.benchmarkID",
            "in": "query",
            "required": true,
            "description": "Praemium ID of the Benchmark as returned in the /Performance/Benchmarks endpoint",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.multiplePeriods",
            "in": "query",
            "required": false,
            "description": "Whether to calculate percentage returns for the period requested or include other periods.<br><ul><li>0 - For the period only</li><li>4 - 1 mth, 3 mths, the period</li><li>9 - 1 mth, 3 mths, 6 mths, 1 yr, Since inception</li><li>1 - 1 mth, 3 mths, 1 yr, the period</li><li>15 - 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs</li><li>17 - 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs</li><li>14 - 3 mths, 6 mths, 1 yr, 2 yrs, Since inception</li><li>13 - 3 mths, 1 yr, 2 yrs, 5 yrs, Since Inception</li><li>21 - 3 mths, 1 yr, 2 yrs, 3 yrs, Since inception</li><li>22 - 3 mths, 1 yr, 2 yr, 3 yrs, 5 yrs</li><li>18 - 3 mths, 1 yr, 3 yrs, 5 yrs, 7 yrs</li><li>2 - 3 mths, 1 yr, 3 yrs, the period</li><li>8 - 3 mths, 1 yr, 3 yrs, 5 yrs, Since inception</li><li>10 - 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs</li><li>19 - 1 yr, 3 yrs, 5 yrs, 7 yrs, 10 yrs</li><li>3 - 1 yr, 3 yrs, 5 yrs, the period</li><li>7 - Qtr to date, Fin yr to date, 1 yr,  Since inception</li><li>5 - Qtr to date, Fin yr to date, 3 yrs, 5 yrs</li><li>6 - Qtr to date, Fin yr to date, 3 yrs, Since inception</li><li>20 - The period, Qtr to date, Fin yr to date, Since inception</li><li>-1 - Portfolio default</li></ul>",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/Performance/InvestmentMovements": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.InvestmentMovementsData]"
            }
          }
        },
        "tags": [
          "Performance"
        ],
        "operationId": "Performance_GetInvestmentMovementsFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.taxCredits",
            "in": "query",
            "required": false,
            "description": "Whether or not to include tax credits in the dollar and percentage return calculations.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.percentReturnMethod",
            "in": "query",
            "required": false,
            "description": "Currently always 0 for TWR.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/Performance/AssetClassPerformance": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.InvestmentPerformance.AssetClassPerformance"
            }
          }
        },
        "tags": [
          "Performance"
        ],
        "operationId": "Performance_GetAssetClassPerformanceFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.accountId",
            "in": "query",
            "required": true,
            "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.calculationMethod",
            "in": "query",
            "required": false,
            "description": "0 = Approximate returns, 1 = TWR",
            "format": "int32",
            "type": "integer",
            "enum": [
              0,
              1
            ]
          },
          {
            "name": "request.username",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/portfolios": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.PortfoliosData]"
            }
          }
        },
        "tags": [
          "Portfolios"
        ],
        "operationId": "Portfolios_GetPortfoliosFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.portfolio",
            "in": "query",
            "required": false,
            "description": "Portfolio search string. This parameter accepts wildcards (*)",
            "type": "string"
          },
          {
            "name": "request.internalID",
            "in": "query",
            "required": false,
            "description": "Retrieve details for an individual portfolio based on its InternalID",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "request.page",
            "in": "query",
            "required": false,
            "description": "Page number to return.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/portfolios/ChildPortfolios": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.ChildPortfoliosData]"
            }
          }
        },
        "tags": [
          "Portfolios"
        ],
        "operationId": "Portfolios_GetChildPortfoliosFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/portfolios/PortfolioDetail": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.PortfolioDetailsData]"
            }
          }
        },
        "tags": [
          "Portfolios"
        ],
        "operationId": "Portfolios_GetPortfolioDetailFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/portfolios/Valuation": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.ValuationData]"
            }
          }
        },
        "tags": [
          "Portfolios"
        ],
        "operationId": "Portfolios_GetValuationFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.valuationDate",
            "in": "query",
            "required": false,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.loans",
            "in": "query",
            "required": false,
            "description": "If loans should be included (1) or excluded (0) in the net portfolio value.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.classificationType",
            "in": "query",
            "required": false,
            "description": "The classification type of the security valuation. Valid values are 1 - Asset class (look-through managed funds), 2 - Asset class (primary class for managed funds), or 3 - Market type.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/portfolios/BulkValuation": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.BulkValuationResponse"
            }
          }
        },
        "tags": [
          "Portfolios"
        ],
        "operationId": "Portfolios_GetBulkValuationPerf",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "internalIds",
            "in": "query",
            "required": false,
            "collectionFormat": "multi",
            "description": "Multiple InternalIds as string separated by comma.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          {
            "name": "accountType",
            "in": "query",
            "required": false,
            "description": "Specify 1 for Non-SMA, 2 for SMA and 3 for both types of accounts.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "valuationDate",
            "in": "query",
            "required": false,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number to return.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "lastRecordId",
            "in": "query",
            "required": false,
            "description": "Internal ID of last record. If supplied, only data subsequent to this portfolio would be returned.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "classificationType",
            "in": "query",
            "required": false,
            "description": "The classification type of the security valuation. Valid values are 1 - Asset class (look-through managed funds), 2 - Asset class (primary class for managed funds), or 3 - Market type.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/portfolios/AssetClassSummary": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.AssetClassSummaryData]"
            }
          }
        },
        "tags": [
          "Portfolios"
        ],
        "operationId": "Portfolios_GetAssetClassSummaryFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.valuationDate",
            "in": "query",
            "required": false,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.loans",
            "in": "query",
            "required": false,
            "description": "If loans should be included (1) or excluded (0) in the net portfolio value.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.targets",
            "in": "query",
            "required": false,
            "description": "Whether to return the minimum and maximum target bands set for the asset class.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/Recalc/AsatDate": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.RecalcStatus"
            }
          }
        },
        "tags": [
          "Recalc"
        ],
        "operationId": "Recalc_GetRecalcAsatDate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/reports/Events": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Report.ReportingEvent"
              }
            }
          }
        },
        "tags": [
          "Report"
        ],
        "operationId": "Report_GetEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/reports/Events/{eventId}/published": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Report.ReportingEventPublishedFile"
              }
            }
          }
        },
        "tags": [
          "Report"
        ],
        "operationId": "Report_GetPublishedFileForEvent",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "ID as returned by the /reports/Events/ endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "PortfolioCode",
            "in": "query",
            "required": false,
            "description": "Filter on PortfolioCode as returned by the /Portfolios endpoint",
            "type": "string"
          },
          {
            "name": "FromPublishedDate",
            "in": "query",
            "required": false,
            "description": "The from date used when filtering data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToPublishedDate",
            "in": "query",
            "required": false,
            "description": "The to date used when filtering data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/reports/files/{fileId}/download": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Report"
        ],
        "operationId": "Report_DownloadFileWithId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "description": "FileID as returned in the /Events/{eventide}/published endpoint.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/serviceprovider/useraccounts": {
      "get": {
        "responses": {
          "200": {
            "description": "User accounts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.UserAccountResponse"
              }
            }
          }
        },
        "tags": [
          "ServiceProvider"
        ],
        "operationId": "ServiceProvider_GetUserAccounts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountIds",
            "in": "query",
            "required": false,
            "collectionFormat": "multi",
            "description": "A list of account IDs (Max 100 accounts per request). Query string should be like AccountIds=AU378902&AccountIds=AU387198.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/serviceprovider/ssologin": {
      "post": {
        "responses": {
          "200": {
            "description": "Service provider SSO response",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Sso.ServiceProviderSsoResponse"
            }
          }
        },
        "tags": [
          "ServiceProvider"
        ],
        "operationId": "ServiceProvider_ServiceProviderSsoLogin",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Sso.ServiceProviderSsoRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/ssologin": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "SsoLogin"
        ],
        "operationId": "SsoLogin_GetSsoUrl",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Sso.UserSsoRequest"
            },
            "description": ""
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/Status": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Status"
        ],
        "operationId": "Status_GetStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/superfunds": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.SuperFund"
              }
            }
          }
        },
        "tags": [
          "SuperFunds"
        ],
        "operationId": "SuperFunds_GetAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/tax/UnrealisedCgtSummary": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.UnrealisedCGTSummaryData]"
            }
          }
        },
        "tags": [
          "Tax"
        ],
        "operationId": "Tax_GetUnrealisedCgtSummaryFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "request.valuationDate",
            "in": "query",
            "required": false,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/tax/UnrealisedCgt": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.UnrealisedCGTData]"
            }
          }
        },
        "tags": [
          "Tax"
        ],
        "operationId": "Tax_GetUnrealisedCgtFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "request.valuationDate",
            "in": "query",
            "required": false,
            "description": "Date used to display the data.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.page",
            "in": "query",
            "required": false,
            "description": "Page number to return.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/tax/RealisedCgtSummary": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.RealisedCgtSummaryData]"
            }
          }
        },
        "tags": [
          "Tax"
        ],
        "operationId": "Tax_GetRealisedCgtSummaryFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/tax/RealisedCgt": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.RealisedCgtData]"
            }
          }
        },
        "tags": [
          "Tax"
        ],
        "operationId": "Tax_GetRealisedCgtFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/TradingActivity/Transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.TransactionsData]"
            }
          }
        },
        "tags": [
          "TradingActivity"
        ],
        "operationId": "TradingActivity_GetTransactionsFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.dateRangeType",
            "in": "query",
            "required": false,
            "description": "The date field that is compared to be between the from and to dates. Options are 'Valuation' (default) or 'Amendment'.",
            "type": "string"
          },
          {
            "name": "request.buysAndSellsOnly",
            "in": "query",
            "required": false,
            "description": "Includes Buy, Close position, Sell, Short Sell, Write Opt. to Open, Write Opt. to Close, Buy Opt. to open, Buy Opt. to close.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.page",
            "in": "query",
            "required": false,
            "description": "Page number to return.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.orderBy",
            "in": "query",
            "required": false,
            "description": "TransactionDate or Asset",
            "type": "string"
          },
          {
            "name": "request.order",
            "in": "query",
            "required": false,
            "description": "Asc or Desc",
            "type": "string"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/TradingActivity/CashTransactions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.CashTransactionsData]"
            }
          }
        },
        "tags": [
          "TradingActivity"
        ],
        "operationId": "TradingActivity_GetCashTransactionsFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.dateRangeType",
            "in": "query",
            "required": false,
            "description": "The date field that is compared to be between the from and to dates. Options are 'Valuation' (default) or 'Amendment'.",
            "type": "string"
          },
          {
            "name": "request.loans",
            "in": "query",
            "required": false,
            "description": "Whether loans should (1) or should not (0) be included in the response.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/TradingActivity/UnsettledTransactions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.UnsettledTransactionsData]"
            }
          }
        },
        "tags": [
          "TradingActivity"
        ],
        "operationId": "TradingActivity_GetUnsettledTransactionsFromUri",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.internalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "required": false,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": false,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.userID",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "request.page",
            "in": "query",
            "required": false,
            "description": "Page number to return.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/TradingActivity/DividendReinvestmentDetails": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.DividendReinvestmentDetail"
              }
            }
          }
        },
        "tags": [
          "TradingActivity"
        ],
        "operationId": "TradingActivity_GetDividendReinvestmentDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "InternalID",
            "in": "query",
            "required": true,
            "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/TradingActivity/UnmatchedTransactions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PraemiumAPI.Public.Contract.UnmatchedTransactionResponse"
              }
            }
          },
          "404": {
            "description": "User {0} not found.",
            "schema": {
              "type": "string"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "TradingActivity"
        ],
        "operationId": "TradingActivity_GetUnmatchedTransactions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.fromDate",
            "in": "query",
            "required": true,
            "description": "The from date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "required": true,
            "description": "The to date used when calculating data for the request.",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "request.userId",
            "in": "query",
            "required": false,
            "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
            "type": "string"
          },
          {
            "name": "request.internalIds",
            "in": "query",
            "required": false,
            "collectionFormat": "multi",
            "description": "Multiple InternalIds as string separated by comma.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/trusteeapplicants": {
      "post": {
        "responses": {
          "200": {
            "description": "Trustee applicant creation result",
            "schema": {
              "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.TrusteeApplicantCreateResult"
            }
          }
        },
        "tags": [
          "TrusteeApplicants"
        ],
        "operationId": "TrusteeApplicants_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ApplicantCreate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrusteeApplicant"
            },
            "description": "Contains the applicant data. When we have more than one type, the content will be customisable based on the Applicant Type"
          },
          {
            "name": "x-pps-token",
            "in": "header",
            "required": true,
            "description": "API token issued by Praemium.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    }
  },
  "definitions": {
    "PraemiumAPI.Public.Contract.Managed.CashflowInstruction": {
      "properties": {
        "CashflowInstructionId": {
          "description": "Cashflow instruction ID.",
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "description": "Description of the cashflow instruction.",
          "type": "string"
        },
        "CashflowInstructionType": {
          "description": "Regular contribution = 1, Regular withdrawal = 2, One-off direct debit = 3, One-off withdrawal = 4, Income reinvestment = 5, Expenses = 6, Pension payment = 7 (Only allowed for SuperSMA pension accounts), All contributions and rollovers = 8 (Only allowed for SuperSMA accumulation accounts), Other Withdrawals = 9",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ]
        },
        "FrequencyTypeId": {
          "description": "Monthly = 1, Quarterly = 2, SixMonthly = 3, Annually = 4",
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "description": "Start date of the cashflow instruction.",
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "description": "End date of the cashflow instruction.",
          "format": "date-time",
          "type": "string"
        },
        "Value": {
          "description": "Value of the cashflow instruction.",
          "format": "double",
          "type": "number"
        },
        "TaxType": {
          "description": "PersonalNon = 3 (Non-concessional personal), ExemptCgtRetire = 4, ExemptCgt15 = 5, ExemptPerInjury = 6, Spouse = 7, Downsizer = 11. (Only applicable for SuperSMA accumulation accounts and one-off direct debit)",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ]
        },
        "Allocations": {
          "description": "Cashflow instruction details.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.CashflowInstructionDetail"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.CashflowInstructionDetail": {
      "properties": {
        "ModelCode": {
          "description": "Model code. (Model code **ProRata** means pro rata across existing models)",
          "type": "string"
        },
        "Sequence": {
          "description": "Sequence to apply. (Starting from 1 as highest priority, then 2, 3 ...)",
          "format": "int32",
          "type": "integer"
        },
        "Percentage": {
          "description": "Model percentage. (Only applicable for regular contribution, income reinvestment, one-off direct debit)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PostOneOffCashflowInstructionRequest": {
      "properties": {
        "CashflowInstructionType": {
          "description": "One-off direct debit = 3, One-off withdrawal = 4",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ]
        },
        "Amount": {
          "description": "Amount of the one-off cashflow instruction to apply.",
          "format": "double",
          "type": "number"
        },
        "TaxType": {
          "description": "PersonalNon = 3 (Non-concessional personal), ExemptCgtRetire = 4, ExemptCgt15 = 5, ExemptPerInjury = 6, Spouse = 7, Downsizer = 11. (Only applicable for SuperSMA accumulation accounts and one-off direct debit)",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ]
        },
        "Allocations": {
          "description": "Cashflow instruction details.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.CashflowInstructionDetail"
          },
          "type": "array"
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "UserId": {
          "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
          "type": "string"
        }
      },
      "required": [
        "CashflowInstructionType",
        "Amount",
        "AccountId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PutRegularCashflowInstructionRequest": {
      "properties": {
        "CashflowInstructionType": {
          "description": "Regular contribution = 1, Regular withdrawal = 2, Income reinvestment = 5, Expenses = 6, **All contributions and rollovers** for SuperSMA (accumulation) accounts; otherwise **Other additions** = 8, Other Withdrawals = 9",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ]
        },
        "FrequencyTypeId": {
          "description": "Monthly = 1, Quarterly = 2, SixMonthly = 3, Annually = 4 (Only applicable for regular withdrawal)",
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "description": "Start date of the cashflow instruction. (Only applicable for regular withdrawal)",
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "description": "End date of the cashflow instruction. (Only applicable for regular withdrawal)",
          "format": "date-time",
          "type": "string"
        },
        "Amount": {
          "description": "Amount of the cashflow instruction to apply. (Only applicable for regular contribution and regular withdrawal)",
          "format": "double",
          "type": "number"
        },
        "Allocations": {
          "description": "Cashflow instruction details.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.CashflowInstructionDetail"
          },
          "type": "array"
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "UserId": {
          "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
          "type": "string"
        }
      },
      "required": [
        "CashflowInstructionType",
        "Allocations",
        "AccountId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.AccountCreateResult": {
      "properties": {
        "Index": {
          "description": "",
          "format": "int32",
          "type": "integer"
        },
        "CreationStatus": {
          "description": "0 if successful. 1 if unsuccessful.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ]
        },
        "Account": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.Account"
        },
        "ValidationMessage": {
          "description": "Only displayed on error.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.Account": {
      "properties": {
        "Code": {
          "description": "Portfolio ID.",
          "type": "string"
        },
        "Id": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "Name": {
          "description": "Portfolio name.",
          "type": "string"
        },
        "Bpay": {
          "description": "BPay reference.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.Bpay"
          },
          "type": "array"
        },
        "Status": {
          "description": "Portfolio status.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ]
        },
        "Type": {
          "description": "Portfolio type.",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            4,
            5,
            6
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.Bpay": {
      "properties": {
        "BillerCode": {
          "description": "BPay biller code.",
          "format": "int32",
          "type": "integer"
        },
        "ReferenceNumber": {
          "description": "Customer reference number.",
          "type": "string"
        },
        "BpayType": {
          "description": "Personal = 1, Spouse = 2, Downsizer = 3, SpecialPersonal = 4.",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.LinkUserToAccounts": {
      "properties": {
        "ModifiedUserId": {
          "description": "For auditing purposes, the UserID of the user adding the user link.",
          "format": "int32",
          "type": "integer"
        },
        "UserRole": {
          "description": "Accountant = 0, Custodian = 1, FinancialPlanner = 2, InvestmentAdviser = 3, Other = 4 (**Default**), Owner = 5",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ]
        },
        "Access": {
          "description": "Full = 0, Read = 1, Update = 2",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ]
        },
        "AccountIds": {
          "description": "List of AccountIDs (prefixed with AU) to link the User to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "UserId": {
          "description": "UserID of the user to link.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "ModifiedUserId",
        "AccountIds",
        "UserId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.AccountBpayResponse": {
      "properties": {
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "BillerCode": {
          "description": "BPay biller code.",
          "format": "int32",
          "type": "integer"
        },
        "BpayReference": {
          "description": "Customer reference number.",
          "type": "string"
        },
        "BpayType": {
          "description": "Personal = 1, Spouse = 2, Downsizer = 3, SpecialPersonal = 4.",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.SmaApplicationForm": {
      "properties": {
        "FormContent": {
          "description": "",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.AccountHoldingsByModel": {
      "properties": {
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "FromDate": {
          "description": "The from date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The to date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "HoldingsByModel": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.HoldingsByModel"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.HoldingsByModel": {
      "properties": {
        "Date": {
          "description": "The date that these holdings relate to.",
          "format": "date-time",
          "type": "string"
        },
        "TotalValue": {
          "description": "The total value of the account on the date.",
          "format": "double",
          "type": "number"
        },
        "HoldingsInModel": {
          "description": "Contains the assets that are held by the account due to its model subscriptions.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.HoldingsDetailByModel"
          },
          "type": "array"
        },
        "HoldingsNotInModel": {
          "description": "Contains the assets that are not attributable to a model on the date. This can be due to holding locks or other customisations. The value and quantity of the HoldingsNotInModel relate to the values that are not attributable to any subscribed model.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.HoldingValueByModel"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.HoldingsDetailByModel": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "ModelDescription": {
          "description": "A description of the model.",
          "type": "string"
        },
        "ModelPercentage": {
          "description": "The percentage that the account was subscribed to the model on the date.",
          "format": "double",
          "type": "number"
        },
        "Holdings": {
          "description": "Contains the holdings attributable to the model on the date.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.HoldingValueByModel"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.HoldingValueByModel": {
      "properties": {
        "Asset": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "ExchangeCode": {
          "description": "The exchange code of the security.",
          "type": "string"
        },
        "Value": {
          "description": "The value of the asset that is attributable to this model on the date.",
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "description": "The quantity of the asset that is attributable to this model on the date. Please note that this may not be a whole number of shares because we blend holdings within our system in order to give a better investment outcome..",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.UserAccountLink": {
      "properties": {
        "UserId": {
          "description": "UserID of the user linked to the account",
          "format": "int32",
          "type": "integer"
        },
        "UserRole": {
          "description": "Accountant = 0, Custodian = 1, FinancialPlanner = 2, InvestmentAdviser = 3, Investor = 4 (**Default**), Owner = 5",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ]
        },
        "Access": {
          "description": "Full = 0, Read = 1, Update = 2",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.Signature": {
      "properties": {
        "ApplicantId": {
          "description": "The **ApplicantID** as returned by the Applicants endpoint.",
          "type": "string"
        },
        "IpAddress": {
          "description": "IP address of the computer that applicant submitted signature.",
          "type": "string"
        },
        "UserAgent": {
          "description": "User agent of the browser.",
          "type": "string"
        },
        "SignatureDate": {
          "description": "Datetime in AEST that the signature was captured by your systems.",
          "format": "date-time",
          "type": "string"
        },
        "AmlReferenceNumber": {
          "description": "Anti Money Laundering (AML) reference number",
          "type": "string"
        },
        "Location": {
          "description": "Location of the applicant (GPS coordinates).",
          "type": "string"
        },
        "SignatureBlob": {
          "description": "Signature blob.",
          "type": "string"
        },
        "PdsRevision": {
          "description": "Date or revision of PDS.",
          "type": "string"
        },
        "PdsNumber": {
          "description": "PDS number or name.",
          "type": "string"
        },
        "IsPdsSent": {
          "description": "A flag indicates whether PDS has been sent.",
          "type": "boolean"
        },
        "AdditionalData": {
          "description": "Additional information about the signature.",
          "type": "object"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.SmaAccountStatus": {
      "properties": {
        "Detail": {
          "description": "Refer to endpoint description.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.AddOrPutSecurityExclusionRequest": {
      "properties": {
        "SecurityExclusions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecurityExclusion"
          },
          "type": "array"
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "UserId": {
          "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
          "type": "string"
        }
      },
      "required": [
        "SecurityExclusions",
        "AccountId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.SecurityExclusion": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "ExchangeCode": {
          "description": "The exchange code of the security.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.SecurityExclusionResponse": {
      "properties": {
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "ExchangeDescription": {
          "description": "A description of the exchange.",
          "type": "string"
        },
        "CreatedDate": {
          "description": "Date the exclusion was created.",
          "format": "date-time",
          "type": "string"
        },
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "ExchangeCode": {
          "description": "The exchange code of the security.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.SecurityCustomisationResponse": {
      "properties": {
        "SecurityExclusions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecurityExclusionResponse"
          },
          "type": "array"
        },
        "SecuritySubstitutions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecuritySubstitutionResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.SecuritySubstitutionResponse": {
      "properties": {
        "SecurityDescriptionFrom": {
          "description": "A description of the source security.",
          "type": "string"
        },
        "ExchangeDescriptionFrom": {
          "description": "A description of the source exchange.",
          "type": "string"
        },
        "SecurityDescriptionTo": {
          "description": "A description of the result security.",
          "type": "string"
        },
        "ExchangeDescriptionTo": {
          "description": "A description of the result exchange.",
          "type": "string"
        },
        "CreatedDate": {
          "description": "Date the substitution was created.",
          "format": "date-time",
          "type": "string"
        },
        "SecurityCodeFrom": {
          "description": "The security code of the source security.",
          "type": "string"
        },
        "ExchangeCodeFrom": {
          "description": "The exchange code of the source security.",
          "type": "string"
        },
        "SecurityCodeTo": {
          "description": "The security code of the result security.",
          "type": "string"
        },
        "ExchangeCodeTo": {
          "description": "The exchange code of the result security.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PutCustomisationRequest": {
      "properties": {
        "SecurityExclusions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecurityExclusion"
          },
          "type": "array"
        },
        "SecuritySubstitutions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecuritySubstitution"
          },
          "type": "array"
        },
        "AccountId": {
          "description": "",
          "type": "string"
        },
        "UserId": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "SecurityExclusions",
        "SecuritySubstitutions",
        "AccountId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.SecuritySubstitution": {
      "properties": {
        "SecurityCodeFrom": {
          "description": "The security code of the source security.",
          "type": "string"
        },
        "ExchangeCodeFrom": {
          "description": "The exchange code of the source security.",
          "type": "string"
        },
        "SecurityCodeTo": {
          "description": "The security code of the result security.",
          "type": "string"
        },
        "ExchangeCodeTo": {
          "description": "The exchange code of the result security.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.AddOrPutSecuritySubstitutionRequest": {
      "properties": {
        "SecuritySubstitutions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.SecuritySubstitution"
          },
          "type": "array"
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "UserId": {
          "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
          "type": "string"
        }
      },
      "required": [
        "SecuritySubstitutions",
        "AccountId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.ModelSubscriptionResponse": {
      "properties": {
        "ModelId": {
          "description": "ModelId as returned by the Models endpoint.",
          "type": "string"
        },
        "Description": {
          "description": "Model description.",
          "type": "string"
        },
        "OriginalPercent": {
          "description": "Original model weights entered for the model.",
          "format": "double",
          "type": "number"
        },
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "Percent": {
          "description": "Current model weights for the model (which are different than OriginalPercent due to floating)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PutModelSubscriptionRequest": {
      "properties": {
        "RebalanceType": {
          "description": "Either “Floating” or “Fixed”",
          "type": "string"
        },
        "ModelSubscriptions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.ModelSubscription"
          },
          "type": "array"
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "UserId": {
          "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
          "type": "string"
        }
      },
      "required": [
        "ModelSubscriptions",
        "AccountId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.ModelSubscription": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "Percent": {
          "description": "Percentage of the model weight (ie for 30% use ‘30’)",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.MinimumTradeSizeResponse": {
      "properties": {
        "DollarAmount": {
          "description": "Prevents trades of a value less than this figure.",
          "format": "double",
          "type": "number"
        },
        "Percentage": {
          "description": "Prevents trades unless they exceed this figure as a percentage of the portfolio’s value. For example, if this is set to 5, only trades that exceed five percent of the portfolio’s total value are performed.",
          "format": "double",
          "type": "number"
        },
        "Units": {
          "description": "Prevents trades of a quantity less than this figure.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PatchMinimumTradeSizeRequest": {
      "properties": {
        "DollarAmount": {
          "description": "Prevents trades of a value less than this figure.",
          "format": "double",
          "type": "number"
        },
        "Percentage": {
          "description": "Prevents trades unless they exceed this figure as a percentage of the portfolio’s value. For example, if this is set to 5, only trades that exceed five percent of the portfolio’s total value are performed.",
          "format": "double",
          "type": "number"
        },
        "Units": {
          "description": "Prevents trades of a quantity less than this figure.",
          "format": "double",
          "type": "number"
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "UserId": {
          "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
          "type": "string"
        }
      },
      "required": [
        "AccountId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.ApplicantCreateResult": {
      "properties": {
        "Index": {
          "description": "",
          "format": "int32",
          "type": "integer"
        },
        "CreationStatus": {
          "description": "0 if successful. 1 if unsuccessful.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ]
        },
        "Applicant": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.Applicant"
        },
        "ValidationMessage": {
          "description": "Only displayed on error.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.Applicant": {
      "properties": {
        "Id": {
          "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.ApplicationStatus": {
      "properties": {
        "ApplicationId": {
          "description": "Unique ApplicationID to be used as an application reference.",
          "format": "uuid",
          "type": "string"
        },
        "Status": {
          "description": "Draft / Submitted.",
          "type": "string"
        },
        "AccountsStatus": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.AccountStatus"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.AccountStatus": {
      "properties": {
        "AccountCode": {
          "description": "Portfolio ID.",
          "type": "string"
        },
        "Status": {
          "description": "Refer to endpoint description.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Application": {
      "properties": {
        "Adviser": {
          "description": "The Adviser ID to create the application under.",
          "type": "string"
        },
        "Applicants": {
          "description": "Objects containing the applicant data. There must be at least one applicant for the request to succeed. The array of objects may contain a mix of **Individual** and **Corporate** applicants.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Applicant"
          },
          "type": "array"
        },
        "Accounts": {
          "description": "Array of accounts to be opened with the application. Must be linked to an included applicant.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Account"
          },
          "type": "array"
        }
      },
      "required": [
        "Adviser",
        "Applicants"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Applicant": {
      "properties": {
        "OwnerAdviserId": {
          "description": "The user ID that you have been provided with.",
          "type": "string"
        },
        "ApplicantType": {
          "description": "Corporate or Individual.",
          "type": "string"
        },
        "CorporateDetails": {
          "description": "Used for **Corporate** applicants.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.CorporateApplicant"
        },
        "IndividualDetails": {
          "description": "Used for **Individual** applicants.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.IndividualApplicant"
        }
      },
      "required": [
        "ApplicantType"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Account": {
      "properties": {
        "Name": {
          "description": "Account name.",
          "type": "string"
        },
        "RegisteredName": {
          "description": "Account registered name.",
          "type": "string"
        },
        "ShortName": {
          "description": "Account short name.",
          "type": "string"
        },
        "AccountType": {
          "description": "Company or Individual or Joint.",
          "type": "string"
        },
        "ApplicantIndexes": {
          "description": "Index of applicants supplied in your request (starting from 0).",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "PdsId": {
          "description": "PDS ID of account.",
          "type": "string"
        },
        "Fees": {
          "description": "Account fees.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Fee"
          },
          "type": "array"
        },
        "FeeConsent": {
          "description": "Account fee consent.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.FeeConsent"
        },
        "Models": {
          "description": "Account models.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Model"
          },
          "type": "array"
        },
        "BankAccounts": {
          "description": "Bank accounts",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.BankAccount"
          },
          "type": "array"
        },
        "Exclusions": {
          "description": "Account exclusions.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Exclusion"
          },
          "type": "array"
        },
        "InitialInvestment": {
          "description": "Initial investment of account.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.InitialInvestment"
        },
        "AdviserServicesProvided": {
          "description": "The services provided by the adviser: Review of your account = 1, Strategic superannuation advice = 2, Investment advice on your account = 3 ,Contribution strategy = 4, Insurance in superannuation strategy = 5, Withdrawal advice (lump sum and/or pension) = 6.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "InSpecieTransfers": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.InSpecieTransfer"
          },
          "type": "array"
        },
        "AccountInvestorType": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.AccountInvestorType"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.CorporateApplicant": {
      "properties": {
        "Name": {
          "description": "Name of the corporate applicant.",
          "type": "string"
        },
        "TradingName": {
          "description": "Trading name of the corporate applicant.",
          "type": "string"
        },
        "Identifications": {
          "description": "Array of TFN / TIN / ABN / NIN",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Identification"
          },
          "type": "array"
        },
        "BusinessAddress": {
          "description": "Business address.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Address"
        },
        "MailingAddress": {
          "description": "Mailing address.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Address"
        },
        "ContactIsSignatory": {
          "description": "Whether the corporate contact is signatory.",
          "type": "boolean"
        },
        "Contact": {
          "description": "Corporate contact.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Contact"
        },
        "Signatories": {
          "description": "Corporate signatories.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Signatory"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.IndividualApplicant": {
      "properties": {
        "PhoneOther": {
          "description": "Other phone of individual applicant.",
          "type": "string"
        },
        "Identifications": {
          "description": "Identifications of individual applicant.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Identification"
          },
          "type": "array"
        },
        "TaxResidenceCountryCode": {
          "description": "Tax residence country code.",
          "type": "string"
        },
        "CitizenshipCountryCode": {
          "description": "Citizenship country code.",
          "type": "string"
        },
        "BirthCountryCode": {
          "description": "Birth country code.",
          "type": "string"
        },
        "HomeAddress": {
          "description": "Home address of individual applicant.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Address"
        },
        "MailingAddress": {
          "description": "Mailing address of individual applicant.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Address"
        },
        "Gender": {
          "description": "Gender of individual applicant.",
          "type": "string"
        },
        "UserName": {
          "description": "User name of individual applicant.",
          "type": "string"
        },
        "UserId": {
          "description": "User ID of individual applicant.",
          "type": "string"
        },
        "Title": {
          "description": "Title of individual applicant.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of individual applicant.",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of individual applicant.",
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of individual applicant.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email of individual applicant.",
          "type": "string"
        },
        "Phone": {
          "description": "Phone of individual applicant.",
          "type": "string"
        },
        "IsPoliticallyExposedPerson": {
          "description": "",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Fee": {
      "properties": {
        "Id": {
          "description": "Fee ID of account returned by PDS endpoint.",
          "type": "string"
        },
        "Type": {
          "description": "FeeTable = 0, Contribution = 1, Establishment = 2, Termination = 3, Withdrawal = 4, Ongoing = 5. (Use this field if ID is not available)",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ]
        },
        "Rate": {
          "description": "Fee rate of account.",
          "format": "double",
          "type": "number"
        },
        "Unit": {
          "description": "Fee unit of account. (**Dollar** or **Percent**)",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.FeeConsent": {
      "properties": {
        "Type": {
          "description": "Ongoing = 1, FixedTerm = 2, NotCharged = 3. For NotCharged only Establishment fee can be provided.",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2
          ]
        },
        "AnniversaryDate": {
          "description": "Anniversary date of ongoing fee. (Cannot be used along with TermStartDate and TermEndDate)",
          "format": "date-time",
          "type": "string"
        },
        "TermStartDate": {
          "description": "Start date of fixed term fee. (Cannot be used along with AnniversaryDate)",
          "format": "date-time",
          "type": "string"
        },
        "TermEndDate": {
          "description": "End date of fixed term fee. (Cannot be used along with AnniversaryDate)",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Model": {
      "properties": {
        "Code": {
          "description": "Model code of account.",
          "type": "string"
        },
        "Proportion": {
          "description": "Model proportion of account.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.BankAccount": {
      "properties": {
        "AccountBsb": {
          "description": "Bank account BSB.",
          "type": "string"
        },
        "AccountNumber": {
          "description": "Bank account number.",
          "type": "string"
        },
        "AccountName": {
          "description": "Bank account name.",
          "type": "string"
        },
        "Usages": {
          "description": "Bank account usages.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Exclusion": {
      "properties": {
        "Security": {
          "description": "Security in account exclusions.",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.DraftApplication.Security"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.InitialInvestment": {
      "properties": {
        "Cash": {
          "description": "Cash amount of account initial investment.",
          "format": "double",
          "type": "number"
        },
        "Shares": {
          "description": "In-specie amount of account initial investment.",
          "format": "double",
          "type": "number"
        },
        "Method": {
          "description": "BPay = 0, DirectDebit = 1",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.InSpecieTransfer": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "ExchangeCode": {
          "description": "The exchange code of the security.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of the security.",
          "format": "double",
          "type": "number"
        },
        "OutsideOfRebalanceQuantity": {
          "description": "Quantity of the security outside of rebalance.",
          "format": "double",
          "type": "number"
        },
        "HoldingType": {
          "description": "IssuerSponsored = 0, Chess = 1",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1
          ]
        },
        "HinOrSrn": {
          "description": "HIN or SRN.",
          "type": "string"
        },
        "Direction": {
          "description": "In = 0, Out = 1",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.AccountInvestorType": {
      "properties": {
        "InvestorsType": {
          "description": "Retail = 0, WholesaleProductValueTest = 1, WholesaleAccountantsCertificate = 2, ProfessionalAfslHolder = 3, ProfessionalApraRegulated = 4, ProfessionalFsaRegulated = 5, ProfessionalSuperTrustee = 6, ProfessionalControls10M = 7, ProfessionalListed = 8, ProfessionalExempt = 9, ProfessionalInvestor = 10, ProfessionalForeign = 11, Sophisticated = 12.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ]
        },
        "WholesaleCertificateDate": {
          "description": "The date of the accountants certificate for wholesale investors, if required.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Identification": {
      "properties": {
        "Type": {
          "description": "Tfn = 0, Abn = 1, Tin = 2, Nin = 3",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ]
        },
        "Value": {
          "description": "Identification number (eg TFN number).",
          "type": "string"
        },
        "MissingReason": {
          "description": "CountryDoesntIssue = 1, DontNeedOne = 2, Other = 99",
          "format": "int32",
          "type": "integer"
        },
        "MissingReasonText": {
          "description": "Reason if identification not provided.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Address": {
      "properties": {
        "Addressee": {
          "description": "Addressee.",
          "type": "string"
        },
        "Street": {
          "description": "Address line 1.",
          "type": "string"
        },
        "Line2": {
          "description": "Address line 2.",
          "type": "string"
        },
        "Line3": {
          "description": "Address line 3.",
          "type": "string"
        },
        "Postcode": {
          "description": "Postcode of address.",
          "type": "string"
        },
        "Suburb": {
          "description": "Suburb of address.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Country code of address.",
          "type": "string"
        },
        "IsRegistered": {
          "description": "Whether address is registered.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Contact": {
      "properties": {
        "Title": {
          "description": "Title of contact.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of contact.",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of contact.",
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of contact.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email of contact.",
          "type": "string"
        },
        "Phone": {
          "description": "Phone of contact.",
          "type": "string"
        },
        "IsPoliticallyExposedPerson": {
          "description": "Whether contact is politically exposed.",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "If contact is politically exposed, details must be supplied.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Signatory": {
      "properties": {
        "Capacity": {
          "description": "Director = 0, SoleDirector = 1, CompanySecretary = 2",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ]
        },
        "Title": {
          "description": "Title of signatory.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of signatory.",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of signatory.",
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of signatory.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email address of signatory.",
          "type": "string"
        },
        "Phone": {
          "description": "Phone number of signatory.",
          "type": "string"
        },
        "IsPoliticallyExposedPerson": {
          "description": "",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.DraftApplication.Security": {
      "properties": {
        "Code": {
          "description": "Security code in account exclusions.",
          "type": "string"
        },
        "Exchange": {
          "description": "Security exchange code in account exclusions.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.ApplicationCreateResult": {
      "properties": {
        "applicationId": {
          "description": "Unique ApplicationID to be used as an application reference.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.BeneficiaryCreate": {
      "properties": {
        "Beneficiaries": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.NominatedBeneficiary"
          },
          "type": "array"
        },
        "AccountId": {
          "description": "AccountID to link the beneficiary to.",
          "type": "string"
        },
        "IsBinding": {
          "description": "Whether the nomination is binding.",
          "type": "boolean"
        },
        "ModifiedUserId": {
          "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "Beneficiaries",
        "AccountId",
        "ModifiedUserId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.NominatedBeneficiary": {
      "properties": {
        "Type": {
          "description": "Standard = 0, Reversionary Pensioner = 1",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1
          ]
        },
        "FullName": {
          "description": "Full legal name of the beneficiary.",
          "type": "string"
        },
        "RelationshipToMember": {
          "description": "Spouse = 1, Child = 2, Other = 3",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ]
        },
        "Proportion": {
          "description": "The portion of the benefit that should be paid to the beneficiary. These must add up to 100%.",
          "format": "double",
          "type": "number"
        },
        "DateOfBirth": {
          "description": "Beneficiary’s date of birth.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Expense": {
      "properties": {
        "ExpenseId": {
          "description": "Praemium expense id.",
          "format": "int32",
          "type": "integer"
        },
        "EffectiveDate": {
          "description": "Date the expense was deemed to have been incurred.",
          "format": "date-time",
          "type": "string"
        },
        "TaxDate": {
          "description": "Date used for tax action reporting purposes.",
          "format": "date-time",
          "type": "string"
        },
        "PaymentDate": {
          "description": "Date the expense was paid.",
          "format": "date-time",
          "type": "string"
        },
        "ExpenseInclGst": {
          "description": "Amount paid including GST.",
          "format": "double",
          "type": "number"
        },
        "ExpenseExclGst": {
          "description": "Amount paid excluding GST",
          "format": "double",
          "type": "number"
        },
        "GstRefundableAmount": {
          "description": "Refundable amount of GST the portfolio is eligible to claim for the expense.",
          "format": "double",
          "type": "number"
        },
        "DeductibleAmount": {
          "description": "Portion of the expense that can be claimed as a tax deduction..",
          "format": "double",
          "type": "number"
        },
        "NonDeductibleAmount": {
          "description": "Portion of the expense that cannot be claimed as a tax deduction.",
          "format": "double",
          "type": "number"
        },
        "ExpenseNarration": {
          "description": "Notes attached to the expense.",
          "type": "string"
        },
        "ExpenseTypeGroupId": {
          "description": "ID of the expense type group.",
          "format": "int32",
          "type": "integer"
        },
        "ExpenseTypeGroupDescription": {
          "description": "Expenses categorised as Admin / Investment / Member / Non-investment.",
          "type": "string"
        },
        "ExpenseTypeId": {
          "description": "ID of the expense type.",
          "format": "int32",
          "type": "integer"
        },
        "ExpenseTypeDescription": {
          "description": "Description of the expense type. Please visit the “Expense Types” pages in Help Centre for a full list.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.IncomeSchedule": {
      "properties": {
        "IncomeId": {
          "description": "Praemium income id.",
          "format": "int64",
          "type": "integer"
        },
        "IncomeTypeDescription": {
          "description": "Type of income received.",
          "type": "string"
        },
        "AssetDescription": {
          "description": "Asset description.",
          "type": "string"
        },
        "TaxDate": {
          "description": "Tax date of the income record.",
          "format": "date-time",
          "type": "string"
        },
        "Interest": {
          "description": "Interest amount.",
          "format": "double",
          "type": "number"
        },
        "UnfrankedTotal": {
          "description": "Amount received that was unfranked.",
          "format": "double",
          "type": "number"
        },
        "FrankedTotal": {
          "description": "Amount received that was franked.",
          "format": "double",
          "type": "number"
        },
        "FrankingCreditsTotal": {
          "description": "Imputation credits.",
          "format": "double",
          "type": "number"
        },
        "TrustOtherAust": {
          "description": "Australian sourced income component that is not classified as one of the above types.",
          "format": "double",
          "type": "number"
        },
        "ForeignIncomeTotal": {
          "description": "Amount received from non-Australian sources.",
          "format": "double",
          "type": "number"
        },
        "TrustCGTDistributionsTotal": {
          "description": "Amount received due to distributed capital gains.",
          "format": "double",
          "type": "number"
        },
        "NonAssessableTotal": {
          "description": "Total amount that is non assessable for tax purposes.",
          "format": "double",
          "type": "number"
        },
        "IncomeTotal": {
          "description": "Total income amount received.",
          "format": "double",
          "type": "number"
        },
        "TaxWithheld": {
          "description": "Total tax withheld on the income record.",
          "format": "double",
          "type": "number"
        },
        "ForeignIncomeTaxOffsetsTotal": {
          "description": "Foreign income tax offsets.",
          "format": "double",
          "type": "number"
        },
        "TrustOtherExpenses": {
          "description": "Other expenses related to the income record.",
          "format": "double",
          "type": "number"
        },
        "CashAmount": {
          "description": "Amount received via cash.",
          "format": "double",
          "type": "number"
        },
        "DRP": {
          "description": "Amount received via dividend reinvestment.",
          "format": "double",
          "type": "number"
        },
        "AccruedAmount": {
          "description": "Income amount that is accrued.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.IncomeAndTaxCredit": {
      "properties": {
        "IncomeId": {
          "description": "Praemium income id.",
          "format": "int64",
          "type": "integer"
        },
        "IncomeSource": {
          "description": "Whether the income was Australian or Foreign based.",
          "type": "string"
        },
        "IncomeType": {
          "description": "Type of income received.",
          "type": "string"
        },
        "Asset": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "AssetDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "ExecutionDate": {
          "description": "Execution date of the income record.",
          "format": "date-time",
          "type": "string"
        },
        "PaymentDate": {
          "description": "Payment date of the income record.",
          "format": "date-time",
          "type": "string"
        },
        "Currency": {
          "description": "The local currency of the security.",
          "type": "string"
        },
        "IncomeTotal": {
          "description": "Total value of the income record.",
          "format": "double",
          "type": "number"
        },
        "DRP": {
          "description": "Amount received via dividend reinvestment.",
          "format": "double",
          "type": "number"
        },
        "CashAmount": {
          "description": "Amount received via cash.",
          "format": "double",
          "type": "number"
        },
        "Receivable": {
          "description": "Amount of income yet to be received.",
          "format": "double",
          "type": "number"
        },
        "TaxWithheld": {
          "description": "Total tax withheld on the income record.",
          "format": "double",
          "type": "number"
        },
        "ForeignTaxPay": {
          "description": "Amount of foreign tax of the income record.",
          "format": "double",
          "type": "number"
        },
        "FrankingCredit": {
          "description": "Franking credit amount attributable to the income.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.BulkIncomeScheduleData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio as returned in the GET /api/portfolios endpoint.",
          "type": "string"
        },
        "IncomeSchedules": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.IncomeSchedule"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ModelProvider.Model": {
      "properties": {
        "Id": {
          "description": "Praemium unique model Identifier.",
          "type": "string"
        },
        "Code": {
          "description": "Model code.",
          "type": "string"
        },
        "Description": {
          "description": "A description of the model.",
          "type": "string"
        },
        "Status": {
          "description": "Model Status. Returned values are Open/Closing/Closed",
          "type": "string"
        },
        "FactsheetUrl": {
          "description": "Factsheet URL.",
          "type": "string"
        },
        "ProviderName": {
          "description": "Model Provider name.",
          "type": "string"
        },
        "UpdatedDate": {
          "description": "Model status update. Note that this date refers to an update of the model description, not the model weights.",
          "format": "date-time",
          "type": "string"
        },
        "LastTransactionDate": {
          "description": "Model weights update date.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ModelProvider.ModelHoldingsSummary": {
      "properties": {
        "ModelId": {
          "description": "ModelId as returned by the Models endpoint.",
          "type": "string"
        },
        "Date": {
          "description": "Date used to display the data.",
          "format": "date-time",
          "type": "string"
        },
        "Holdings": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.ModelProvider.ModelHolding"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ModelProvider.ModelHolding": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "TargetValuePercentage": {
          "description": "Target value in the model for the security.",
          "format": "double",
          "type": "number"
        },
        "ActualValuePercentage": {
          "description": "Percentage that was implemented allowing for market movements and minimum cash. This is record in the model shadow account for the model.",
          "format": "double",
          "type": "number"
        },
        "EstimatedYield": {
          "description": "Estimated yield of the security.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ModelProvider.ModelApproximateFum": {
      "properties": {
        "ModelId": {
          "description": "ModelId as returned by the Models endpoint.",
          "type": "string"
        },
        "Date": {
          "description": "The date used when returning data in the request.",
          "format": "date-time",
          "type": "string"
        },
        "NumberOfAccountsLinked": {
          "description": "Number of accounts linked to the model.",
          "format": "int32",
          "type": "integer"
        },
        "TotalApproximateFum": {
          "description": "Approximate FUM for all accounts.",
          "format": "double",
          "type": "number"
        },
        "ApproximateFumForAccounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.ModelProvider.AccountApproximateFum"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ModelProvider.AccountApproximateFum": {
      "properties": {
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "TotalValue": {
          "description": "Total market value of the account.",
          "format": "double",
          "type": "number"
        },
        "ModelWeight": {
          "description": "Account weight in the requested model.",
          "format": "double",
          "type": "number"
        },
        "ApproximateFum": {
          "description": "Approximate FUM of the account.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ModelProvider.ModelPerformance": {
      "properties": {
        "ModelId": {
          "description": "ModelId as returned by the Models endpoint.",
          "type": "string"
        },
        "FromDate": {
          "description": "The earliest date used to calculate performance data.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The latest date used to calculate performance data.",
          "format": "date-time",
          "type": "string"
        },
        "DailyPercentageReturns": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.ModelProvider.ModelDailyPercentageReturn"
          },
          "type": "array"
        },
        "PercentageReturns": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.PerformanceReturnWithAnnualisedFlag"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ModelProvider.ModelDailyPercentageReturn": {
      "properties": {
        "Date": {
          "description": "The date used to calculate performance data.",
          "format": "date-time",
          "type": "string"
        },
        "PercentageReturn": {
          "description": "The performance percentage return",
          "format": "double",
          "type": "number"
        },
        "CumulativePercentageReturn": {
          "description": "Cumulative percentage return from the FromDate to Date.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.PerformanceReturnWithAnnualisedFlag": {
      "properties": {
        "PeriodDescription": {
          "description": "A description of the period the returns are calculated for.",
          "type": "string"
        },
        "GrossPercentReturn": {
          "description": "The performance percentage return excluding expenses.",
          "format": "double",
          "type": "number"
        },
        "NetPercentReturn": {
          "description": "The performance percentage return including expenses.",
          "format": "double",
          "type": "number"
        },
        "Annualised": {
          "description": "Whether the return is annualised.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.ModelWeightAdjustmentRequest": {
      "properties": {
        "WeightAdjustments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.ModelWeightAdjustment"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.ModelWeightAdjustment": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "ExchangeCode": {
          "description": "The exchange code of the security.",
          "type": "string"
        },
        "Target": {
          "description": "The target percentage weight of the security in the model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.ModelWeightAdjustmentResponse": {
      "properties": {
        "ISIN": {
          "description": "The Code as returned by the Models endpoint. Omitting this field will return weights for all models.",
          "type": "string"
        },
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "ExchangeCode": {
          "description": "The exchange code of the security.",
          "type": "string"
        },
        "Target": {
          "description": "The current percentage weight of the security in the model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PdsDetail": {
      "properties": {
        "Id": {
          "description": "ID of the PDS.",
          "type": "string"
        },
        "Name": {
          "description": "PDS Name.",
          "type": "string"
        },
        "IsSuperSma": {
          "description": "True/False returned for if the PDS is for a SuperSMA product.",
          "type": "boolean"
        },
        "BpayBillerCode": {
          "description": "BPAY biller code for accounts within the PDS to use.",
          "type": "string"
        },
        "Status": {
          "description": "Either “Active” or ”Closing”.",
          "type": "string"
        },
        "AccountTypes": {
          "description": "The account type of the portfolio. 0 - Standard VWrap/SMA Account, 1 - Super Fund, 2 - Super Fund Holding Account, 3 - Super Fund Segregated Account, 4 - Super Fund Special Function Account, 5 - Holdings Only Portfolio, 6 - SuperSMA (accumulation), 7 - SuperSMA (pension)",
          "items": {
            "format": "int32",
            "type": "integer",
            "enum": [
              1,
              4,
              5,
              6
            ]
          },
          "type": "array"
        },
        "Fees": {
          "description": "Array of fees available in the PDS.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PdsFee"
          },
          "type": "array"
        },
        "Models": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PdsModel"
          },
          "type": "array"
        },
        "BankAccountUsages": {
          "description": "List of available bank account usages in the PDS.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.BankAccountUsage"
          },
          "type": "array"
        },
        "TaxOptions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PdsTaxOption"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PdsFee": {
      "properties": {
        "Id": {
          "description": "ID of the fee.",
          "type": "string"
        },
        "Type": {
          "description": "0 - Fee Table, 1 – Contribution, 2 – Establishment, 3 – Termination, 4 - Withdrawal",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ]
        },
        "Name": {
          "description": "Fee name.",
          "type": "string"
        },
        "Tiers": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PdsFeeTier"
          },
          "type": "array"
        },
        "DollarOverride": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PdsFeeOverride"
        },
        "PercentOverride": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.PdsFeeOverride"
        },
        "DefaultValue": {
          "description": "DollarOverride",
          "format": "double",
          "type": "number"
        },
        "DefaultValueWithTax": {
          "description": "Default fee value inclusive of tax.",
          "format": "double",
          "type": "number"
        },
        "DefaultType": {
          "description": "Default fee type. The enum value can be seen in Fees.Type",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2
          ]
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PdsModel": {
      "properties": {
        "Code": {
          "description": "Model code.",
          "type": "string"
        },
        "Name": {
          "description": "A description of the model.",
          "type": "string"
        },
        "Style": {
          "description": "Style of model investment.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.BankAccountUsage": {
      "properties": {
        "Usage": {
          "description": "Usage code of the bank account usage.",
          "type": "string"
        },
        "Description": {
          "description": "Description of the bank account usage.",
          "type": "string"
        },
        "IsMandatory": {
          "description": "True/False returned for if the bank account usage is mandatory in the PDS.",
          "type": "boolean"
        },
        "Notes": {
          "description": "Additional notes regarding the bank account usage.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PdsTaxOption": {
      "properties": {
        "Code": {
          "description": "Tax election code.",
          "type": "string"
        },
        "Description": {
          "description": "Tax election description.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PdsFeeTier": {
      "properties": {
        "ValueAppliedFrom": {
          "description": "Fee tier starting value.",
          "format": "double",
          "type": "number"
        },
        "FeePercent": {
          "description": "Fee percentage applied to this tier.",
          "format": "double",
          "type": "number"
        },
        "FeePercentWithTax": {
          "description": "Fee percentage inclusive of tax.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.PdsFeeOverride": {
      "properties": {
        "MinValue": {
          "description": "Minimum overridable amount.",
          "format": "double",
          "type": "number"
        },
        "MaxValue": {
          "description": "Maximum overridable amount.",
          "format": "double",
          "type": "number"
        },
        "MinValueWithTax": {
          "description": "Minimum overridable amount inclusive of tax.",
          "format": "double",
          "type": "number"
        },
        "MaxValueWithTax": {
          "description": "Maximum overridable amount inclusive of tax.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.PortfolioPerformanceData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.PortfolioPerformanceData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseStatus": {
      "properties": {
        "Success": {
          "description": "True/false",
          "type": "boolean"
        },
        "Errors": {
          "description": "Information regarding the response error (if applicable).",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Implementation.Error"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.PortfolioPerformanceData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "Performance": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Performance"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.Error": {
      "properties": {
        "Code": {
          "description": "Error code for the response error.",
          "format": "int32",
          "type": "integer"
        },
        "Message": {
          "description": "Error message for the error code.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Performance": {
      "properties": {
        "FromDate": {
          "description": "The earliest date used to calculate performance data. This could vary from the requested from date due the portfolio’s inception date for performance.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The latest date used to calculate performance data. This could vary from the requested to date due the portfolio’s recalculation or closure date.",
          "format": "date-time",
          "type": "string"
        },
        "PerfInceptionDate": {
          "description": "The minimum from date that can be used to calculate performance, as set on the Portfolio Details > Performance settings screen.",
          "format": "date-time",
          "type": "string"
        },
        "HoldingsExcluded": {
          "description": "The number of individual securities excluded from portfolio performance calculations.",
          "format": "int32",
          "type": "integer"
        },
        "PerfCalcMethod": {
          "description": "The performance calculation method used to calculate Percent Returns.",
          "format": "int32",
          "type": "integer"
        },
        "BMV": {
          "description": "The beginning market value of the portfolio on the From Date.",
          "format": "double",
          "type": "number"
        },
        "EMV": {
          "description": "The ending market value of the portfolio on the To Date.",
          "format": "double",
          "type": "number"
        },
        "NetCapitalMovement": {
          "description": "The net additions and withdrawals that flowed into and out of the portfolio within the performance period. The transactions that make up this net amount when including cash are available from the Additions and withdrawals report.",
          "format": "double",
          "type": "number"
        },
        "NetInternalTransfers": {
          "description": "Internal transfers between cash books that are not to be treated as a client addition or withdrawal.",
          "format": "double",
          "type": "number"
        },
        "CashExpenses": {
          "description": "Expenses incurred by the portfolio within the period, to be paid from either a portfolio cash book or external bank account.",
          "format": "double",
          "type": "number"
        },
        "UnallocatedAmount": {
          "description": "An unallocated amount will show if the sum of the above does not equal the Movement in value amount - that is, there is a component of the difference between the starting and ending market value that has not been explained. This will usually be because the cash side of a transaction or income event cannot be found.",
          "format": "double",
          "type": "number"
        },
        "DollarReturn": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.DollarReturnData"
        },
        "PercentReturns": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.PerformanceReturn"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.DollarReturnData": {
      "properties": {
        "CapitalAppreciation": {
          "description": "Realised and unrealised gains/losses of the portfolio.",
          "format": "double",
          "type": "number"
        },
        "TotalIncome": {
          "description": "The total income of the portfolio received within the performance period. Income and tax credits are included in performance calculations when they are first acknowledged in the portfolio. That is, when they are first declared according to the ex-date.",
          "format": "double",
          "type": "number"
        },
        "TaxCredits": {
          "description": "The total tax credits of the portfolio received within the performance period.",
          "format": "double",
          "type": "number"
        },
        "ForexMovements": {
          "description": "The gain/loss of the portfolio attributable to foreign exchange movements.",
          "format": "double",
          "type": "number"
        },
        "GrossDollarReturn": {
          "description": "The sum of all dollar return fields excluding expenses.",
          "format": "double",
          "type": "number"
        },
        "TotalExpenses": {
          "description": "The total expenses recorded against the portfolio within the period. The Trading Activity > Income & Expenses > Expense Details page provides the ability to view these expenses.",
          "format": "double",
          "type": "number"
        },
        "NetDollarReturn": {
          "description": "The sum of all dollar return fields.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.PerformanceReturn": {
      "properties": {
        "PeriodDescription": {
          "description": "A description of the period the returns are calculated for.",
          "type": "string"
        },
        "GrossPercentReturn": {
          "description": "The performance percentage return excluding expenses.",
          "format": "double",
          "type": "number"
        },
        "NetPercentReturn": {
          "description": "The performance percentage return including expenses.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.DailyReturnsData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.DailyReturnsData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.DailyReturnsData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "FromDate": {
          "description": "The earliest date used to calculate performance data. This could vary from the requested from date due the portfolio’s inception date for performance.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The latest date used to calculate performance data. This could vary from the requested to date due the portfolio’s recalculation or closure date.",
          "format": "date-time",
          "type": "string"
        },
        "PerfInceptionDate": {
          "description": "The minimum from date that can be used to calculate performance, as set on the Portfolio Details > Performance settings screen.",
          "format": "date-time",
          "type": "string"
        },
        "DailyReturns": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.DailyReturn"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.DailyReturn": {
      "properties": {
        "Date": {
          "description": "The date of the return.",
          "format": "date-time",
          "type": "string"
        },
        "BMV": {
          "description": "The beginning market value of the portfolio on the Date.",
          "format": "double",
          "type": "number"
        },
        "EMV": {
          "description": "The ending market value of the portfolio on the Date.",
          "format": "double",
          "type": "number"
        },
        "NetContribution": {
          "description": "The net additions and withdrawals that flowed into and out of the portfolio within the performance period. The transactions that make up this net amount when including cash are available from the Additions and withdrawals report.",
          "format": "double",
          "type": "number"
        },
        "NetInternalTransfers": {
          "description": "Internal transfers between cash books that are not to be treated as a client addition or withdrawal.",
          "format": "double",
          "type": "number"
        },
        "TotalExpenses": {
          "description": "The total expenses recorded against the portfolio within the period. The Trading Activity > Income & Expenses > Expense Details page provides the ability to view these expenses.",
          "format": "double",
          "type": "number"
        },
        "TaxCredits": {
          "description": "The total tax credits of the portfolio received within the performance period.",
          "format": "double",
          "type": "number"
        },
        "PercentageReturn": {
          "description": "The performance percentage return",
          "format": "double",
          "type": "number"
        },
        "NetPercentReturn": {
          "description": "The performance percentage return inclusive of expenses.",
          "format": "double",
          "type": "number"
        },
        "CumPercentageReturn": {
          "description": "The cumulative percentage return of the portfolio from the From Date to the DailyReturns Date.",
          "format": "double",
          "type": "number"
        },
        "CumNetPercentReturn": {
          "description": "The cumulative net percentage return of the portfolio from the From Date to the DailyReturns Date.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.HoldingsExcludedData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.HoldingsExcludedData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.HoldingsExcludedData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "Holdings": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.HoldingExcluded"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.HoldingExcluded": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "ExchangeCode": {
          "description": "The exchange code of the security.",
          "type": "string"
        },
        "FromDate": {
          "description": "The start date the holding is excluded from performance calculations for the portfolio.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The end date the holding is excluded from performance calculations for the portfolio.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.BenchmarksData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.BenchmarksData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.BenchmarksData": {
      "properties": {
        "Benchmarks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Benchmark"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Benchmark": {
      "properties": {
        "BenchmarkID": {
          "description": "Praemium ID of the Benchmark.",
          "format": "int32",
          "type": "integer"
        },
        "BenchmarkCode": {
          "description": "Benchmark code.",
          "type": "string"
        },
        "BenchmarkDescription": {
          "description": "Benchmark description.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.BenchmarkPerformanceData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.BenchmarkPerformanceData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.BenchmarkPerformanceData": {
      "properties": {
        "BenchmarkID": {
          "description": "Praemium ID of the Benchmark as returned in the /Performance/Benchmarks endpoint",
          "format": "int32",
          "type": "integer"
        },
        "BenchmarkPerformance": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.BenchmarkPerformance"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.BenchmarkPerformance": {
      "properties": {
        "FromDate": {
          "description": "The earliest date used to calculate performance data. This could vary from the requested from date due the benchmark’s earliest available performance date.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The latest date used to calculate performance data. This could vary from the requested to date due the portfolio’s recalculation or closure date.",
          "format": "date-time",
          "type": "string"
        },
        "PercentReturns": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.BenchmarkReturn"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.BenchmarkReturn": {
      "properties": {
        "PeriodDescription": {
          "description": "The period the returns are calculated for.",
          "type": "string"
        },
        "PercentageReturn": {
          "description": "The percentage return of the benchmark for the period.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.InvestmentMovementsData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.InvestmentMovementsData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.InvestmentMovementsData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "FromDate": {
          "description": "The earliest date used to return the Investment Movements data.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The latest date used to return the Investment Movements data.",
          "format": "date-time",
          "type": "string"
        },
        "Investments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Investment"
          },
          "type": "array"
        },
        "CashAndEquivalents": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.CashAndEquivalent"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Investment": {
      "properties": {
        "AssetType": {
          "description": "A description of the asset type.",
          "type": "string"
        },
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "AssetCurrency": {
          "description": "The local currency of the security.",
          "type": "string"
        },
        "IncludeInPerf": {
          "description": "Whether the security is included in performance calculations.",
          "format": "int32",
          "type": "integer"
        },
        "StartMarketValue": {
          "description": "Market Value of the security at the FromDate.",
          "format": "double",
          "type": "number"
        },
        "Purchases": {
          "description": "Sum of purchases within the period.",
          "format": "double",
          "type": "number"
        },
        "Sales": {
          "description": "Sum of sales within the period.",
          "format": "double",
          "type": "number"
        },
        "NetAdjOther": {
          "description": "Other net amount within the period.",
          "format": "double",
          "type": "number"
        },
        "GainOrLoss": {
          "description": "Dollar gain/loss in the response period.",
          "format": "double",
          "type": "number"
        },
        "EndMarketValue": {
          "description": "Market Value of the security at the ToDate",
          "format": "double",
          "type": "number"
        },
        "IncomeDRP": {
          "description": "Income that was reinvested as part of a DRP.",
          "format": "double",
          "type": "number"
        },
        "IncomeCash": {
          "description": "Income that was paid to cash.",
          "format": "double",
          "type": "number"
        },
        "IncomeNotYetPaid": {
          "description": "Income declared but not yet paid at the ToDate.",
          "format": "double",
          "type": "number"
        },
        "TotalIncome": {
          "description": "Total income within the period.",
          "format": "double",
          "type": "number"
        },
        "TaxCredits": {
          "description": "Tax credit amount receivable within the period.",
          "format": "double",
          "type": "number"
        },
        "TotalReturn": {
          "description": "Total dollar return for the period.",
          "format": "double",
          "type": "number"
        },
        "PercentTotalReturn": {
          "description": "Total return for the period in percentage terms.",
          "format": "double",
          "type": "number"
        },
        "PercentCapitalReturn": {
          "description": "Return for the period attributable to capital returns.",
          "format": "double",
          "type": "number"
        },
        "PercentIncomeReturn": {
          "description": "Return for the period attributable to income returns.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.CashAndEquivalent": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "AssetCurrency": {
          "description": "The local currency of the security.",
          "type": "string"
        },
        "IncludeInPerf": {
          "description": "Whether the security is included in performance calculations.",
          "format": "int32",
          "type": "integer"
        },
        "OpeningBalance": {
          "description": "Opening balance of the security at the FromDate.",
          "format": "double",
          "type": "number"
        },
        "Purchases": {
          "description": "Total asset purchases within the period.",
          "format": "double",
          "type": "number"
        },
        "Sales": {
          "description": "Total asset sales within the period.",
          "format": "double",
          "type": "number"
        },
        "Other": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Income": {
          "description": "Income amount that the security received in the period.",
          "format": "double",
          "type": "number"
        },
        "InterestReceipts": {
          "description": "Interest amount that the security received in the period.",
          "format": "double",
          "type": "number"
        },
        "InternalTransfers": {
          "description": "Transfer amount for the period.",
          "format": "double",
          "type": "number"
        },
        "Expenses": {
          "description": "Expenses charged against the security within the period.",
          "format": "double",
          "type": "number"
        },
        "Deposits": {
          "description": "Deposit amount that the security received in the period.",
          "format": "double",
          "type": "number"
        },
        "Withdrawals": {
          "description": "Withdrawal amount that the security received in the period.",
          "format": "double",
          "type": "number"
        },
        "ForexMovements": {
          "description": "Movement in currency for the period.",
          "format": "double",
          "type": "number"
        },
        "ClosingBalance": {
          "description": "Closing balance of the security at the ToDate.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.InvestmentPerformance.AssetClassPerformance": {
      "properties": {
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "format": "int32",
          "type": "integer"
        },
        "FromDate": {
          "description": "The earliest date used to return the Asset Class data.",
          "type": "string"
        },
        "ToDate": {
          "description": "The latest date used to return the Asset Class data.",
          "type": "string"
        },
        "Investments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.InvestmentPerformance.AssetClassInvestment"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.InvestmentPerformance.AssetClassInvestment": {
      "properties": {
        "AssetClass": {
          "description": "Asset class description.",
          "type": "string"
        },
        "Benchmark": {
          "description": "Asset class benchmark.",
          "type": "string"
        },
        "StartValue": {
          "description": "Market Value of the asset class at the FromDate.",
          "format": "double",
          "type": "number"
        },
        "EndValue": {
          "description": "Market Value of the asset class at the ToDate.",
          "format": "double",
          "type": "number"
        },
        "TotalReturn": {
          "description": "Total dollar return for the period.",
          "format": "double",
          "type": "number"
        },
        "TotalReturnPercent": {
          "description": "Total return for the period as a percentage.",
          "format": "double",
          "type": "number"
        },
        "BenchmarkReturnPercent": {
          "description": "Total return for the benchmark as a percentage.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.PortfoliosData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.PortfoliosData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.PortfoliosData": {
      "properties": {
        "PortfolioCount": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.ReturnCount"
        },
        "Portfolios": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Portfolio"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ReturnCount": {
      "properties": {
        "RecordsFound": {
          "description": "Number of records found matching the search criteria.",
          "format": "int32",
          "type": "integer"
        },
        "RecordsReturned": {
          "description": "Number of records returned in the current response.",
          "format": "int32",
          "type": "integer"
        },
        "PageCount": {
          "description": "Number of pages in the response.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Portfolio": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio. As PortfolioIDs are non-unique within the system, this is used as a unique identifier in Portfolio API requests.",
          "format": "int32",
          "type": "integer"
        },
        "PortfolioID": {
          "description": "The PortfolioID of the Portfolio.",
          "type": "string"
        },
        "PortfolioName": {
          "description": "The PortfolioName of the Portfolio.",
          "type": "string"
        },
        "ConsolidatedPortfolioType": {
          "description": "“None” (if the Portfolio is not a consolidated portfolio), “Valuation” or “Transaction”.",
          "type": "string"
        },
        "Status": {
          "description": "Active / Closed / Draft / Deleted",
          "type": "string"
        },
        "RecalcType": {
          "description": "The recalc type setup against the Portfolio. Values are either “Auto” or “Manual”.",
          "type": "string"
        },
        "RecalcStatus": {
          "description": "The recalc status of the Portfolio. Values are either “OK” or “Error”.",
          "type": "string"
        },
        "ProcessedTo": {
          "description": "The recalculation date of the portfolio in “YYYY-MM-DDTHH:MM:SSZ”.",
          "format": "date-time",
          "type": "string"
        },
        "ReportingFrequency": {
          "description": "N (Never), A (Annually), Q (Quarterly), M (Monthly), B (Bi-annually) if applicable.",
          "type": "string"
        },
        "AdviserGUIDs": {
          "description": "Only returned for ***Service Provider*** tokens. The Service Provider link generated AdviserGUIDs that have access to the Portfolio.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "HasUnmatchedTransactions": {
          "description": "Whether the portfolio has unmatched transactions.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.ChildPortfoliosData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.ChildPortfoliosData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ChildPortfoliosData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the consolidated Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "ChildPortfolios": {
          "description": "An array of child portfolios linked to the consolidated portfolio.",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.ChildPortfolio"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ChildPortfolio": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the child Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "PortfolioID": {
          "description": "The PortfolioID of the child Portfolio.",
          "type": "string"
        },
        "PortfolioName": {
          "description": "The PortfolioName of the child Portfolio.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.PortfolioDetailsData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.PortfolioDetailsData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.PortfolioDetailsData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "Portfolio": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.PortfolioDetail"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.PortfolioDetail": {
      "properties": {
        "PortfolioID": {
          "description": "The PortfolioID of the Portfolio.",
          "type": "string"
        },
        "PortfolioName": {
          "description": "The PortfolioName of the Portfolio.",
          "type": "string"
        },
        "ConsolidatedPortfolioType": {
          "description": "“None” (if the Portfolio is not a consolidated portfolio), “Valuation” or “Transaction”.",
          "type": "string"
        },
        "Status": {
          "description": "Active / Closed / Draft / Deleted",
          "type": "string"
        },
        "RecalcType": {
          "description": "The recalc type setup against the Portfolio. Values are either “Auto” or “Manual”.",
          "type": "string"
        },
        "RecalcStatus": {
          "description": "The recalc status of the Portfolio. Values are either “OK” or “Error”.",
          "type": "string"
        },
        "ProcessedTo": {
          "description": "The recalculation date of the portfolio in “YYYY-MM-DDTHH:MM:SSZ”.",
          "format": "date-time",
          "type": "string"
        },
        "TaxEntityType": {
          "description": "The tax entity type recorded against the portfolio (Company, Individual, Joint Investors, Partnership, Super Fund, Trust).",
          "type": "string"
        },
        "TotalValue": {
          "description": "The Portfolio Valuation of the portfolio on the ProcessedTo date.",
          "format": "double",
          "type": "number"
        },
        "Owner": {
          "description": "The portfolio owner username.",
          "type": "string"
        },
        "DateCreated": {
          "description": "The created date of the portfolio.",
          "format": "date-time",
          "type": "string"
        },
        "DateClosed": {
          "description": "The closed date of the portfolio. This field will only be returned for closed portfolios.",
          "format": "date-time",
          "type": "string"
        },
        "RecalcRequired": {
          "description": "Whether this portfolio requires recalculation to accurately calculate all values.",
          "type": "string"
        },
        "FirstTransactionDate": {
          "description": "The first transaction date of the portfolio.",
          "format": "date-time",
          "type": "string"
        },
        "LastRecalcDate": {
          "description": "The run-date of the latest portfolio recalculation.",
          "format": "date-time",
          "type": "string"
        },
        "AccountType": {
          "description": "Refer to endpoint description.",
          "format": "int32",
          "type": "integer"
        },
        "Benchmark1ID": {
          "description": "The unique ID of the portfolio’s benchmark 1.",
          "format": "int32",
          "type": "integer"
        },
        "Benchmark1": {
          "description": "The name of the portfolio’s benchmark 1.",
          "type": "string"
        },
        "Benchmark1Margin": {
          "description": "The margin (p.a.) of the portfolio's benchmark 1.",
          "format": "double",
          "type": "number"
        },
        "Benchmark2ID": {
          "description": "The unique ID of the portfolio’s benchmark 2.",
          "format": "int32",
          "type": "integer"
        },
        "Benchmark2": {
          "description": "The name of the portfolio’s benchmark 2.",
          "type": "string"
        },
        "Benchmark2Margin": {
          "description": "The margin (p.a.) of the portfolio's benchmark 2.",
          "format": "double",
          "type": "number"
        },
        "Product": {
          "description": "The description of the portfolio’s product.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.ValuationData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.ValuationData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ValuationData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "Valuation": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Valuation"
        },
        "Holdings": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Holding"
          },
          "type": "array"
        },
        "ReceivablesAndPayables": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.ReceivableAndPayable"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Valuation": {
      "properties": {
        "ValuationDate": {
          "description": "Date used to display the data.",
          "format": "date-time",
          "type": "string"
        },
        "TotalCost": {
          "description": "The total portfolio cost based on the cost base of unrealised holdings.",
          "format": "double",
          "type": "number"
        },
        "TotalValue": {
          "description": "The total portfolio value based on the quantity and price of unrealised holdings.",
          "format": "double",
          "type": "number"
        },
        "NetValue": {
          "description": "The total portfolio value inclusive of receivables and payables.",
          "format": "double",
          "type": "number"
        },
        "TotalGainOrLoss": {
          "description": "Total Gain/Loss is the nominal difference between the total value and the total cost.",
          "format": "double",
          "type": "number"
        },
        "MarketValueGainOrLoss": {
          "description": "MarketValueGainOrLoss as a result of the market price (MV) movement of the security.",
          "format": "double",
          "type": "number"
        },
        "ExchangeRateGainOrLoss": {
          "description": "ExchangeRateGainOrLoss as a result of the movement of the exchange rate (FX).",
          "format": "double",
          "type": "number"
        },
        "EstIncome": {
          "description": "Indicative field calculated based on the income of each asset generated over the past twelve months.",
          "format": "double",
          "type": "number"
        },
        "Yield": {
          "description": "The estimated income as a percentage of the market value of the portfolio.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Holding": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "SEDOL": {
          "description": "Stock exchange daily official list.",
          "type": "string"
        },
        "AssetClassDescription": {
          "description": "A description of the security’s asset class.",
          "type": "string"
        },
        "AssetClassCode": {
          "description": "The asset class code of the security’s asset class. ",
          "type": "string"
        },
        "AssetClassCategory": {
          "description": "The asset class category of the security’s asset class",
          "type": "string"
        },
        "AssetType": {
          "description": "The asset type of the security’s asset class",
          "type": "string"
        },
        "GicsDescription": {
          "description": "The Global Industry Classification Standard of the security.",
          "type": "string"
        },
        "Quantity": {
          "description": "The number of securities held by the portfolio at the recalculation date.",
          "format": "double",
          "type": "number"
        },
        "UnitCost": {
          "description": "Average unit cost of the holding. This is the actual cost divided by the quantity.",
          "format": "double",
          "type": "number"
        },
        "Cost": {
          "description": "Actual cost is based on the cost base of unrealised holdings.",
          "format": "double",
          "type": "number"
        },
        "UnitValue": {
          "description": "The last price of the holding available at the recalculation date.",
          "format": "double",
          "type": "number"
        },
        "UnitPriceDate": {
          "description": "The date of the unit price.",
          "format": "date-time",
          "type": "string"
        },
        "Value": {
          "description": "Value is calculated based on the unit price multiplied by the quantity.",
          "format": "double",
          "type": "number"
        },
        "PercentTotalValue": {
          "description": "The percentage ratio of the value of this asset relative to the total portfolio value.",
          "format": "double",
          "type": "number"
        },
        "GainOrLoss": {
          "description": "Gain/Loss is the nominal difference between the total value and the total cost of this asset.",
          "format": "double",
          "type": "number"
        },
        "MarketValueGainOrLoss": {
          "description": "MarketValueGainOrLoss as a result of the market price (MV) movement of the security.",
          "format": "double",
          "type": "number"
        },
        "ExchangeRateGainOrLoss": {
          "description": "ExchangeRateGainOrLoss as a result of the movement of the exchange rate (FX).",
          "format": "double",
          "type": "number"
        },
        "PercentTotalGainOrLoss": {
          "description": "The total gain or loss (TG) expressed as a percentage over the adjusted cost base of the asset.",
          "format": "double",
          "type": "number"
        },
        "EstIncome": {
          "description": "Indicative field calculated based on the income of each asset generated over the past twelve months.",
          "format": "double",
          "type": "number"
        },
        "Yield": {
          "description": "The estimated income as a percentage of the market value of the portfolio.",
          "format": "double",
          "type": "number"
        },
        "AssetCurrency": {
          "description": "The local currency of the security.",
          "type": "string"
        },
        "ValueAssetCurrency": {
          "description": "The value based on the quantity and local price of unrealised holdings.",
          "format": "double",
          "type": "number"
        },
        "CostBaseUnknown": {
          "description": "0 (Cost base known) or 1 (Cost base unknown) for the holding.",
          "format": "int32",
          "type": "integer"
        },
        "TaxCredits": {
          "description": "The tax credits available on the current holdings of the security.",
          "format": "double",
          "type": "number"
        },
        "EstFrankingCredits": {
          "description": "Amount expected to be received in franking credits.",
          "format": "double",
          "type": "number"
        },
        "EstimatedGrossYield": {
          "description": "Estimated gross yield is based on the sum of the estimated income and franking credits as a percentage of the holding's market value.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.ReceivableAndPayable": {
      "properties": {
        "Code": {
          "description": "The asset code of the receivable/payable.",
          "type": "string"
        },
        "Description": {
          "description": "A description of the receivable/payable.",
          "type": "string"
        },
        "Type": {
          "description": "",
          "type": "string"
        },
        "Amount": {
          "description": "The total value of the receivable/payable.",
          "format": "double",
          "type": "number"
        },
        "IncludedInNetValue": {
          "description": "Returned values are either 0 (excluded from Net Value) or 1 (Included in Net Value)",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.BulkValuationResponse": {
      "properties": {
        "PortfolioCount": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.PortfolioCount"
        },
        "Portfolios": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.GroupedBulkValuation"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.PortfolioCount": {
      "properties": {
        "PageCount": {
          "description": "Number of pages in the response.",
          "format": "int32",
          "type": "integer"
        },
        "RecordsReturned": {
          "description": "Number of records returned in the current response.",
          "format": "int32",
          "type": "integer"
        },
        "RecordsFound": {
          "description": "Number of records found matching the search criteria.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.GroupedBulkValuation": {
      "properties": {
        "SMA": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.BulkValuationData"
          },
          "type": "array"
        },
        "NonSMA": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.BulkValuationData"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.BulkValuationData": {
      "properties": {
        "Subscriptions": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Subscription"
        },
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "Valuation": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.Valuation"
        },
        "Holdings": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Holding"
          },
          "type": "array"
        },
        "ReceivablesAndPayables": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.ReceivableAndPayable"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Subscription": {
      "properties": {
        "Models": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Model"
          },
          "type": "array"
        },
        "CashHub": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.CashHub"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Model": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "Weighting": {
          "description": "Account’s model weighting at the valuation date.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.CashHub": {
      "properties": {
        "AUD": {
          "description": "Cash model weighting at the valuation date.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.AssetClassSummaryData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.AssetClassSummaryData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.AssetClassSummaryData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "ValuationDate": {
          "description": "Date used to display the data.",
          "format": "date-time",
          "type": "string"
        },
        "Valuation": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.AssetClassValuation"
        },
        "AssetClasses": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.AssetClass"
          },
          "type": "array"
        },
        "ReceivablesAndPayables": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.AssetClassReceivableAndPayable"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.AssetClassValuation": {
      "properties": {
        "ValuationDate": {
          "description": "Date used to display the data.",
          "format": "date-time",
          "type": "string"
        },
        "TotalCost": {
          "description": "The total portfolio cost based on the cost base of unrealised holdings.",
          "format": "double",
          "type": "number"
        },
        "TotalValue": {
          "description": "The total portfolio value based on the quantity and price of unrealised holdings.",
          "format": "double",
          "type": "number"
        },
        "NetValue": {
          "description": "The total portfolio value inclusive of receivables and payables.",
          "format": "double",
          "type": "number"
        },
        "TotalGainOrLoss": {
          "description": "Total Gain/Loss is the nominal difference between the total value and the total cost.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.AssetClass": {
      "properties": {
        "AssetClassDescription": {
          "description": "A description of the asset class.",
          "type": "string"
        },
        "Value": {
          "description": "The total value of the portfolio’s holdings within the asset class.",
          "format": "double",
          "type": "number"
        },
        "PercentTotalValue": {
          "description": "The percentage ratio of the value of this asset class to the total portfolio value.",
          "format": "double",
          "type": "number"
        },
        "PercentNetValue": {
          "description": "The percentage ratio of the value of this asset class to the net portfolio value.",
          "format": "double",
          "type": "number"
        },
        "MinTargetAllocation": {
          "description": "The minimum asset class allocation target for this asset class entered for the portfolio.",
          "format": "double",
          "type": "number"
        },
        "MaxTargetAllocation": {
          "description": "The maximum asset class allocation target for this asset class entered for the portfolio.",
          "format": "double",
          "type": "number"
        },
        "MidPointTargetAllocation": {
          "description": "The middle value of the minimum and maximum target allocation for the asset class.",
          "format": "double",
          "type": "number"
        },
        "Variance": {
          "description": "The variance of the asset class’ value outside of the target allocation range.  ",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.AssetClassReceivableAndPayable": {
      "properties": {
        "Description": {
          "description": "Description of the Receivable/Payable holding.",
          "type": "string"
        },
        "TotalAmount": {
          "description": "Amount of the receivable/payable.",
          "format": "double",
          "type": "number"
        },
        "IncludedInNetValue": {
          "description": "0 if excluded from the Portfolio's NetValue, or 1 if included.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.RecalcStatus": {
      "properties": {
        "AsatDate": {
          "description": "Recalc date.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Report.ReportingEvent": {
      "properties": {
        "Id": {
          "description": "ID of the reporting event.",
          "format": "int32",
          "type": "integer"
        },
        "EventName": {
          "description": "Name of the reporting event.",
          "type": "string"
        },
        "CreatedDate": {
          "description": "Date the record was created.",
          "format": "date-time",
          "type": "string"
        },
        "UpdatedDate": {
          "description": "Date the record was updated.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Report.ReportingEventPublishedFile": {
      "properties": {
        "FileId": {
          "description": "Unique ID of the generated file.",
          "type": "string"
        },
        "PortfolioName": {
          "description": "The PortfolioName of the Portfolio.",
          "type": "string"
        },
        "PortfolioCode": {
          "description": "The PortfolioID of the Portfolio.",
          "type": "string"
        },
        "FileName": {
          "description": "Generated file name of the report.",
          "type": "string"
        },
        "Extension": {
          "description": "File extension.",
          "type": "string"
        },
        "GeneratedDate": {
          "description": "Date the file was generated.",
          "format": "date-time",
          "type": "string"
        },
        "PublishedDate": {
          "description": "Date the file was published.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.UserAccountResponse": {
      "properties": {
        "UserEmail": {
          "description": "Email address of the user.",
          "type": "string"
        },
        "UserType": {
          "description": "Investor = 0, Adviser = 1.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1
          ]
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Sso.ServiceProviderSsoRequest": {
      "properties": {
        "Application": {
          "description": "The ID of the application the user will be sent to once logged in. Platform=V-Wrap, Investor=Investor Portal, Adviser=Adviser Portal, Applications=Application Portal.",
          "type": "string"
        },
        "UserEmail": {
          "description": "Email address of the user.",
          "type": "string"
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        }
      },
      "required": [
        "Application",
        "UserEmail",
        "AccountId"
      ],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Sso.ServiceProviderSsoResponse": {
      "properties": {
        "SsoUrl": {
          "description": "URL containing one-time security token for SSO login.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Sso.UserSsoRequest": {
      "properties": {
        "Application": {
          "description": "The ID of the application the user will be sent to once logged in. Platform=V-Wrap, Investor=Investor Portal, Adviser=Adviser Portal, Applications=Application Portal.",
          "type": "string"
        },
        "Parameters": {
          "description": "ItemKey / Value containing AccountID, AreaID or Frameless.",
          "type": "object"
        },
        "UserId": {
          "description": "The ID of the user to log in. Either UserId or Username is required.",
          "format": "int32",
          "type": "integer"
        },
        "Username": {
          "description": "The Praemium username/Login ID of the user to log in. Either UserId or Username is required.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.SuperFund": {
      "properties": {
        "Usi": {
          "description": "Unique Superannuation Identifier (USI) is used in SuperStream to identify an APRA fund and/or its superannuation product which an employee (member) is contributing to.",
          "type": "string"
        },
        "Spin": {
          "description": "Superannuation Product Identifier Number.",
          "type": "string"
        },
        "FundName": {
          "description": "Name of the Superannuation Fund.",
          "type": "string"
        },
        "ProductName": {
          "description": "Product Name of the Superannuation fund.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.UnrealisedCGTSummaryData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.UnrealisedCGTSummaryData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.UnrealisedCGTSummaryData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "ValuationDate": {
          "description": "Date used to display the data.",
          "format": "date-time",
          "type": "string"
        },
        "UnrealisedCGT": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.CgtSummary"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.CgtSummary": {
      "properties": {
        "CostBaseUnknown": {
          "description": "0 (Cost base known) or 1 (Cost base unknown) for the holding.",
          "format": "int32",
          "type": "integer"
        },
        "ActualCost": {
          "description": "The actual cost of the security is its purchase cost, adjusted for all CGT events (other than CGT events E4 and E10) that have happened to it.",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "Actual cost considering tax adjustments.",
          "format": "double",
          "type": "number"
        },
        "MarketValue": {
          "description": "Market Value of the security at the ValuationDate.",
          "format": "double",
          "type": "number"
        },
        "GrossGain": {
          "description": "Equal to the Market value minus the Adjusted cost. Shows the gain before any discounting or indexing is applied.",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "The net of the gross gain and discount applied based on amounts that have had the discount rate applied. If the portfolio is for a company, then the discounted rate applied will be zero. For an individual the discount rate applied is 50%.",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "Shows the gain between the indexed cost and the market value, if applicable.",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "Equal to the gross gain if applicable.  Applies if the asset was purchased within the last 12 months relative to the as at date requested for this section.",
          "format": "double",
          "type": "number"
        },
        "CGTGain": {
          "description": "Calculated based on what is optimal for the disposal method selected.",
          "format": "double",
          "type": "number"
        },
        "CGTLoss": {
          "description": "Applicable if there is a loss on a tax parcel and the purchase date is post 19 September 1985.",
          "format": "double",
          "type": "number"
        },
        "CGTExemptGainLoss": {
          "description": "The gross gain or loss on tax parcels with that are CGT exempt, including those with a purchase date before the CGT legislation applied.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.UnrealisedCGTData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.UnrealisedCGTData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.UnrealisedCGTData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "ValuationDate": {
          "description": "Date used to display the data.",
          "format": "date-time",
          "type": "string"
        },
        "ParcelCount": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.ReturnCount"
        },
        "Parcels": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.UnrealisedCGTParcel"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.UnrealisedCGTParcel": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "TaxDate": {
          "description": "The date of the original purchase of the parcels, as used for tax purposes.",
          "format": "date-time",
          "type": "string"
        },
        "PurchaseDate": {
          "description": "Typically, this is the same as the Tax date unless a corporate action has occurred, such as a takeover, where CGT rollover relief applies.",
          "format": "date-time",
          "type": "string"
        },
        "Quantity": {
          "description": "The number of units or shares held for each tax parcel.",
          "format": "double",
          "type": "number"
        },
        "CostBaseUnknown": {
          "description": "0 (Cost base known) or 1 (Cost base unknown) for the holding.",
          "format": "int32",
          "type": "integer"
        },
        "ActualCost": {
          "description": "The amount the parcel was purchased for less any GST refundable amount.",
          "format": "double",
          "type": "number"
        },
        "TaxDeferredAmount": {
          "description": "Amount within the parcel that is tax deferred.",
          "format": "double",
          "type": "number"
        },
        "TaxFreeAmount": {
          "description": "Amount within the parcel that is tax free.",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "The actual cost adjusted for any corporate actions, such as tax deferred distributions, or subsequent transactions.",
          "format": "double",
          "type": "number"
        },
        "IndexedCost": {
          "description": "If the security was acquired prior to 30/09/1999 and was held for more than one year, the cost base is increased by applying an indexation factor based on increase in CPI.",
          "format": "double",
          "type": "number"
        },
        "MarketValue": {
          "description": "The amount the parcel is worth using the current market price.",
          "format": "double",
          "type": "number"
        },
        "GrossGain": {
          "description": "Equal to the Market value minus the Adjusted cost. Shows the gain before any discounting or indexing is applied.",
          "format": "double",
          "type": "number"
        },
        "OptimalCGTCalculationMethod": {
          "description": "The disposal method selected to calculate CGT gains.",
          "type": "string"
        },
        "DiscountedGain": {
          "description": "The net of the gross gain and discount applied based on amounts that have had the discount rate applied. If the portfolio is for a company, then the discounted rate applied will be zero. For an individual the discount rate applied is 50%.",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "Shows the gain between the indexed cost and the market value, if applicable.",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "Equal to the gross gain if applicable.  Applies if the asset was purchased within the last 12 months relative to the as at date requested for this section.",
          "format": "double",
          "type": "number"
        },
        "CGTGain": {
          "description": "Calculated based on what is optimal for the disposal method selected.",
          "format": "double",
          "type": "number"
        },
        "CGTLoss": {
          "description": "Applicable if there is a loss on a tax parcel and the purchase date is post 19 September 1985.",
          "format": "double",
          "type": "number"
        },
        "CGTExemptGainLoss": {
          "description": "The gross gain or loss on tax parcels with that are CGT exempt, including those with a purchase date before the CGT legislation applied.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.RealisedCgtSummaryData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.RealisedCgtSummaryData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.RealisedCgtSummaryData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "ValuationDate": {
          "description": "Date used to display the data.",
          "format": "date-time",
          "type": "string"
        },
        "RealisedCGT": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.TaxSummary"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.TaxSummary": {
      "properties": {
        "TaxEntityType": {
          "description": "Recorded against the portfolio and used in CGT calculations.",
          "type": "string"
        },
        "LossesCarriedForward": {
          "description": "Any losses from the prior years that have been carried forward.",
          "format": "double",
          "type": "number"
        },
        "LossesCurrentYear": {
          "description": "The total amount of losses incurred from asset disposals during the tax year.",
          "format": "double",
          "type": "number"
        },
        "CGTDisposalsDiscounted": {
          "description": "Disposal amounts that have had the discount rate applied.",
          "format": "double",
          "type": "number"
        },
        "CGTDisposalsIndexed": {
          "description": "Shows the gain between the indexed cost and the disposal value, if applicable.",
          "format": "double",
          "type": "number"
        },
        "CGTDisposalsOther": {
          "description": "Applies if the asset was disposed within 12 months of acquisition.",
          "format": "double",
          "type": "number"
        },
        "CGTDistributionsDiscounted": {
          "description": "Distribution amounts that have had the discount rate applied.",
          "format": "double",
          "type": "number"
        },
        "CGTDistributionsIndexed": {
          "description": "Shows the gain between the indexed cost and the disposal value, if applicable.",
          "format": "double",
          "type": "number"
        },
        "CGTDistributionsOther": {
          "description": "Applies if the asset was disposed within 12 months of acquisition.",
          "format": "double",
          "type": "number"
        },
        "LossesAppliedDiscounted": {
          "description": "Losses attributable against discounted gains.",
          "format": "double",
          "type": "number"
        },
        "LossesAppliedIndexed": {
          "description": "Losses attributable against indexed gains.",
          "format": "double",
          "type": "number"
        },
        "LossesAppliedOther": {
          "description": "Losses attributable against other gains.",
          "format": "double",
          "type": "number"
        },
        "DiscountApplied": {
          "description": "The amount of discount allowable.",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLoss": {
          "description": "The portfolio's net capital gain (or loss) for the tax year.",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLossDiscounted": {
          "description": "The portfolio's net capital gain (or loss) related to discounting.",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLossIndexed": {
          "description": "The portfolio's net capital gain (or loss) related to indexing.",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLossOther": {
          "description": "The portfolio's net capital gain (or loss) not relating to discounting or indexing.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.RealisedCgtData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.RealisedCgtData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.RealisedCgtData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "ValuationDate": {
          "description": "Date used to display the data.",
          "format": "date-time",
          "type": "string"
        },
        "CGTAssetDisposals": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.RealisedCgtAssetDisposal"
          },
          "type": "array"
        },
        "TaxFreeAndTaxDeferredAmounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.TaxFreeAndTaxDeferredAmount"
          },
          "type": "array"
        },
        "TrustCGTDistributions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.TrustCgtDistribution"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.RealisedCgtAssetDisposal": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "TaxDate": {
          "description": "The date of the original purchase of the parcels, as used for tax purposes.",
          "format": "date-time",
          "type": "string"
        },
        "PurchaseDate": {
          "description": "Typically, this is the same as the Tax date unless a corporate action has occurred, such as a takeover, where CGT rollover relief applies.",
          "format": "date-time",
          "type": "string"
        },
        "SaleDate": {
          "description": "The disposal date.",
          "format": "date-time",
          "type": "string"
        },
        "Quantity": {
          "description": "The number of units or shares disposed.",
          "format": "double",
          "type": "number"
        },
        "ActualCost": {
          "description": "The amount the parcel was purchased for less any GST refundable amount.",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "The actual cost adjusted for any corporate actions, such as tax deferred distributions, or subsequent transactions.",
          "format": "double",
          "type": "number"
        },
        "TaxFreeAmount": {
          "description": "Amount within the parcel that is tax free.",
          "format": "double",
          "type": "number"
        },
        "IndexedCost": {
          "description": "If the security was acquired prior to 30/09/1999 and was held for more than one year, the cost base is increased by applying an indexation factor based on increase in CPI.",
          "format": "double",
          "type": "number"
        },
        "SaleProceeds": {
          "description": "The amount the parcel was sold for.",
          "format": "double",
          "type": "number"
        },
        "GrossGain": {
          "description": "Equal to the Market value minus the Adjusted cost. Shows the gain before any discounting or indexing is applied.",
          "format": "double",
          "type": "number"
        },
        "OptimalCGTCalculationMethod": {
          "description": "The disposal method selected to calculate CGT gains.",
          "type": "string"
        },
        "DiscountedGain": {
          "description": "The net of the gross gain and discount applied based on amounts that have had the discount rate applied. If the portfolio is for a company, then the discounted rate applied will be zero. For an individual the discount rate applied is 50%.",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "Shows the gain between the indexed cost and the market value, if applicable.",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "Equal to the gross gain if applicable.  Applies if the asset was purchased within the last 12 months relative to the as at date requested for this section.",
          "format": "double",
          "type": "number"
        },
        "CGTGain": {
          "description": "Calculated based on what is optimal for the disposal method selected.",
          "format": "double",
          "type": "number"
        },
        "CGTLoss": {
          "description": "Applicable if there is a loss on a tax parcel and the purchase date is post 19 September 1985.",
          "format": "double",
          "type": "number"
        },
        "PreCGTGainLoss": {
          "description": "Gain if Pre-CGT calculation method is selected.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.TaxFreeAndTaxDeferredAmount": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "TaxDate": {
          "description": "The date of the original purchase of the parcels, as used for tax purposes.",
          "format": "date-time",
          "type": "string"
        },
        "PurchaseDate": {
          "description": "Typically, this is the same as the Tax date unless a corporate action has occurred, such as a takeover, where CGT rollover relief applies.",
          "format": "date-time",
          "type": "string"
        },
        "SaleDate": {
          "description": "The disposal date.",
          "format": "date-time",
          "type": "string"
        },
        "Quantity": {
          "description": "The number of units or shares disposed.",
          "format": "double",
          "type": "number"
        },
        "ActualCost": {
          "description": "The amount the parcel was purchased for less any GST refundable amount.",
          "format": "double",
          "type": "number"
        },
        "TaxDeferred": {
          "description": "The tax deferred amount for the Realised CGT position.",
          "format": "double",
          "type": "number"
        },
        "TaxFree": {
          "description": "The tax free amount for the Realised CGT position.",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "The actual cost adjusted for any corporate actions, such as tax deferred distributions, or subsequent transactions.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.TrustCgtDistribution": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "SecurityDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "TaxDate": {
          "description": "The date of the original purchase of the parcels, as used for tax purposes.",
          "format": "date-time",
          "type": "string"
        },
        "GrossGain": {
          "description": "Equal to the Market value minus the Adjusted cost. Shows the gain before any discounting or indexing is applied.",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "The net of the gross gain and discount applied based on amounts that have had the discount rate applied. If the portfolio is for a company, then the discounted rate applied will be zero. For an individual the discount rate applied is 50%.",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "Shows the gain between the indexed cost and the market value, if applicable.",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "Equal to the gross gain if applicable.  Applies if the asset was purchased within the last 12 months relative to the as at date requested for this section.",
          "format": "double",
          "type": "number"
        },
        "CGTGainLoss": {
          "description": "The CGT gain is calculated based on what is optimal for the disposal method selected. In some cases the indexed gain is used to optimise the use of losses. The CGT gain calculated from a less than optimal method is shown in italics for information purposes only and is excluded from the totals for the portfolio. NA is shown if a calculation method is not applicable.",
          "format": "double",
          "type": "number"
        },
        "PreCGTGainLoss": {
          "description": "Gain if Pre-CGT calculation method is selected.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.TransactionsData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.TransactionsData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.TransactionsData": {
      "properties": {
        "TransactionCount": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.ReturnCount"
        },
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "FromDate": {
          "description": "The from date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The to date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "Transactions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Transaction"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Transaction": {
      "properties": {
        "TransactionId": {
          "description": "The unique identifier of the transaction. (**Value might change subject to database table reseeding**)",
          "format": "int32",
          "type": "integer"
        },
        "Asset": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "AssetDescription": {
          "description": "A description of the security.",
          "type": "string"
        },
        "ExchangeCode": {
          "description": "The exchange code of the security.",
          "type": "string"
        },
        "TransactionDate": {
          "description": "The date on which the transaction occurred.",
          "format": "date-time",
          "type": "string"
        },
        "SettlementDate": {
          "description": "The date on which the transaction occurred.",
          "format": "date-time",
          "type": "string"
        },
        "EntryDate": {
          "description": "The date on which the transaction was first uploaded to our system.",
          "format": "date-time",
          "type": "string"
        },
        "AmendmentDate": {
          "description": "The latest date on which the transaction has been updated.",
          "format": "date-time",
          "type": "string"
        },
        "TransactionType": {
          "description": "A categorised type of the transaction.",
          "type": "string"
        },
        "Quantity": {
          "description": "The number of units or shares disposed.",
          "format": "double",
          "type": "number"
        },
        "AveragePrice": {
          "description": "Net Amount divided by Quantity.",
          "format": "double",
          "type": "number"
        },
        "NetAmount": {
          "description": "This value should be adjusted (increased for a buy, decreased for a sell) for any brokerage, GST or other charges paid to transact.",
          "format": "double",
          "type": "number"
        },
        "Unconfirmed": {
          "description": "Generated transactions that have not been confirmed.",
          "type": "string"
        },
        "CostBaseUnknown": {
          "description": "0 (Cost base known) or 1 (Cost base unknown) for the holding.",
          "type": "string"
        },
        "DisposalMethod": {
          "description": "Tax method used on the security disposal.",
          "type": "string"
        },
        "Narration": {
          "description": "Displays any notes that have added to the transaction.",
          "type": "string"
        },
        "BrokerageIncGST": {
          "description": "The total of any brokerage for the transaction including GST.",
          "format": "double",
          "type": "number"
        },
        "BrokerageGST": {
          "description": "The GST amount of any brokerage for the transaction.",
          "format": "double",
          "type": "number"
        },
        "GSTClaimable": {
          "description": "The total of any GST amount that is payable.",
          "format": "double",
          "type": "number"
        },
        "Broker": {
          "description": "The name of the broker against the transaction.",
          "type": "string"
        },
        "TradedCurrency": {
          "description": "For International Investments. Displays the currency in which the asset was traded.",
          "type": "string"
        },
        "TradedCurrencyAmount": {
          "description": "Displays the amount traded in an international currency.",
          "format": "double",
          "type": "number"
        },
        "TradedCurrencyAveragePrice": {
          "description": "TradedCurrencyAmount divided by Quantity.",
          "format": "double",
          "type": "number"
        },
        "SettlementCurrency": {
          "description": "Displays the currency in which the trade was settled.",
          "type": "string"
        },
        "SettlementCurrencyAmount": {
          "description": "Displays the amount settled in an international currency.",
          "format": "double",
          "type": "number"
        },
        "SettlementCurrencyAveragePrice": {
          "description": "SettlementCurrencyAmount divided by Quantity.",
          "format": "double",
          "type": "number"
        },
        "BuyBack": {
          "description": "If the transaction is classified as a buyback.",
          "type": "string"
        },
        "DeemedAmount": {
          "description": "The buyback capital value applied for CGT purposes",
          "format": "double",
          "type": "number"
        },
        "ContractNoteRef": {
          "description": "Unique contract note reference number.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.CashTransactionsData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.CashTransactionsData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.CashTransactionsData": {
      "properties": {
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "FromDate": {
          "description": "The from date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The to date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "CashBooks": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.CashBook"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.CashBook": {
      "properties": {
        "Summary": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.CashSummary"
        },
        "Transactions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.CashTransaction"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.CashSummary": {
      "properties": {
        "CashBookCode": {
          "description": "The code of the cashbook.",
          "type": "string"
        },
        "CashBookDescription": {
          "description": "A description of the cashbook.",
          "type": "string"
        },
        "Currency": {
          "description": "Denominated currency of the cashbook transactions.",
          "type": "string"
        },
        "OpeningBalance": {
          "description": "Cashbook balance at the FromDate.",
          "format": "double",
          "type": "number"
        },
        "Deposits": {
          "description": "Sum of all credit type transactions for the cashbook.",
          "format": "double",
          "type": "number"
        },
        "Withdrawals": {
          "description": "Sum of all debit type transactions for the cashbook.",
          "format": "double",
          "type": "number"
        },
        "ClosingBalance": {
          "description": "Cashbook balance at the ToDate.",
          "format": "double",
          "type": "number"
        },
        "ClosingBalancePortfolioCurency": {
          "description": "ClosingBalance of the cashbook in the denominated Portfolio Currency.",
          "format": "double",
          "type": "number"
        },
        "ClosingForexRate": {
          "description": "The FX rate used to calculate the ClosingBalancePortfolioCurrency value.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.CashTransaction": {
      "properties": {
        "TransactionId": {
          "description": "The unique identifier of the transaction. (**Value might change subject to database table reseeding**)",
          "format": "int32",
          "type": "integer"
        },
        "TransactionDate": {
          "description": "The date on which the transaction occurred.",
          "format": "date-time",
          "type": "string"
        },
        "EntryDate": {
          "description": "The date on which the transaction was first uploaded to our system.",
          "format": "date-time",
          "type": "string"
        },
        "AmendmentDate": {
          "description": "The latest date on which the transaction has been updated.",
          "format": "date-time",
          "type": "string"
        },
        "Currency": {
          "description": "Denominated currency of the transaction.",
          "type": "string"
        },
        "TransactionType": {
          "description": "A categorised type of the transaction.",
          "type": "string"
        },
        "Narration": {
          "description": "Displays any notes that have added to the transaction.",
          "type": "string"
        },
        "Deposit": {
          "description": "The amount if this transaction is a credit type.",
          "format": "double",
          "type": "number"
        },
        "Withdrawal": {
          "description": "The amount if this transaction is a debit type.",
          "format": "double",
          "type": "number"
        },
        "ValuePortfolioCurrency": {
          "description": "Value of the transaction in the denominated Portfolio Currency.",
          "format": "double",
          "type": "number"
        },
        "Balance": {
          "description": "The balance of the cash book after the transaction has been credited or debited.",
          "format": "double",
          "type": "number"
        },
        "GLCode": {
          "description": "GLCode of the transaction.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Implementation.ResponseGeneric[PraemiumAPI.Public.Contract.UnsettledTransactionsData]": {
      "properties": {
        "ResponseStatus": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Implementation.ResponseStatus"
        },
        "ResponseData": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.UnsettledTransactionsData"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.UnsettledTransactionsData": {
      "properties": {
        "TransactionCount": {
          "description": "",
          "$ref": "#/definitions/PraemiumAPI.Public.Contract.ReturnCount"
        },
        "InternalID": {
          "description": "The InternalID of the Portfolio.",
          "format": "int32",
          "type": "integer"
        },
        "FromDate": {
          "description": "The from date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The to date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "Transactions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.UnsettledTransaction"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.UnsettledTransaction": {
      "properties": {
        "Asset": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "TransactionCode": {
          "description": "A categorised type of the transaction.",
          "type": "string"
        },
        "TransactionDescription": {
          "description": "Transaction code description.",
          "type": "string"
        },
        "TransactionDate": {
          "description": "The date on which the transaction occurred.",
          "format": "date-time",
          "type": "string"
        },
        "SettlementDate": {
          "description": "The date on which the transaction occurred.",
          "format": "date-time",
          "type": "string"
        },
        "Quantity": {
          "description": "The number of units or shares disposed.",
          "format": "double",
          "type": "number"
        },
        "NetAmount": {
          "description": "This value should be adjusted (increased for a buy, decreased for a sell) for any brokerage, GST or other charges paid to transact.",
          "format": "double",
          "type": "number"
        },
        "AveragePrice": {
          "description": "Net Amount divided by Quantity.",
          "format": "double",
          "type": "number"
        },
        "DisposalMethod": {
          "description": "Tax method used on the security disposal.",
          "type": "string"
        },
        "Narration": {
          "description": "Displays any notes that have added to the transaction.",
          "type": "string"
        },
        "ContractNoteRef": {
          "description": "Unique contract note reference number.",
          "type": "string"
        },
        "Brokerage": {
          "description": "Total of any brokerage for the transaction.",
          "format": "double",
          "type": "number"
        },
        "GST": {
          "description": "GST amount of any brokerage for the transaction.",
          "format": "double",
          "type": "number"
        },
        "OtherCharges": {
          "description": "Total of any other charges (eg. international transaction processing fees) for the transaction.",
          "format": "double",
          "type": "number"
        },
        "OtherChargesGST": {
          "description": "GST amount of any other charges for the transaction.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.DividendReinvestmentDetail": {
      "properties": {
        "SecurityCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "Exchange": {
          "description": "The exchange code of the security.",
          "type": "string"
        },
        "DRPType": {
          "description": "Either DRP (Dividend Reinvestment Plan) or BSP (Bonus Share Plan).",
          "type": "string"
        },
        "FromDate": {
          "description": "The from date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "The to date used when calculating data for the request.",
          "format": "date-time",
          "type": "string"
        },
        "MaxSharesParticipating": {
          "description": "The number of shares held that are requested to participate in the reinvestment plan.",
          "format": "double",
          "type": "number"
        },
        "PercentSharesParticipating": {
          "description": "The percentage of the DRP to take as shares. Note that this cannot be used in conjunction with MaxSharesParticipating.",
          "format": "double",
          "type": "number"
        },
        "ExcludeFromDRP": {
          "description": "Whether the security is excluded from the portfolio-wide reinvestment plan.",
          "type": "boolean"
        },
        "CreatedDate": {
          "description": "Date the record was created.",
          "format": "date-time",
          "type": "string"
        },
        "UpdatedDate": {
          "description": "Date the record was updated.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.UnmatchedTransactionResponse": {
      "properties": {
        "PortfolioID": {
          "description": "The PortfolioID of the Portfolio.",
          "type": "string"
        },
        "UnmatchedType": {
          "description": "The type of unmatched transaction: Cash, Income, Trade or Expense.",
          "type": "string"
        },
        "AssetCode": {
          "description": "The security code of the security.",
          "type": "string"
        },
        "TransactionTypeCode": {
          "description": "Type code of the unmatched transaction.",
          "type": "string"
        },
        "AccrualDate": {
          "description": "The accrual date of the unmatched transaction if applicable.",
          "type": "string"
        },
        "CashDate": {
          "description": "The cash date of the unmatched transaction if applicable.",
          "type": "string"
        },
        "ExpectedCashAmount": {
          "description": "The expected cash amount of the unmatched transaction.",
          "format": "double",
          "type": "number"
        },
        "SettlementValue": {
          "description": "Displays the value settled in Australian dollar.",
          "format": "double",
          "type": "number"
        },
        "SettlementCurrency": {
          "description": "Displays the currency in which the trade was settled.",
          "type": "string"
        },
        "Notes": {
          "description": "Notes attached to the transaction.",
          "type": "string"
        },
        "Qty": {
          "description": "The number of units or shares disposed.",
          "format": "double",
          "type": "number"
        },
        "ForeignTaxPaid": {
          "description": "The foreign tax paid for the unmatched transaction if applicable.",
          "format": "double",
          "type": "number"
        },
        "NativeCurrency": {
          "description": "The native currency of the unmatched transaction.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.TrusteeApplicantCreateResult": {
      "properties": {
        "ValidationMessage": {
          "description": "Only displayed on error.",
          "type": "string"
        },
        "CreationStatus": {
          "description": "0 if successful. 1 if unsuccessful.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ]
        },
        "Signatories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PraemiumAPI.Public.Contract.Managed.Signatory"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "PraemiumAPI.Public.Contract.Managed.Signatory": {
      "properties": {
        "Id": {
          "description": "Praemium user login to filter returned data based on the user’s Portfolio access.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "ApplicantCreate": {
      "properties": {
        "Type": {
          "description": "Applicant type. This endpoint supports Individual applicants (Type 1). For Corporate Applicants, use the /api/TrusteeApplicants endpoint.",
          "format": "int32",
          "type": "integer"
        },
        "Applicant": {
          "description": "Contains the applicant data. When we have more types, the contents will be customisable based on Applicant.Type.",
          "$ref": "#/definitions/Applicant",
          "type": "object"
        }
      },
      "required": [
        "Type",
        "Applicant"
      ],
      "type": "object"
    },
    "Applicant": {
      "properties": {
        "AdviserId": {
          "description": "The user ID that you have been provided with.",
          "type": "string"
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "Name": {
          "description": "",
          "$ref": "#/definitions/ApplicantName",
          "type": "object"
        },
        "DateOfBirth": {
          "description": "Date of birth of the applicant.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "E-mail address of the applicant.",
          "type": "string"
        },
        "Phone": {
          "description": "Primary contact number.",
          "type": "string"
        },
        "PhoneOther": {
          "description": "Secondary contact number.",
          "type": "string"
        },
        "Addresses": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApplicantAddress"
          },
          "type": "array"
        },
        "IsSignatory": {
          "description": "Whether the applicant is a signatory on the account. We require one signatory for individual and SuperSMA accounts, and all joint account holders must be signatories.",
          "type": "boolean"
        },
        "SignatureImage": {
          "description": "A base64 string representing an image of the applicant's signature. To prevent distortion of the image when it is printed, please ensure the width of the image is five times the height.",
          "type": "string"
        },
        "TaxRateElection": {
          "description": "Praemium code for the applicant's tax status - RTFN = Resident with TFN, RABN = Resident with ABN, NRWT = Non resident of Australia, NTFN = Resident of Australia without a TFN.",
          "type": "string"
        },
        "TaxDomicileCountryCode": {
          "description": "ISO alpha-3 code for the country where the applicant is resident for tax purposes.",
          "type": "string"
        },
        "CitizenshipCountryCode": {
          "description": "ISO alpha-3 code for the applicant's country of citizenship.",
          "type": "string"
        },
        "Identification": {
          "description": "",
          "items": {
            "$ref": "#/definitions/ApplicantIdentification"
          },
          "type": "array"
        },
        "Sex": {
          "description": "M = Male, F = Female.",
          "type": "string"
        },
        "IsPoliticallyExposedPerson": {
          "description": "Whether contact is politically exposed.",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "If contact is politically exposed, details must be supplied.",
          "type": "string"
        }
      },
      "required": [
        "AdviserId",
        "AccountId",
        "Name",
        "DateOfBirth",
        "Email",
        "Phone",
        "IsSignatory",
        "TaxRateElection",
        "TaxDomicileCountryCode",
        "CitizenshipCountryCode"
      ],
      "type": "object"
    },
    "ApplicantName": {
      "properties": {
        "First": {
          "description": "First name.",
          "type": "string"
        },
        "Last": {
          "description": "Last name.",
          "type": "string"
        },
        "Title": {
          "description": "Title: Mr, Mrs, Ms, Miss, Doctor, Lady, Prof and Sir.",
          "type": "string"
        }
      },
      "required": [
        "First",
        "Last",
        "Title"
      ],
      "type": "object"
    },
    "ApplicantAddress": {
      "properties": {
        "Type": {
          "description": "Home = 0, Office = 1, Mailing = 2, PrincipalPlaceOfBusiness = 3.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ]
        },
        "Line1": {
          "description": "Address line 1.",
          "type": "string"
        },
        "Line2": {
          "description": "Address line 2.",
          "type": "string"
        },
        "Line3": {
          "description": "Address line 3.",
          "type": "string"
        },
        "SuburbCounty": {
          "description": "Suburb as associated with the PostCode.",
          "type": "string"
        },
        "TownCityState": {
          "description": "Town or city or state.",
          "type": "string"
        },
        "PostCode": {
          "description": "Corresponding postcode to Addresses.SuburbCountry value.",
          "type": "string"
        },
        "CountryCode": {
          "description": "ISO alpha-3 code for the country the address is in.",
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Line1",
        "SuburbCounty",
        "PostCode"
      ],
      "type": "object"
    },
    "ApplicantIdentification": {
      "properties": {
        "IdNumber": {
          "description": "TFN or ABN of the applicant. For SuperSMA accounts we require a TFN.",
          "type": "string"
        },
        "Type": {
          "description": "The type of identification. 0=TIN, 4=ABN, 5=TFN",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            4,
            5
          ]
        }
      },
      "type": "object"
    },
    "AccountCreate": {
      "properties": {
        "Type": {
          "description": "SMA = 1, SuperSMA Accumulation = 4, SuperSMA Pension (TTR - Transition to retirement) = 5 SuperSMA Pension (ABP - Account based pension) = 6",
          "format": "int32",
          "type": "integer"
        },
        "Account": {
          "description": "Contains the account data.",
          "$ref": "#/definitions/Account",
          "type": "object"
        }
      },
      "required": [
        "Type",
        "Account"
      ],
      "type": "object"
    },
    "Account": {
      "properties": {
        "Name": {
          "description": "Account name.",
          "type": "string"
        },
        "AdviserId": {
          "description": "The user ID that you have been provided with.",
          "type": "string"
        },
        "PdsId": {
          "description": "PDS ID to link the account to as returned by the /api/pds/ endpoint.",
          "type": "string"
        },
        "EntityType": {
          "description": "Account Entity Type: 0 = Individual (use for Individual Managed account and SuperSMA), 1 = Trust, 2 = Company, 4 = SMSF, 5 = Joint.",
          "format": "int32",
          "type": "integer"
        },
        "CurrencyCode": {
          "description": "Base currency of the account. Currently must be set to AUD.",
          "type": "string"
        },
        "BankAccounts": {
          "description": "Contains the details of the external bank account(s) used for cash flows. An account must have at least one bank account linked to the mandatory bank account usages in the PDS, except for SuperSMA accumulation accounts which should not have any linked bank accounts.",
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "type": "array"
        },
        "Models": {
          "description": "Investment model selection.",
          "items": {
            "$ref": "#/definitions/Model"
          },
          "type": "array"
        },
        "Fees": {
          "description": "Contains any fees to be overridden from the default PDS value.",
          "items": {
            "$ref": "#/definitions/Fee"
          },
          "type": "array"
        },
        "FeeConsent": {
          "description": "Contains fee consent data.",
          "$ref": "#/definitions/FeeConsent",
          "type": "object"
        },
        "AccountSetup": {
          "description": "To be used for regular SMA accounts.",
          "$ref": "#/definitions/AccountSetup",
          "type": "object"
        },
        "RegularContributionAmount": {
          "description": "Regular contribution amount. (To be set if Account.BankAccounts.RegularContributionPlan is supplied). **Not available for SuperSMA Pension**",
          "format": "double",
          "type": "number"
        },
        "ContributionType": {
          "description": "Regular contribution Type for SuperSMA accumulation accounts. NonConcessionalPersonal = 21, NonConcessionalSpouse = 22, NonConcessionalChild = 24. **Only available for SuperSMA Accumulation**",
          "format": "int32",
          "type": "integer",
          "enum": [
            21,
            22
          ]
        },
        "RegularWithdrawalAmount": {
          "description": "Regular contribution amount. (To be set if Account.BankAccounts.RegularContributionPlan is supplied). **Only available for SuperSMA Accumulation and SuperSMA Pension**",
          "format": "double",
          "type": "number"
        },
        "RegularWithdrawalFrequency": {
          "description": "Regular withdrawal frequency: Monthly = 1, Quarterly = 2, Semi-annually = 3, Annually = 4 **Only available for SuperSMA Accumulation and SuperSMA Pension**",
          "format": "int32",
          "type": "integer"
        },
        "FeeInstructions": {
          "description": "Model allocation to deduct fees.",
          "items": {
            "$ref": "#/definitions/InstructionAllocation"
          },
          "type": "array"
        },
        "IncomeInstructions": {
          "description": "Model allocation to reinvest income.",
          "items": {
            "$ref": "#/definitions/InstructionAllocation"
          },
          "type": "array"
        },
        "ContributionSources": {
          "description": "SuperSMA source of fund information. **Only available for SuperSMA Accumulation and SuperSMA Pension**",
          "items": {
            "$ref": "#/definitions/InflowsContributionSource"
          },
          "type": "array"
        },
        "Transfers": {
          "description": "Contains details on other SuperSMA account(s) to be transferred to this account. **Only available for SuperSMA Accumulation and SuperSMA Pension**",
          "items": {
            "$ref": "#/definitions/InflowsTransfer"
          },
          "type": "array"
        },
        "OtherContributions": {
          "description": "Contains details of other assets that will be used to fund this account. **Only available for SuperSMA Accumulation and SuperSMA Pension**",
          "items": {
            "$ref": "#/definitions/InflowsOtherContribution"
          },
          "type": "array"
        },
        "InitialInvestmentAmount": {
          "description": "For SuperSMA Accumulation accounts: the amount of cash that will be invested in the account. **Only available for SuperSMA Accumulation**",
          "format": "double",
          "type": "number"
        },
        "InitialInvestmentType": {
          "description": "For SuperSMA Accumulation accounts: NonConcessionalPersonal = 21, NonConcessionalSpouse = 22, NonConcessionalChild = 24, ExemptCGT15Year = 31, ExemptCGTRetirement = 32, ExemptPersonalInjuryElection = 33. **Only available for SuperSMA Accumulation**",
          "format": "int32",
          "type": "integer",
          "enum": [
            21,
            22,
            23,
            31,
            32,
            33
          ]
        },
        "PaymentType": {
          "description": "Whether the pension payment will be (0) a specified amount; (1) the minimum amount; or (2) the maximum amount. **Only available for SuperSMA Pension**",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ]
        },
        "PaymentFrequency": {
          "description": "Payment frequency. Monthly = 1, ThreeMonthly = 3, SixMonthly= 6, Annually = 12. **Only available for SuperSMA Pension**",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            3,
            6,
            12
          ]
        },
        "PaymentAmount": {
          "description": "The payment amount paid from the pension account. **Only available for SuperSMA Pension**",
          "format": "double",
          "type": "number"
        },
        "Consolidation": {
          "description": "Establish an accumulation account. You can open an accumulation account in the same application alongside a pension account. **Only available for SuperSMA Pension**",
          "$ref": "#/definitions/InflowsConsolidation"
        },
        "AdviserServicesProvided": {
          "description": "The services provided by the adviser: Review of your account = 1, Strategic superannuation advice = 2, Investment advice on your account = 3 ,Contribution strategy = 4, Insurance in superannuation strategy = 5, Withdrawal advice (lump sum and/or pension) = 6.",
          "type": "array"
        }
      },
      "required": [
        "Name",
        "AdviserId",
        "PdsId",
        "EntityType",
        "AdviserServicesProvided"
      ],
      "type": "object"
    },
    "BankAccount": {
      "properties": {
        "BSB": {
          "description": "ABA Bank State Branch number.",
          "type": "string"
        },
        "AccountNumber": {
          "description": "Bank account number.",
          "type": "string"
        },
        "AccountName": {
          "description": "Bank account name.",
          "type": "string"
        },
        "CashContributions": {
          "description": "Bank account to be used for direct debit cash contributions.",
          "type": "boolean"
        },
        "SmaWithdrawals": {
          "description": "Bank account to be used for cash withdrawals.",
          "type": "boolean"
        },
        "PayoutIncome": {
          "description": "If PayoutIncome is false for all bank accounts, then income will be reinvested into the SMA account. Otherwise, the account with this property set to true will have income paid out.",
          "type": "boolean"
        },
        "FeeOffset": {
          "description": "Bank account to be used for direct debit fee top-up.",
          "type": "boolean"
        },
        "RegularContributionPlan": {
          "description": "Bank account to be used for direct debiting regular contribution plan.",
          "type": "boolean"
        },
        "RegularWithdrawal": {
          "description": "Bank account to be used for regular withdrawals.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Model": {
      "properties": {
        "ModelCode": {
          "description": "ModelCode as returned by the /api/pds endpoint.",
          "type": "string"
        },
        "ModelPercent": {
          "description": "Percentage to allocate to the model expressed as a decimal number. This must add to 100.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Fee": {
      "properties": {
        "Id": {
          "description": "Fee ID to override (valid IDs are returned by the PDS response).",
          "type": "string"
        },
        "FeeType": {
          "description": "Fee Type to override (valid types are returned by the PDS response).",
          "format": "int32",
          "type": "integer"
        },
        "Value": {
          "description": "Dollar or percentage amount.",
          "format": "double",
          "type": "number"
        },
        "IsPercent": {
          "description": "Controls if the fee is a percentage or dollar amount.",
          "type": "boolean"
        },
        "IncludesTax": {
          "description": "Controls if Fees.Value includes GST.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "FeeConsent": {
      "properties": {
        "Type": {
          "description": "Ongoing = 1, FixedTerm = 2, NotCharged = 3. For NotCharged only Establishment fee can be provided.",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ]
        },
        "AnniversaryDate": {
          "description": "Anniversary date of ongoing fee. (Cannot be used along with TermStartDate and TermEndDate)",
          "type": "date-time"
        },
        "TermStartDate": {
          "description": "Start date of fixed term fee. (Cannot be used along with AnniversaryDate)",
          "type": "date-time"
        },
        "TermEndDate": {
          "description": "End date of fixed term fee. (Cannot be used along with AnniversaryDate)",
          "type": "date-time"
        }
      },
      "type": "object"
    },
    "AccountSetup": {
      "properties": {
        "InitialInvestment": {
          "description": "Initial cash investment amount to invest in the account.",
          "format": "double",
          "type": "number"
        },
        "InitialTransferValue": {
          "description": "Estimated total in-specie value for transfers into the account.",
          "format": "double",
          "type": "number"
        },
        "CashInvestmentMethod": {
          "description": "Initial investment source. BPay = 1, Direct Debit = 2.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InstructionAllocation": {
      "properties": {
        "Code": {
          "description": "Model code.",
          "type": "string"
        },
        "Percent": {
          "description": "Model percentage.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InflowsContributionSource": {
      "properties": {
        "SourceOfContribution": {
          "description": "Contribution source.",
          "type": "string"
        },
        "ExpectedAmount": {
          "description": "Expected contribution amount to be transferred. Set if ContributionSources.EntireBalance is false.",
          "format": "double",
          "type": "number"
        },
        "EntireBalance": {
          "description": "Whether the entire balance of the external fund account will be transferred.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InflowsTransfer": {
      "properties": {
        "TransferFromAccountId": {
          "description": "Account ID of the other SuperSMA account to transfer to this account.",
          "type": "string"
        },
        "TransferMethod": {
          "description": "WholeAmountWithClose = 0, WholeAmountKeepOpen = 1, SpecifiedAmount = 2 - whether the source account will be kept open.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ]
        },
        "Amount": {
          "description": "If Account.Transfers.TransferMethod is WholeAmountKeepOpenSpecifiedAmount, the amount to be transferred.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InflowsOtherContribution": {
      "properties": {
        "ContributionType": {
          "description": "Source of funds. ConcessionalEmployee = 11, ConcessionalPersonal = 12, ConcessionalOtherFriendsAndFamily = 13, NonConcessionalPersonal = 21, NonConcessionalSpouse = 22, NonConcessionalFirstHomeSaverAccount = 23, NonConcessionalChild = 24, ExemptCgt15Year = 31, ExemptCgtRetirement = 32, ExemptPersonalInjuryElection = 33, OtherGovernmentCoContribution = 41, OtherLowIncomeSuperContribution = 42.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            11,
            12,
            13,
            21,
            22,
            23,
            31,
            32,
            33,
            41,
            42
          ]
        },
        "ExpectedAmount": {
          "description": "Expected other contribution amount to be transferred.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InflowsConsolidation": {
      "properties": {
        "UseExisting": {
          "description": "Link an existing SuperSMA accumulation account to the pension account.",
          "type": "boolean"
        },
        "AccountCode": {
          "description": "AccountCode of the linking SuperSMA Account.",
          "type": "string"
        },
        "CloseOnRollover": {
          "description": "Specifies whether the Account provided should be closed on successful rollover.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TrusteeApplicant": {
      "properties": {
        "AdviserId": {
          "description": "The user ID that you have been provided with.",
          "type": "string"
        },
        "AccountId": {
          "description": "AccountID of the SMA account. (prefixed with ‘AU’ for Australian accounts)",
          "type": "string"
        },
        "Name": {
          "description": "Corporation name.",
          "type": "string"
        },
        "TrusteeName": {
          "description": "Corporate trustee name. This is required if a trust or SMSF with a corporate trustee. **Only available for corporate applicants**",
          "type": "string"
        },
        "RegisteredNumber": {
          "description": "ABN of the Super Fund (rather than the corporate trustee) for corporate applicants, or TFN for an individual trustee.",
          "type": "string"
        },
        "ContactName": {
          "description": "Primary contact name. **Only available for corporate applicants**",
          "type": "string"
        },
        "ContactPhone": {
          "description": "Primary contact phone.",
          "type": "string"
        },
        "ContactEmail": {
          "description": "Primary contact email. **Only available for corporate applicants**",
          "type": "string"
        },
        "Addresses": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TrusteeApplicantAddress"
          },
          "type": "array"
        },
        "Signatories": {
          "description": "",
          "items": {
            "$ref": "#/definitions/IndividualSignatory"
          },
          "type": "array"
        }
      },
      "required": [
        "AdviserId",
        "AccountId",
        "Name",
        "TrusteeName"
      ],
      "type": "object"
    },
    "TrusteeApplicantAddress": {
      "properties": {
        "Type": {
          "description": "Home = 0, Office = 1, Mailing = 2, PrincipalPlaceOfBusiness = 3. We only need 0, and 2 if it is different.",
          "format": "int32",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ]
        },
        "Line1": {
          "description": "Address line 1.",
          "type": "string"
        },
        "Line2": {
          "description": "Address line 2.",
          "type": "string"
        },
        "Line3": {
          "description": "Address line 3.",
          "type": "string"
        },
        "SuburbCounty": {
          "description": "Suburb as associated with the PostCode.",
          "type": "string"
        },
        "TownCityState": {
          "description": "Town or city or state.",
          "type": "string"
        },
        "PostCode": {
          "description": "Corresponding postcode to Addresses.SuburbCountry value.",
          "type": "string"
        },
        "CountryCode": {
          "description": "ISO alpha-3 code for the country the address is in.",
          "type": "string"
        }
      },
      "required": [
        "Type",
        "Line1",
        "SuburbCounty",
        "PostCode"
      ],
      "type": "object"
    },
    "IndividualSignatory": {
      "properties": {
        "Name": {
          "description": "",
          "$ref": "#/definitions/TrusteeApplicantName",
          "type": "object"
        },
        "Email": {
          "description": "Signatory’s email.",
          "type": "string"
        },
        "Capacity": {
          "description": "Director = 1, Company Secretary = 3, Sole Director = 4, Signed Under Seal = 7 for Corporate Applicants. Trustee = 6 for individual applicants.",
          "format": "int32",
          "type": "integer",
          "enum": [
            1,
            3,
            4,
            7
          ]
        },
        "DateOfBirth": {
          "description": "Date of birth of the signatory.",
          "format": "date-time",
          "type": "string"
        },
        "TaxRateElection": {
          "description": "Praemium code for the applicant's tax status - RTFN = Resident with TFN, RABN = Resident with ABN, NRWT = Non resident of Australia, NTFN = Resident of Australia without a TFN.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TrusteeApplicantName": {
      "properties": {
        "First": {
          "description": "Signatory's first name.",
          "type": "string"
        },
        "Last": {
          "description": "Signatory's last name.",
          "type": "string"
        },
        "Title": {
          "description": "Signatory's title. Valid values are: Mr, Mrs, Ms, Miss, Doctor, Lady, Prof and Sir.",
          "type": "string"
        }
      },
      "required": [
        "First",
        "Last",
        "Title"
      ],
      "type": "object"
    }
  },
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Praemium Public API"
  },
  "host": "apitest.praemium.biz",
  "basePath": "/public",
  "schemes": [
    "https"
  ]
}